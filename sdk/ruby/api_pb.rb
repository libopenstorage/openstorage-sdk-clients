# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'google/api/annotations_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("api.proto", :syntax => :proto3) do
    add_message "openstorage.api.StorageResource" do
      optional :id, :string, 1
      optional :path, :string, 2
      optional :medium, :enum, 3, "openstorage.api.StorageMedium"
      optional :online, :bool, 4
      optional :iops, :uint64, 5
      optional :seq_write, :double, 6
      optional :seq_read, :double, 7
      optional :randRW, :double, 8
      optional :size, :uint64, 9
      optional :used, :uint64, 10
      optional :rotation_speed, :string, 11
      optional :last_scan, :message, 12, "google.protobuf.Timestamp"
      optional :metadata, :bool, 13
      optional :cache, :bool, 14
    end
    add_message "openstorage.api.StoragePool" do
      optional :ID, :int32, 1
      optional :Cos, :enum, 2, "openstorage.api.CosType"
      optional :Medium, :enum, 3, "openstorage.api.StorageMedium"
      optional :RaidLevel, :string, 4
      optional :TotalSize, :uint64, 7
      optional :Used, :uint64, 8
      map :labels, :string, :string, 9
      optional :uuid, :string, 10
      optional :last_operation, :message, 11, "openstorage.api.StoragePoolOperation"
    end
    add_message "openstorage.api.StoragePoolOperation" do
      optional :type, :enum, 1, "openstorage.api.SdkStoragePool.OperationType"
      optional :msg, :string, 2
      map :params, :string, :string, 3
      optional :status, :enum, 4, "openstorage.api.SdkStoragePool.OperationStatus"
    end
    add_message "openstorage.api.VolumeLocator" do
      optional :name, :string, 1
      map :volume_labels, :string, :string, 2
      optional :ownership, :message, 3, "openstorage.api.Ownership"
      optional :group, :message, 4, "openstorage.api.Group"
      repeated :volume_ids, :string, 5
    end
    add_message "openstorage.api.VolumeInspectOptions" do
      optional :deep, :bool, 1
    end
    add_message "openstorage.api.Source" do
      optional :parent, :string, 1
      optional :seed, :string, 2
    end
    add_message "openstorage.api.Group" do
      optional :id, :string, 1
    end
    add_message "openstorage.api.IoStrategy" do
      optional :async_io, :bool, 1
      optional :early_ack, :bool, 2
    end
    add_message "openstorage.api.Xattr" do
    end
    add_enum "openstorage.api.Xattr.Value" do
      value :UNSPECIFIED, 0
      value :COW_ON_DEMAND, 1
    end
    add_message "openstorage.api.ExportSpec" do
      optional :export_protocol, :enum, 1, "openstorage.api.ExportProtocol"
      optional :export_options, :string, 2
    end
    add_message "openstorage.api.NFSProxySpec" do
      optional :export_path, :string, 1
      optional :sub_path, :string, 2
    end
    add_message "openstorage.api.S3ProxySpec" do
      optional :bucket_name, :string, 1
    end
    add_message "openstorage.api.PXDProxySpec" do
      optional :id, :string, 1
    end
    add_message "openstorage.api.ProxySpec" do
      optional :proxy_protocol, :enum, 1, "openstorage.api.ProxyProtocol"
      optional :endpoint, :string, 2
      optional :nfs_spec, :message, 3, "openstorage.api.NFSProxySpec"
      optional :s3_spec, :message, 4, "openstorage.api.S3ProxySpec"
      optional :pxd_spec, :message, 5, "openstorage.api.PXDProxySpec"
    end
    add_message "openstorage.api.MountOptions" do
      map :options, :string, :string, 1
    end
    add_message "openstorage.api.FastpathReplState" do
      optional :dev_id, :uint64, 1
      optional :node_id, :uint32, 2
      optional :protocol, :enum, 3, "openstorage.api.FastpathProtocol"
      optional :acl, :bool, 4
      optional :exported_device, :string, 5
      optional :block, :bool, 6
      optional :target, :string, 7
      optional :exported, :bool, 8
      optional :imported, :bool, 9
      optional :devpath, :string, 10
    end
    add_message "openstorage.api.FastpathConfig" do
      optional :setup_on, :int32, 1
      optional :promote, :bool, 2
      optional :status, :enum, 3, "openstorage.api.FastpathStatus"
      repeated :replicas, :message, 4, "openstorage.api.FastpathReplState"
    end
    add_message "openstorage.api.ScanPolicy" do
      optional :trigger, :enum, 1, "openstorage.api.ScanPolicy.ScanTrigger"
      optional :action, :enum, 2, "openstorage.api.ScanPolicy.ScanAction"
    end
    add_enum "openstorage.api.ScanPolicy.ScanTrigger" do
      value :SCAN_TRIGGER_NONE, 0
      value :SCAN_TRIGGER_ON_MOUNT, 1
      value :SCAN_TRIGGER_ON_NEXT_MOUNT, 2
    end
    add_enum "openstorage.api.ScanPolicy.ScanAction" do
      value :SCAN_ACTION_NONE, 0
      value :SCAN_ACTION_SCAN_ONLY, 1
      value :SCAN_ACTION_SCAN_REPAIR, 2
    end
    add_message "openstorage.api.VolumeSpec" do
      optional :ephemeral, :bool, 1
      optional :size, :uint64, 2
      optional :format, :enum, 3, "openstorage.api.FSType"
      optional :block_size, :int64, 4
      optional :ha_level, :int64, 5
      optional :cos, :enum, 6, "openstorage.api.CosType"
      optional :io_profile, :enum, 7, "openstorage.api.IoProfile"
      optional :dedupe, :bool, 8
      optional :snapshot_interval, :uint32, 9
      map :volume_labels, :string, :string, 10
      optional :shared, :bool, 11
      optional :replica_set, :message, 12, "openstorage.api.ReplicaSet"
      optional :aggregation_level, :uint32, 13
      optional :encrypted, :bool, 14
      optional :passphrase, :string, 15
      optional :snapshot_schedule, :string, 16
      optional :scale, :uint32, 17
      optional :sticky, :bool, 18
      optional :group, :message, 21, "openstorage.api.Group"
      optional :group_enforced, :bool, 22
      optional :compressed, :bool, 23
      optional :cascaded, :bool, 24
      optional :journal, :bool, 25
      optional :sharedv4, :bool, 26
      optional :queue_depth, :uint32, 27
      optional :force_unsupported_fs_type, :bool, 28
      optional :nodiscard, :bool, 29
      optional :io_strategy, :message, 30, "openstorage.api.IoStrategy"
      optional :placement_strategy, :message, 31, "openstorage.api.VolumePlacementStrategy"
      optional :storage_policy, :string, 32
      optional :ownership, :message, 33, "openstorage.api.Ownership"
      optional :export_spec, :message, 34, "openstorage.api.ExportSpec"
      optional :fp_preference, :bool, 35
      optional :xattr, :enum, 36, "openstorage.api.Xattr.Value"
      optional :scan_policy, :message, 37, "openstorage.api.ScanPolicy"
      optional :mount_options, :message, 38, "openstorage.api.MountOptions"
      optional :sharedv4_mount_options, :message, 39, "openstorage.api.MountOptions"
      optional :proxy_spec, :message, 41, "openstorage.api.ProxySpec"
      optional :proxy_write, :bool, 40
    end
    add_message "openstorage.api.VolumeSpecUpdate" do
      optional :replica_set, :message, 12, "openstorage.api.ReplicaSet"
      optional :ownership, :message, 26, "openstorage.api.Ownership"
      optional :io_strategy, :message, 28, "openstorage.api.IoStrategy"
      oneof :size_opt do
        optional :size, :uint64, 2
      end
      oneof :ha_level_opt do
        optional :ha_level, :int64, 5
      end
      oneof :cos_opt do
        optional :cos, :enum, 6, "openstorage.api.CosType"
      end
      oneof :io_profile_opt do
        optional :io_profile, :enum, 7, "openstorage.api.IoProfile"
      end
      oneof :dedupe_opt do
        optional :dedupe, :bool, 8
      end
      oneof :snapshot_interval_opt do
        optional :snapshot_interval, :uint32, 9
      end
      oneof :shared_opt do
        optional :shared, :bool, 11
      end
      oneof :passphrase_opt do
        optional :passphrase, :string, 15
      end
      oneof :snapshot_schedule_opt do
        optional :snapshot_schedule, :string, 16
      end
      oneof :scale_opt do
        optional :scale, :uint32, 17
      end
      oneof :sticky_opt do
        optional :sticky, :bool, 18
      end
      oneof :group_opt do
        optional :group, :message, 19, "openstorage.api.Group"
      end
      oneof :journal_opt do
        optional :journal, :bool, 23
      end
      oneof :sharedv4_opt do
        optional :sharedv4, :bool, 24
      end
      oneof :queue_depth_opt do
        optional :queue_depth, :uint32, 25
      end
      oneof :nodiscard_opt do
        optional :nodiscard, :bool, 27
      end
      oneof :export_spec_opt do
        optional :export_spec, :message, 29, "openstorage.api.ExportSpec"
      end
      oneof :fastpath_opt do
        optional :fastpath, :bool, 30
      end
      oneof :xattr_opt do
        optional :xattr, :enum, 31, "openstorage.api.Xattr.Value"
      end
      oneof :scan_policy_opt do
        optional :scan_policy, :message, 32, "openstorage.api.ScanPolicy"
      end
      oneof :mount_opt do
        optional :mount_opt_spec, :message, 33, "openstorage.api.MountOptions"
      end
      oneof :sharedv4_mount_opt do
        optional :sharedv4_mount_opt_spec, :message, 34, "openstorage.api.MountOptions"
      end
      oneof :proxy_spec_opt do
        optional :proxy_spec, :message, 36, "openstorage.api.ProxySpec"
      end
      oneof :proxy_write_opt do
        optional :proxy_write, :bool, 35
      end
    end
    add_message "openstorage.api.VolumeSpecPolicy" do
      map :volume_labels, :string, :string, 7
      optional :replica_set, :message, 9, "openstorage.api.ReplicaSet"
      optional :size_operator, :enum, 50, "openstorage.api.VolumeSpecPolicy.PolicyOp"
      optional :ha_level_operator, :enum, 51, "openstorage.api.VolumeSpecPolicy.PolicyOp"
      optional :scale_operator, :enum, 52, "openstorage.api.VolumeSpecPolicy.PolicyOp"
      optional :snapshot_interval_operator, :enum, 53, "openstorage.api.VolumeSpecPolicy.PolicyOp"
      optional :io_strategy, :message, 55, "openstorage.api.IoStrategy"
      oneof :size_opt do
        optional :size, :uint64, 1
      end
      oneof :ha_level_opt do
        optional :ha_level, :int64, 2
      end
      oneof :cos_opt do
        optional :cos, :enum, 3, "openstorage.api.CosType"
      end
      oneof :io_profile_opt do
        optional :io_profile, :enum, 4, "openstorage.api.IoProfile"
      end
      oneof :dedupe_opt do
        optional :dedupe, :bool, 5
      end
      oneof :snapshot_interval_opt do
        optional :snapshot_interval, :uint32, 6
      end
      oneof :shared_opt do
        optional :shared, :bool, 8
      end
      oneof :passphrase_opt do
        optional :passphrase, :string, 10
      end
      oneof :snapshot_schedule_opt do
        optional :snapshot_schedule, :string, 11
      end
      oneof :scale_opt do
        optional :scale, :uint32, 12
      end
      oneof :sticky_opt do
        optional :sticky, :bool, 13
      end
      oneof :group_opt do
        optional :group, :message, 14, "openstorage.api.Group"
      end
      oneof :journal_opt do
        optional :journal, :bool, 15
      end
      oneof :sharedv4_opt do
        optional :sharedv4, :bool, 16
      end
      oneof :queue_depth_opt do
        optional :queue_depth, :uint32, 17
      end
      oneof :encrypted_opt do
        optional :encrypted, :bool, 18
      end
      oneof :aggregation_level_opt do
        optional :aggregation_level, :uint32, 19
      end
      oneof :nodiscard_opt do
        optional :nodiscard, :bool, 54
      end
      oneof :export_spec_opt do
        optional :export_spec, :message, 56, "openstorage.api.ExportSpec"
      end
      oneof :scan_policy_opt do
        optional :scan_policy, :message, 57, "openstorage.api.ScanPolicy"
      end
      oneof :mount_opt do
        optional :mount_opt_spec, :message, 58, "openstorage.api.MountOptions"
      end
      oneof :sharedv4_mount_opt do
        optional :sharedv4_mount_opt_spec, :message, 59, "openstorage.api.MountOptions"
      end
      oneof :proxy_spec_opt do
        optional :proxy_spec, :message, 61, "openstorage.api.ProxySpec"
      end
      oneof :proxy_write_opt do
        optional :proxy_write, :bool, 60
      end
    end
    add_enum "openstorage.api.VolumeSpecPolicy.PolicyOp" do
      value :Equal, 0
      value :Minimum, 1
      value :Maximum, 2
    end
    add_message "openstorage.api.ReplicaSet" do
      repeated :nodes, :string, 1
      repeated :pool_uuids, :string, 2
    end
    add_message "openstorage.api.RuntimeStateMap" do
      map :runtime_state, :string, :string, 1
    end
    add_message "openstorage.api.Ownership" do
      optional :owner, :string, 1
      optional :acls, :message, 2, "openstorage.api.Ownership.AccessControl"
    end
    add_message "openstorage.api.Ownership.PublicAccessControl" do
      optional :type, :enum, 1, "openstorage.api.Ownership.AccessType"
    end
    add_message "openstorage.api.Ownership.AccessControl" do
      map :groups, :string, :enum, 1, "openstorage.api.Ownership.AccessType"
      map :collaborators, :string, :enum, 2, "openstorage.api.Ownership.AccessType"
      optional :public, :message, 3, "openstorage.api.Ownership.PublicAccessControl"
    end
    add_enum "openstorage.api.Ownership.AccessType" do
      value :Read, 0
      value :Write, 1
      value :Admin, 2
    end
    add_message "openstorage.api.Volume" do
      optional :id, :string, 1
      optional :source, :message, 2, "openstorage.api.Source"
      optional :group, :message, 3, "openstorage.api.Group"
      optional :readonly, :bool, 4
      optional :locator, :message, 5, "openstorage.api.VolumeLocator"
      optional :ctime, :message, 6, "google.protobuf.Timestamp"
      optional :spec, :message, 7, "openstorage.api.VolumeSpec"
      optional :usage, :uint64, 8
      optional :last_scan, :message, 9, "google.protobuf.Timestamp"
      optional :format, :enum, 10, "openstorage.api.FSType"
      optional :status, :enum, 11, "openstorage.api.VolumeStatus"
      optional :state, :enum, 12, "openstorage.api.VolumeState"
      optional :attached_on, :string, 13
      optional :attached_state, :enum, 14, "openstorage.api.AttachState"
      optional :device_path, :string, 15
      optional :secure_device_path, :string, 16
      repeated :attach_path, :string, 17
      map :attach_info, :string, :string, 18
      repeated :replica_sets, :message, 19, "openstorage.api.ReplicaSet"
      repeated :runtime_state, :message, 20, "openstorage.api.RuntimeStateMap"
      optional :error, :string, 21
      repeated :volume_consumers, :message, 22, "openstorage.api.VolumeConsumer"
      optional :fs_resize_required, :bool, 23
      optional :attach_time, :message, 24, "google.protobuf.Timestamp"
      optional :detach_time, :message, 25, "google.protobuf.Timestamp"
      optional :fpConfig, :message, 26, "openstorage.api.FastpathConfig"
      optional :last_scan_fix, :message, 27, "google.protobuf.Timestamp"
      optional :last_scan_status, :enum, 28, "openstorage.api.FilesystemHealthStatus"
      optional :mount_options, :message, 29, "openstorage.api.MountOptions"
      optional :sharedv4_mount_options, :message, 30, "openstorage.api.MountOptions"
    end
    add_message "openstorage.api.Stats" do
      optional :reads, :uint64, 1
      optional :read_ms, :uint64, 2
      optional :read_bytes, :uint64, 3
      optional :writes, :uint64, 4
      optional :write_ms, :uint64, 5
      optional :write_bytes, :uint64, 6
      optional :io_progress, :uint64, 7
      optional :io_ms, :uint64, 8
      optional :bytes_used, :uint64, 9
      optional :interval_ms, :uint64, 10
    end
    add_message "openstorage.api.CapacityUsageInfo" do
      optional :exclusive_bytes, :int64, 1
      optional :shared_bytes, :int64, 2
      optional :total_bytes, :int64, 3
    end
    add_message "openstorage.api.VolumeUsage" do
      optional :volume_id, :string, 1
      optional :volume_name, :string, 2
      optional :pool_uuid, :string, 3
      optional :exclusive_bytes, :uint64, 4
      optional :total_bytes, :uint64, 5
      optional :local_cloud_snapshot, :bool, 6
    end
    add_message "openstorage.api.VolumeUsageByNode" do
      repeated :volume_usage, :message, 1, "openstorage.api.VolumeUsage"
    end
    add_message "openstorage.api.SdkStoragePolicy" do
      optional :name, :string, 1
      optional :policy, :message, 2, "openstorage.api.VolumeSpecPolicy"
      optional :force, :bool, 3
      optional :allow_update, :bool, 4
      optional :ownership, :message, 5, "openstorage.api.Ownership"
    end
    add_message "openstorage.api.Alert" do
      optional :id, :int64, 1
      optional :severity, :enum, 2, "openstorage.api.SeverityType"
      optional :alert_type, :int64, 3
      optional :message, :string, 4
      optional :timestamp, :message, 5, "google.protobuf.Timestamp"
      optional :resource_id, :string, 6
      optional :resource, :enum, 7, "openstorage.api.ResourceType"
      optional :cleared, :bool, 8
      optional :ttl, :uint64, 9
      optional :unique_tag, :string, 10
      optional :count, :int64, 11
      optional :first_seen, :message, 12, "google.protobuf.Timestamp"
    end
    add_message "openstorage.api.SdkAlertsTimeSpan" do
      optional :start_time, :message, 1, "google.protobuf.Timestamp"
      optional :end_time, :message, 2, "google.protobuf.Timestamp"
    end
    add_message "openstorage.api.SdkAlertsCountSpan" do
      optional :min_count, :int64, 1
      optional :max_count, :int64, 2
    end
    add_message "openstorage.api.SdkAlertsOption" do
      oneof :opt do
        optional :min_severity_type, :enum, 1, "openstorage.api.SeverityType"
        optional :is_cleared, :bool, 2
        optional :time_span, :message, 3, "openstorage.api.SdkAlertsTimeSpan"
        optional :count_span, :message, 4, "openstorage.api.SdkAlertsCountSpan"
      end
    end
    add_message "openstorage.api.SdkAlertsResourceTypeQuery" do
      optional :resource_type, :enum, 1, "openstorage.api.ResourceType"
    end
    add_message "openstorage.api.SdkAlertsAlertTypeQuery" do
      optional :resource_type, :enum, 1, "openstorage.api.ResourceType"
      optional :alert_type, :int64, 2
    end
    add_message "openstorage.api.SdkAlertsResourceIdQuery" do
      optional :resource_type, :enum, 1, "openstorage.api.ResourceType"
      optional :alert_type, :int64, 2
      optional :resource_id, :string, 3
    end
    add_message "openstorage.api.SdkAlertsQuery" do
      repeated :opts, :message, 4, "openstorage.api.SdkAlertsOption"
      oneof :query do
        optional :resource_type_query, :message, 1, "openstorage.api.SdkAlertsResourceTypeQuery"
        optional :alert_type_query, :message, 2, "openstorage.api.SdkAlertsAlertTypeQuery"
        optional :resource_id_query, :message, 3, "openstorage.api.SdkAlertsResourceIdQuery"
      end
    end
    add_message "openstorage.api.SdkAlertsEnumerateWithFiltersRequest" do
      repeated :queries, :message, 1, "openstorage.api.SdkAlertsQuery"
    end
    add_message "openstorage.api.SdkAlertsEnumerateWithFiltersResponse" do
      repeated :alerts, :message, 1, "openstorage.api.Alert"
    end
    add_message "openstorage.api.SdkAlertsDeleteRequest" do
      repeated :queries, :message, 1, "openstorage.api.SdkAlertsQuery"
    end
    add_message "openstorage.api.SdkAlertsDeleteResponse" do
    end
    add_message "openstorage.api.Alerts" do
      repeated :alert, :message, 1, "openstorage.api.Alert"
    end
    add_message "openstorage.api.ObjectstoreInfo" do
      optional :uuid, :string, 1
      optional :volume_id, :string, 2
      optional :enabled, :bool, 3
      optional :status, :string, 4
      optional :action, :int64, 5
      optional :access_key, :string, 6
      optional :secret_key, :string, 7
      repeated :endpoints, :string, 8
      optional :current_endpoint, :string, 9
      optional :access_port, :int64, 10
      optional :region, :string, 11
    end
    add_message "openstorage.api.VolumeCreateRequest" do
      optional :locator, :message, 1, "openstorage.api.VolumeLocator"
      optional :source, :message, 2, "openstorage.api.Source"
      optional :spec, :message, 3, "openstorage.api.VolumeSpec"
    end
    add_message "openstorage.api.VolumeResponse" do
      optional :error, :string, 1
    end
    add_message "openstorage.api.VolumeCreateResponse" do
      optional :id, :string, 1
      optional :volume_response, :message, 2, "openstorage.api.VolumeResponse"
    end
    add_message "openstorage.api.VolumeStateAction" do
      optional :attach, :enum, 1, "openstorage.api.VolumeActionParam"
      optional :mount, :enum, 2, "openstorage.api.VolumeActionParam"
      optional :mount_path, :string, 3
      optional :device_path, :string, 4
    end
    add_message "openstorage.api.VolumeSetRequest" do
      optional :locator, :message, 1, "openstorage.api.VolumeLocator"
      optional :spec, :message, 2, "openstorage.api.VolumeSpec"
      optional :action, :message, 3, "openstorage.api.VolumeStateAction"
      map :options, :string, :string, 4
    end
    add_message "openstorage.api.VolumeSetResponse" do
      optional :volume, :message, 1, "openstorage.api.Volume"
      optional :volume_response, :message, 2, "openstorage.api.VolumeResponse"
    end
    add_message "openstorage.api.SnapCreateRequest" do
      optional :id, :string, 1
      optional :locator, :message, 2, "openstorage.api.VolumeLocator"
      optional :readonly, :bool, 3
      optional :no_retry, :bool, 4
    end
    add_message "openstorage.api.SnapCreateResponse" do
      optional :volume_create_response, :message, 1, "openstorage.api.VolumeCreateResponse"
    end
    add_message "openstorage.api.VolumeInfo" do
      optional :volume_id, :string, 1
      optional :path, :string, 2
      optional :storage, :message, 3, "openstorage.api.VolumeSpec"
    end
    add_message "openstorage.api.VolumeConsumer" do
      optional :name, :string, 1
      optional :namespace, :string, 2
      optional :type, :string, 3
      optional :node_id, :string, 4
      optional :owner_name, :string, 5
      optional :owner_type, :string, 6
    end
    add_message "openstorage.api.VolumeServiceRequest" do
      optional :srv_cmd, :string, 1
      map :srv_cmd_params, :string, :string, 2
    end
    add_message "openstorage.api.VolumeServiceInstanceResponse" do
      optional :error, :string, 1
      map :status, :string, :string, 2
    end
    add_message "openstorage.api.VolumeServiceResponse" do
      optional :vol_srv_rsp_obj_cnt, :int32, 1
      repeated :vol_srv_rsp, :message, 2, "openstorage.api.VolumeServiceInstanceResponse"
    end
    add_message "openstorage.api.GraphDriverChanges" do
      optional :path, :string, 1
      optional :kind, :enum, 2, "openstorage.api.GraphDriverChangeType"
    end
    add_message "openstorage.api.ClusterResponse" do
      optional :error, :string, 1
    end
    add_message "openstorage.api.ActiveRequest" do
      map :ReqestKV, :int64, :string, 1
    end
    add_message "openstorage.api.ActiveRequests" do
      optional :RequestCount, :int64, 1
      repeated :ActiveRequest, :message, 2, "openstorage.api.ActiveRequest"
    end
    add_message "openstorage.api.GroupSnapCreateRequest" do
      optional :id, :string, 1
      map :Labels, :string, :string, 2
      repeated :volume_ids, :string, 3
      optional :delete_on_failure, :bool, 4
    end
    add_message "openstorage.api.GroupSnapCreateResponse" do
      map :snapshots, :string, :message, 1, "openstorage.api.SnapCreateResponse"
      optional :error, :string, 2
    end
    add_message "openstorage.api.StorageNode" do
      optional :id, :string, 1
      optional :cpu, :double, 2
      optional :mem_total, :uint64, 3
      optional :mem_used, :uint64, 4
      optional :mem_free, :uint64, 5
      optional :avg_load, :int64, 6
      optional :status, :enum, 7, "openstorage.api.Status"
      map :disks, :string, :message, 9, "openstorage.api.StorageResource"
      repeated :pools, :message, 10, "openstorage.api.StoragePool"
      optional :mgmt_ip, :string, 11
      optional :data_ip, :string, 12
      optional :hostname, :string, 15
      map :node_labels, :string, :string, 16
      optional :scheduler_node_name, :string, 17
      optional :HWType, :enum, 18, "openstorage.api.HardwareType"
    end
    add_message "openstorage.api.StorageCluster" do
      optional :status, :enum, 1, "openstorage.api.Status"
      optional :id, :string, 2
      optional :name, :string, 3
    end
    add_message "openstorage.api.SdkOpenStoragePolicyCreateRequest" do
      optional :storage_policy, :message, 1, "openstorage.api.SdkStoragePolicy"
    end
    add_message "openstorage.api.SdkOpenStoragePolicyCreateResponse" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyEnumerateRequest" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyEnumerateResponse" do
      repeated :storage_policies, :message, 1, "openstorage.api.SdkStoragePolicy"
    end
    add_message "openstorage.api.SdkOpenStoragePolicyInspectRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkOpenStoragePolicyInspectResponse" do
      optional :storage_policy, :message, 1, "openstorage.api.SdkStoragePolicy"
    end
    add_message "openstorage.api.SdkOpenStoragePolicyDeleteRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkOpenStoragePolicyDeleteResponse" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyUpdateRequest" do
      optional :storage_policy, :message, 1, "openstorage.api.SdkStoragePolicy"
    end
    add_message "openstorage.api.SdkOpenStoragePolicyUpdateResponse" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicySetDefaultRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkOpenStoragePolicySetDefaultResponse" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyReleaseRequest" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyReleaseResponse" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest" do
    end
    add_message "openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse" do
      optional :storage_policy, :message, 1, "openstorage.api.SdkStoragePolicy"
    end
    add_message "openstorage.api.SdkSchedulePolicyCreateRequest" do
      optional :schedule_policy, :message, 1, "openstorage.api.SdkSchedulePolicy"
    end
    add_message "openstorage.api.SdkSchedulePolicyCreateResponse" do
    end
    add_message "openstorage.api.SdkSchedulePolicyUpdateRequest" do
      optional :schedule_policy, :message, 1, "openstorage.api.SdkSchedulePolicy"
    end
    add_message "openstorage.api.SdkSchedulePolicyUpdateResponse" do
    end
    add_message "openstorage.api.SdkSchedulePolicyEnumerateRequest" do
    end
    add_message "openstorage.api.SdkSchedulePolicyEnumerateResponse" do
      repeated :policies, :message, 1, "openstorage.api.SdkSchedulePolicy"
    end
    add_message "openstorage.api.SdkSchedulePolicyInspectRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkSchedulePolicyInspectResponse" do
      optional :policy, :message, 1, "openstorage.api.SdkSchedulePolicy"
    end
    add_message "openstorage.api.SdkSchedulePolicyDeleteRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkSchedulePolicyDeleteResponse" do
    end
    add_message "openstorage.api.SdkSchedulePolicyIntervalDaily" do
      optional :hour, :int32, 1
      optional :minute, :int32, 2
    end
    add_message "openstorage.api.SdkSchedulePolicyIntervalWeekly" do
      optional :day, :enum, 1, "openstorage.api.SdkTimeWeekday"
      optional :hour, :int32, 2
      optional :minute, :int32, 3
    end
    add_message "openstorage.api.SdkSchedulePolicyIntervalMonthly" do
      optional :day, :int32, 1
      optional :hour, :int32, 2
      optional :minute, :int32, 3
    end
    add_message "openstorage.api.SdkSchedulePolicyIntervalPeriodic" do
      optional :seconds, :int64, 1
    end
    add_message "openstorage.api.SdkSchedulePolicyInterval" do
      optional :retain, :int64, 1
      oneof :period_type do
        optional :daily, :message, 200, "openstorage.api.SdkSchedulePolicyIntervalDaily"
        optional :weekly, :message, 201, "openstorage.api.SdkSchedulePolicyIntervalWeekly"
        optional :monthly, :message, 202, "openstorage.api.SdkSchedulePolicyIntervalMonthly"
        optional :periodic, :message, 203, "openstorage.api.SdkSchedulePolicyIntervalPeriodic"
      end
    end
    add_message "openstorage.api.SdkSchedulePolicy" do
      optional :name, :string, 1
      repeated :schedules, :message, 2, "openstorage.api.SdkSchedulePolicyInterval"
    end
    add_message "openstorage.api.SdkCredentialCreateRequest" do
      optional :name, :string, 1
      optional :bucket, :string, 2
      optional :encryption_key, :string, 3
      optional :ownership, :message, 4, "openstorage.api.Ownership"
      optional :use_proxy, :bool, 5
      optional :iam_policy, :bool, 6
      optional :s3_storage_class, :string, 7
      oneof :credential_type do
        optional :aws_credential, :message, 200, "openstorage.api.SdkAwsCredentialRequest"
        optional :azure_credential, :message, 201, "openstorage.api.SdkAzureCredentialRequest"
        optional :google_credential, :message, 202, "openstorage.api.SdkGoogleCredentialRequest"
      end
    end
    add_message "openstorage.api.SdkCredentialCreateResponse" do
      optional :credential_id, :string, 1
    end
    add_message "openstorage.api.SdkAwsCredentialRequest" do
      optional :access_key, :string, 1
      optional :secret_key, :string, 2
      optional :endpoint, :string, 3
      optional :region, :string, 4
      optional :disable_ssl, :bool, 5
      optional :disable_path_style, :bool, 6
    end
    add_message "openstorage.api.SdkAzureCredentialRequest" do
      optional :account_name, :string, 1
      optional :account_key, :string, 2
    end
    add_message "openstorage.api.SdkGoogleCredentialRequest" do
      optional :project_id, :string, 1
      optional :json_key, :string, 2
    end
    add_message "openstorage.api.SdkAwsCredentialResponse" do
      optional :access_key, :string, 2
      optional :endpoint, :string, 3
      optional :region, :string, 4
      optional :disable_ssl, :bool, 5
      optional :disable_path_style, :bool, 6
      optional :s3_storage_class, :string, 7
    end
    add_message "openstorage.api.SdkAzureCredentialResponse" do
      optional :account_name, :string, 2
    end
    add_message "openstorage.api.SdkGoogleCredentialResponse" do
      optional :project_id, :string, 2
    end
    add_message "openstorage.api.SdkCredentialEnumerateRequest" do
    end
    add_message "openstorage.api.SdkCredentialEnumerateResponse" do
      repeated :credential_ids, :string, 1
    end
    add_message "openstorage.api.SdkCredentialInspectRequest" do
      optional :credential_id, :string, 1
    end
    add_message "openstorage.api.SdkCredentialInspectResponse" do
      optional :credential_id, :string, 1
      optional :name, :string, 2
      optional :bucket, :string, 3
      optional :ownership, :message, 4, "openstorage.api.Ownership"
      optional :use_proxy, :bool, 5
      optional :iam_policy, :bool, 6
      oneof :credential_type do
        optional :aws_credential, :message, 200, "openstorage.api.SdkAwsCredentialResponse"
        optional :azure_credential, :message, 201, "openstorage.api.SdkAzureCredentialResponse"
        optional :google_credential, :message, 202, "openstorage.api.SdkGoogleCredentialResponse"
      end
    end
    add_message "openstorage.api.SdkCredentialDeleteRequest" do
      optional :credential_id, :string, 1
    end
    add_message "openstorage.api.SdkCredentialDeleteResponse" do
    end
    add_message "openstorage.api.SdkCredentialValidateRequest" do
      optional :credential_id, :string, 1
    end
    add_message "openstorage.api.SdkCredentialValidateResponse" do
    end
    add_message "openstorage.api.SdkCredentialDeleteReferencesRequest" do
      optional :credential_id, :string, 1
    end
    add_message "openstorage.api.SdkCredentialDeleteReferencesResponse" do
    end
    add_message "openstorage.api.SdkVolumeAttachOptions" do
      optional :secret_name, :string, 1
      optional :secret_key, :string, 2
      optional :secret_context, :string, 3
      optional :fastpath, :string, 4
    end
    add_message "openstorage.api.SdkVolumeMountRequest" do
      optional :volume_id, :string, 1
      optional :mount_path, :string, 2
      optional :options, :message, 3, "openstorage.api.SdkVolumeAttachOptions"
      map :driver_options, :string, :string, 4
    end
    add_message "openstorage.api.SdkVolumeMountResponse" do
    end
    add_message "openstorage.api.SdkVolumeUnmountOptions" do
      optional :delete_mount_path, :bool, 1
      optional :no_delay_before_deleting_mount_path, :bool, 2
    end
    add_message "openstorage.api.SdkVolumeUnmountRequest" do
      optional :volume_id, :string, 1
      optional :mount_path, :string, 2
      optional :options, :message, 3, "openstorage.api.SdkVolumeUnmountOptions"
      map :driver_options, :string, :string, 4
    end
    add_message "openstorage.api.SdkVolumeUnmountResponse" do
    end
    add_message "openstorage.api.SdkVolumeAttachRequest" do
      optional :volume_id, :string, 1
      optional :options, :message, 2, "openstorage.api.SdkVolumeAttachOptions"
      map :driver_options, :string, :string, 3
    end
    add_message "openstorage.api.SdkVolumeAttachResponse" do
      optional :device_path, :string, 1
    end
    add_message "openstorage.api.SdkVolumeDetachOptions" do
      optional :force, :bool, 1
      optional :unmount_before_detach, :bool, 2
      optional :redirect, :bool, 3
    end
    add_message "openstorage.api.SdkVolumeDetachRequest" do
      optional :volume_id, :string, 1
      optional :options, :message, 2, "openstorage.api.SdkVolumeDetachOptions"
      map :driver_options, :string, :string, 3
    end
    add_message "openstorage.api.SdkVolumeDetachResponse" do
    end
    add_message "openstorage.api.SdkVolumeCreateRequest" do
      optional :name, :string, 1
      optional :spec, :message, 2, "openstorage.api.VolumeSpec"
      map :labels, :string, :string, 3
    end
    add_message "openstorage.api.SdkVolumeCreateResponse" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeCloneRequest" do
      optional :name, :string, 1
      optional :parent_id, :string, 2
    end
    add_message "openstorage.api.SdkVolumeCloneResponse" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeDeleteRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeDeleteResponse" do
    end
    add_message "openstorage.api.SdkVolumeInspectRequest" do
      optional :volume_id, :string, 1
      optional :options, :message, 2, "openstorage.api.VolumeInspectOptions"
    end
    add_message "openstorage.api.SdkVolumeInspectResponse" do
      optional :volume, :message, 1, "openstorage.api.Volume"
      optional :name, :string, 2
      map :labels, :string, :string, 3
    end
    add_message "openstorage.api.SdkVolumeInspectWithFiltersRequest" do
      optional :name, :string, 2
      map :labels, :string, :string, 3
      optional :ownership, :message, 4, "openstorage.api.Ownership"
      optional :group, :message, 5, "openstorage.api.Group"
      optional :options, :message, 6, "openstorage.api.VolumeInspectOptions"
    end
    add_message "openstorage.api.SdkVolumeInspectWithFiltersResponse" do
      repeated :volumes, :message, 1, "openstorage.api.SdkVolumeInspectResponse"
    end
    add_message "openstorage.api.SdkVolumeUpdateRequest" do
      optional :volume_id, :string, 1
      map :labels, :string, :string, 3
      optional :spec, :message, 4, "openstorage.api.VolumeSpecUpdate"
    end
    add_message "openstorage.api.SdkVolumeUpdateResponse" do
    end
    add_message "openstorage.api.SdkVolumeStatsRequest" do
      optional :volume_id, :string, 1
      optional :not_cumulative, :bool, 2
    end
    add_message "openstorage.api.SdkVolumeStatsResponse" do
      optional :stats, :message, 1, "openstorage.api.Stats"
    end
    add_message "openstorage.api.SdkVolumeCapacityUsageRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeCapacityUsageResponse" do
      optional :capacity_usage_info, :message, 1, "openstorage.api.CapacityUsageInfo"
    end
    add_message "openstorage.api.SdkVolumeEnumerateRequest" do
    end
    add_message "openstorage.api.SdkVolumeEnumerateResponse" do
      repeated :volume_ids, :string, 1
    end
    add_message "openstorage.api.SdkVolumeEnumerateWithFiltersRequest" do
      optional :name, :string, 2
      map :labels, :string, :string, 3
      optional :ownership, :message, 4, "openstorage.api.Ownership"
      optional :group, :message, 5, "openstorage.api.Group"
    end
    add_message "openstorage.api.SdkVolumeEnumerateWithFiltersResponse" do
      repeated :volume_ids, :string, 1
    end
    add_message "openstorage.api.SdkVolumeSnapshotCreateRequest" do
      optional :volume_id, :string, 1
      optional :name, :string, 2
      map :labels, :string, :string, 3
    end
    add_message "openstorage.api.SdkVolumeSnapshotCreateResponse" do
      optional :snapshot_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeSnapshotRestoreRequest" do
      optional :volume_id, :string, 1
      optional :snapshot_id, :string, 2
    end
    add_message "openstorage.api.SdkVolumeSnapshotRestoreResponse" do
    end
    add_message "openstorage.api.SdkVolumeSnapshotEnumerateRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkVolumeSnapshotEnumerateResponse" do
      repeated :volume_snapshot_ids, :string, 1
    end
    add_message "openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest" do
      optional :volume_id, :string, 1
      map :labels, :string, :string, 2
    end
    add_message "openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse" do
      repeated :volume_snapshot_ids, :string, 1
    end
    add_message "openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest" do
      optional :volume_id, :string, 1
      repeated :snapshot_schedule_names, :string, 2
    end
    add_message "openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse" do
    end
    add_message "openstorage.api.SdkNodeVolumeUsageByNodeRequest" do
      optional :node_id, :string, 1
    end
    add_message "openstorage.api.SdkNodeVolumeUsageByNodeResponse" do
      optional :volume_usage_info, :message, 1, "openstorage.api.VolumeUsageByNode"
    end
    add_message "openstorage.api.SdkClusterDomainsEnumerateRequest" do
    end
    add_message "openstorage.api.SdkClusterDomainsEnumerateResponse" do
      repeated :cluster_domain_names, :string, 1
    end
    add_message "openstorage.api.SdkClusterDomainInspectRequest" do
      optional :cluster_domain_name, :string, 1
    end
    add_message "openstorage.api.SdkClusterDomainInspectResponse" do
      optional :cluster_domain_name, :string, 1
      optional :is_active, :bool, 2
    end
    add_message "openstorage.api.SdkClusterDomainActivateRequest" do
      optional :cluster_domain_name, :string, 1
    end
    add_message "openstorage.api.SdkClusterDomainActivateResponse" do
    end
    add_message "openstorage.api.SdkClusterDomainDeactivateRequest" do
      optional :cluster_domain_name, :string, 1
    end
    add_message "openstorage.api.SdkClusterDomainDeactivateResponse" do
    end
    add_message "openstorage.api.SdkClusterInspectCurrentRequest" do
    end
    add_message "openstorage.api.SdkClusterInspectCurrentResponse" do
      optional :cluster, :message, 1, "openstorage.api.StorageCluster"
    end
    add_message "openstorage.api.SdkNodeInspectRequest" do
      optional :node_id, :string, 1
    end
    add_message "openstorage.api.Job" do
      optional :id, :string, 1
      optional :state, :enum, 2, "openstorage.api.JobState"
      optional :type, :enum, 3, "openstorage.api.JobType"
      optional :create_time, :message, 5, "google.protobuf.Timestamp"
      optional :last_update_time, :message, 6, "google.protobuf.Timestamp"
      oneof :job do
        optional :drain_attachments, :message, 4, "openstorage.api.NodeDrainAttachmentsJob"
      end
    end
    add_message "openstorage.api.SdkJobResponse" do
      optional :job, :message, 1, "openstorage.api.Job"
    end
    add_message "openstorage.api.NodeDrainAttachmentOptions" do
    end
    add_message "openstorage.api.SdkNodeDrainAttachmentsRequest" do
      optional :node_id, :string, 1
      repeated :selector, :message, 2, "openstorage.api.LabelSelectorRequirement"
      optional :only_sharedv4, :bool, 3
      optional :issuer, :string, 4
    end
    add_message "openstorage.api.NodeDrainAttachmentsJob" do
      optional :node_id, :string, 1
      optional :Status, :string, 2
      optional :issuer, :string, 3
      optional :parameters, :message, 4, "openstorage.api.SdkNodeDrainAttachmentsRequest"
      optional :create_time, :message, 5, "google.protobuf.Timestamp"
      optional :last_update_time, :message, 6, "google.protobuf.Timestamp"
    end
    add_message "openstorage.api.SdkEnumerateJobsRequest" do
      optional :type, :enum, 1, "openstorage.api.JobType"
    end
    add_message "openstorage.api.SdkEnumerateJobsResponse" do
      repeated :jobs, :message, 1, "openstorage.api.Job"
    end
    add_message "openstorage.api.SdkUpdateJobRequest" do
      optional :id, :string, 1
      optional :type, :enum, 2, "openstorage.api.JobType"
      optional :state, :enum, 3, "openstorage.api.JobState"
    end
    add_message "openstorage.api.SdkUpdateJobResponse" do
    end
    add_message "openstorage.api.SdkGetJobStatusRequest" do
      optional :id, :string, 1
      optional :type, :enum, 2, "openstorage.api.JobType"
    end
    add_message "openstorage.api.JobAudit" do
      repeated :summary, :message, 1, "openstorage.api.JobWorkSummary"
    end
    add_message "openstorage.api.JobWorkSummary" do
      oneof :summary do
        optional :drain_attachments_summary, :message, 3, "openstorage.api.DrainAttachmentsSummary"
      end
    end
    add_message "openstorage.api.JobSummary" do
      optional :id, :string, 1
      optional :total_runtime_seconds, :uint64, 2
      repeated :work_summaries, :message, 3, "openstorage.api.JobWorkSummary"
    end
    add_message "openstorage.api.SdkGetJobStatusResponse" do
      optional :job, :message, 1, "openstorage.api.Job"
      optional :summary, :message, 2, "openstorage.api.JobSummary"
    end
    add_message "openstorage.api.DrainAttachmentsSummary" do
      optional :num_volumes_total, :uint64, 2
      optional :num_volumes_done, :uint64, 3
      optional :num_volumes_pending, :uint64, 4
    end
    add_message "openstorage.api.SdkNodeCordonAttachmentsRequest" do
      optional :node_id, :string, 1
    end
    add_message "openstorage.api.SdkNodeCordonAttachmentsResponse" do
    end
    add_message "openstorage.api.SdkNodeUncordonAttachmentsRequest" do
      optional :node_id, :string, 1
    end
    add_message "openstorage.api.SdkNodeUncordonAttachmentsResponse" do
    end
    add_message "openstorage.api.SdkStoragePoolResizeRequest" do
      optional :uuid, :string, 1
      optional :operation_type, :enum, 3, "openstorage.api.SdkStoragePool.ResizeOperationType"
      optional :skip_wait_for_clean_volumes, :bool, 4
      oneof :resize_factor do
        optional :size, :uint64, 200
        optional :percentage, :uint64, 201
      end
    end
    add_message "openstorage.api.StorageRebalanceTriggerThreshold" do
      optional :type, :enum, 1, "openstorage.api.StorageRebalanceTriggerThreshold.Type"
      optional :metric, :enum, 2, "openstorage.api.StorageRebalanceTriggerThreshold.Metric"
      optional :over_load_trigger_threshold, :uint64, 3
      optional :under_load_trigger_threshold, :uint64, 4
    end
    add_enum "openstorage.api.StorageRebalanceTriggerThreshold.Type" do
      value :ABSOLUTE_PERCENT, 0
      value :DELTA_MEAN_PERCENT, 1
    end
    add_enum "openstorage.api.StorageRebalanceTriggerThreshold.Metric" do
      value :PROVISION_SPACE, 0
      value :USED_SPACE, 1
    end
    add_message "openstorage.api.SdkStorageRebalanceRequest" do
      repeated :trigger_thresholds, :message, 1, "openstorage.api.StorageRebalanceTriggerThreshold"
      optional :trial_run, :bool, 2
      repeated :source_pool_selector, :message, 3, "openstorage.api.LabelSelectorRequirement"
      repeated :target_pool_selector, :message, 4, "openstorage.api.LabelSelectorRequirement"
      optional :max_duration_minutes, :uint64, 5
      optional :remove_repl_1_snapshots, :bool, 6
    end
    add_message "openstorage.api.SdkStorageRebalanceResponse" do
      optional :job, :message, 1, "openstorage.api.StorageRebalanceJob"
      optional :summary, :message, 2, "openstorage.api.StorageRebalanceSummary"
      repeated :actions, :message, 3, "openstorage.api.StorageRebalanceAudit"
    end
    add_message "openstorage.api.StorageRebalanceJob" do
      optional :id, :string, 1
      optional :status, :string, 2
      optional :state, :enum, 3, "openstorage.api.StorageRebalanceJobState"
      optional :parameters, :message, 4, "openstorage.api.SdkStorageRebalanceRequest"
      optional :create_time, :message, 5, "google.protobuf.Timestamp"
      optional :last_update_time, :message, 6, "google.protobuf.Timestamp"
    end
    add_message "openstorage.api.StorageRebalanceSummary" do
      optional :total_run_time_seconds, :uint64, 1
      repeated :work_summary, :message, 2, "openstorage.api.StorageRebalanceWorkSummary"
    end
    add_message "openstorage.api.StorageRebalanceWorkSummary" do
      optional :type, :enum, 1, "openstorage.api.StorageRebalanceWorkSummary.Type"
      optional :done, :uint64, 2
      optional :pending, :uint64, 3
    end
    add_enum "openstorage.api.StorageRebalanceWorkSummary.Type" do
      value :UnbalancedPools, 0
      value :UnbalancedVolumes, 1
      value :UnbalancedProvisionedSpaceBytes, 2
      value :UnbalancedUsedSpaceBytes, 3
    end
    add_message "openstorage.api.StorageRebalanceAudit" do
      optional :volume_id, :string, 1
      optional :name, :string, 2
      optional :action, :enum, 3, "openstorage.api.StorageRebalanceAudit.StorageRebalanceAction"
      optional :node, :string, 4
      optional :pool, :string, 5
      optional :start_time, :message, 6, "google.protobuf.Timestamp"
      optional :end_time, :message, 7, "google.protobuf.Timestamp"
      repeated :work_summary, :message, 8, "openstorage.api.StorageRebalanceWorkSummary"
      optional :replication_set_id, :uint64, 9
      optional :state, :enum, 10, "openstorage.api.StorageRebalanceJobState"
    end
    add_enum "openstorage.api.StorageRebalanceAudit.StorageRebalanceAction" do
      value :ADD_REPLICA, 0
      value :REMOVE_REPLICA, 1
    end
    add_message "openstorage.api.SdkUpdateRebalanceJobRequest" do
      optional :id, :string, 1
      optional :state, :enum, 2, "openstorage.api.StorageRebalanceJobState"
    end
    add_message "openstorage.api.SdkUpdateRebalanceJobResponse" do
    end
    add_message "openstorage.api.SdkGetRebalanceJobStatusRequest" do
      optional :id, :string, 1
    end
    add_message "openstorage.api.SdkGetRebalanceJobStatusResponse" do
      optional :job, :message, 1, "openstorage.api.StorageRebalanceJob"
      optional :summary, :message, 2, "openstorage.api.StorageRebalanceSummary"
      repeated :actions, :message, 3, "openstorage.api.StorageRebalanceAudit"
    end
    add_message "openstorage.api.SdkEnumerateRebalanceJobsRequest" do
    end
    add_message "openstorage.api.SdkEnumerateRebalanceJobsResponse" do
      repeated :jobs, :message, 1, "openstorage.api.StorageRebalanceJob"
    end
    add_message "openstorage.api.SdkStoragePool" do
    end
    add_enum "openstorage.api.SdkStoragePool.OperationStatus" do
      value :OPERATION_PENDING, 0
      value :OPERATION_IN_PROGRESS, 1
      value :OPERATION_SUCCESSFUL, 2
      value :OPERATION_FAILED, 3
    end
    add_enum "openstorage.api.SdkStoragePool.OperationType" do
      value :OPERATION_RESIZE, 0
    end
    add_enum "openstorage.api.SdkStoragePool.ResizeOperationType" do
      value :RESIZE_TYPE_AUTO, 0
      value :RESIZE_TYPE_ADD_DISK, 1
      value :RESIZE_TYPE_RESIZE_DISK, 2
    end
    add_message "openstorage.api.SdkStoragePoolResizeResponse" do
    end
    add_message "openstorage.api.SdkNodeInspectResponse" do
      optional :node, :message, 1, "openstorage.api.StorageNode"
    end
    add_message "openstorage.api.SdkNodeInspectCurrentRequest" do
    end
    add_message "openstorage.api.SdkNodeInspectCurrentResponse" do
      optional :node, :message, 1, "openstorage.api.StorageNode"
    end
    add_message "openstorage.api.SdkNodeEnumerateRequest" do
    end
    add_message "openstorage.api.SdkNodeEnumerateResponse" do
      repeated :node_ids, :string, 1
    end
    add_message "openstorage.api.SdkNodeEnumerateWithFiltersRequest" do
    end
    add_message "openstorage.api.SdkNodeEnumerateWithFiltersResponse" do
      repeated :nodes, :message, 1, "openstorage.api.StorageNode"
    end
    add_message "openstorage.api.SdkObjectstoreInspectRequest" do
      optional :objectstore_id, :string, 1
    end
    add_message "openstorage.api.SdkObjectstoreInspectResponse" do
      optional :objectstore_status, :message, 1, "openstorage.api.ObjectstoreInfo"
    end
    add_message "openstorage.api.SdkObjectstoreCreateRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkObjectstoreCreateResponse" do
      optional :objectstore_status, :message, 1, "openstorage.api.ObjectstoreInfo"
    end
    add_message "openstorage.api.SdkObjectstoreDeleteRequest" do
      optional :objectstore_id, :string, 1
    end
    add_message "openstorage.api.SdkObjectstoreDeleteResponse" do
    end
    add_message "openstorage.api.SdkObjectstoreUpdateRequest" do
      optional :objectstore_id, :string, 1
      optional :enable, :bool, 2
    end
    add_message "openstorage.api.SdkObjectstoreUpdateResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupCreateRequest" do
      optional :volume_id, :string, 1
      optional :credential_id, :string, 2
      optional :full, :bool, 3
      optional :task_id, :string, 4
      map :labels, :string, :string, 5
      optional :full_backup_frequency, :uint32, 6
      optional :delete_local, :bool, 7
    end
    add_message "openstorage.api.SdkCloudBackupCreateResponse" do
      optional :task_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudBackupGroupCreateRequest" do
      optional :group_id, :string, 1
      repeated :volume_ids, :string, 2
      optional :credential_id, :string, 3
      optional :full, :bool, 4
      map :labels, :string, :string, 5
      optional :delete_local, :bool, 6
    end
    add_message "openstorage.api.SdkCloudBackupGroupCreateResponse" do
      optional :group_cloud_backup_id, :string, 1
      repeated :task_ids, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupRestoreRequest" do
      optional :backup_id, :string, 1
      optional :restore_volume_name, :string, 2
      optional :credential_id, :string, 3
      optional :node_id, :string, 4
      optional :task_id, :string, 5
      optional :spec, :message, 6, "openstorage.api.RestoreVolumeSpec"
      optional :locator, :message, 7, "openstorage.api.VolumeLocator"
    end
    add_message "openstorage.api.SdkCloudBackupRestoreResponse" do
      optional :restore_volume_id, :string, 1
      optional :task_id, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupDeleteRequest" do
      optional :backup_id, :string, 1
      optional :credential_id, :string, 2
      optional :force, :bool, 3
    end
    add_message "openstorage.api.SdkCloudBackupDeleteResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupDeleteAllRequest" do
      optional :src_volume_id, :string, 1
      optional :credential_id, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupDeleteAllResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest" do
      optional :src_volume_id, :string, 1
      optional :cluster_id, :string, 2
      optional :credential_id, :string, 3
      optional :all, :bool, 4
      optional :status_filter, :enum, 5, "openstorage.api.SdkCloudBackupStatusType"
      map :metadata_filter, :string, :string, 6
      optional :max_backups, :uint64, 7
      optional :continuation_token, :string, 8
      optional :cloud_backup_id, :string, 9
    end
    add_message "openstorage.api.SdkCloudBackupInfo" do
      optional :id, :string, 1
      optional :src_volume_id, :string, 2
      optional :src_volume_name, :string, 3
      optional :timestamp, :message, 4, "google.protobuf.Timestamp"
      map :metadata, :string, :string, 5
      optional :status, :enum, 6, "openstorage.api.SdkCloudBackupStatusType"
    end
    add_message "openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse" do
      repeated :backups, :message, 1, "openstorage.api.SdkCloudBackupInfo"
      optional :continuation_token, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupStatus" do
      optional :backup_id, :string, 1
      optional :optype, :enum, 2, "openstorage.api.SdkCloudBackupOpType"
      optional :status, :enum, 3, "openstorage.api.SdkCloudBackupStatusType"
      optional :bytes_done, :uint64, 4
      optional :start_time, :message, 5, "google.protobuf.Timestamp"
      optional :completed_time, :message, 6, "google.protobuf.Timestamp"
      optional :node_id, :string, 7
      optional :src_volume_id, :string, 8
      repeated :info, :string, 9
      optional :credential_id, :string, 10
      optional :bytes_total, :uint64, 11
      optional :eta_seconds, :int64, 12
      optional :group_id, :string, 13
    end
    add_message "openstorage.api.SdkCloudBackupStatusRequest" do
      optional :volume_id, :string, 1
      optional :local, :bool, 2
      optional :task_id, :string, 3
    end
    add_message "openstorage.api.SdkCloudBackupStatusResponse" do
      map :statuses, :string, :message, 1, "openstorage.api.SdkCloudBackupStatus"
    end
    add_message "openstorage.api.SdkCloudBackupCatalogRequest" do
      optional :backup_id, :string, 1
      optional :credential_id, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupCatalogResponse" do
      repeated :contents, :string, 1
    end
    add_message "openstorage.api.SdkCloudBackupHistoryItem" do
      optional :src_volume_id, :string, 1
      optional :timestamp, :message, 2, "google.protobuf.Timestamp"
      optional :status, :enum, 3, "openstorage.api.SdkCloudBackupStatusType"
    end
    add_message "openstorage.api.SdkCloudBackupHistoryRequest" do
      optional :src_volume_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudBackupHistoryResponse" do
      repeated :history_list, :message, 1, "openstorage.api.SdkCloudBackupHistoryItem"
    end
    add_message "openstorage.api.SdkCloudBackupStateChangeRequest" do
      optional :task_id, :string, 1
      optional :requested_state, :enum, 2, "openstorage.api.SdkCloudBackupRequestedState"
    end
    add_message "openstorage.api.SdkCloudBackupStateChangeResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupScheduleInfo" do
      optional :src_volume_id, :string, 1
      optional :credential_id, :string, 2
      repeated :schedules, :message, 3, "openstorage.api.SdkSchedulePolicyInterval"
      optional :max_backups, :uint64, 4
      optional :full, :bool, 5
      optional :retention_days, :uint32, 6
      optional :group_id, :string, 7
      map :labels, :string, :string, 8
    end
    add_message "openstorage.api.SdkCloudBackupSchedCreateRequest" do
      optional :cloud_sched_info, :message, 1, "openstorage.api.SdkCloudBackupScheduleInfo"
    end
    add_message "openstorage.api.SdkCloudBackupSchedCreateResponse" do
      optional :backup_schedule_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudBackupSchedUpdateRequest" do
      optional :cloud_sched_info, :message, 1, "openstorage.api.SdkCloudBackupScheduleInfo"
      optional :sched_uuid, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupSchedUpdateResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupSchedDeleteRequest" do
      optional :backup_schedule_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudBackupSchedDeleteResponse" do
    end
    add_message "openstorage.api.SdkCloudBackupSchedEnumerateRequest" do
    end
    add_message "openstorage.api.SdkCloudBackupSchedEnumerateResponse" do
      map :cloud_sched_list, :string, :message, 1, "openstorage.api.SdkCloudBackupScheduleInfo"
    end
    add_message "openstorage.api.SdkCloudBackupSizeRequest" do
      optional :backup_id, :string, 1
      optional :credential_id, :string, 2
    end
    add_message "openstorage.api.SdkCloudBackupSizeResponse" do
      optional :size, :uint64, 1
    end
    add_message "openstorage.api.SdkRule" do
      repeated :services, :string, 1
      repeated :apis, :string, 2
    end
    add_message "openstorage.api.SdkRole" do
      optional :name, :string, 1
      repeated :rules, :message, 2, "openstorage.api.SdkRule"
    end
    add_message "openstorage.api.SdkRoleCreateRequest" do
      optional :role, :message, 1, "openstorage.api.SdkRole"
    end
    add_message "openstorage.api.SdkRoleCreateResponse" do
      optional :role, :message, 1, "openstorage.api.SdkRole"
    end
    add_message "openstorage.api.SdkRoleEnumerateRequest" do
    end
    add_message "openstorage.api.SdkRoleEnumerateResponse" do
      repeated :names, :string, 1
    end
    add_message "openstorage.api.SdkRoleInspectRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkRoleInspectResponse" do
      optional :role, :message, 1, "openstorage.api.SdkRole"
    end
    add_message "openstorage.api.SdkRoleDeleteRequest" do
      optional :name, :string, 1
    end
    add_message "openstorage.api.SdkRoleDeleteResponse" do
    end
    add_message "openstorage.api.SdkRoleUpdateRequest" do
      optional :role, :message, 1, "openstorage.api.SdkRole"
    end
    add_message "openstorage.api.SdkRoleUpdateResponse" do
      optional :role, :message, 1, "openstorage.api.SdkRole"
    end
    add_message "openstorage.api.FilesystemTrim" do
    end
    add_enum "openstorage.api.FilesystemTrim.FilesystemTrimStatus" do
      value :FS_TRIM_UNKNOWN, 0
      value :FS_TRIM_NOT_RUNNING, 1
      value :FS_TRIM_STARTED, 2
      value :FS_TRIM_INPROGRESS, 3
      value :FS_TRIM_STOPPED, 4
      value :FS_TRIM_COMPLETED, 5
      value :FS_TRIM_FAILED, 6
    end
    add_message "openstorage.api.SdkFilesystemTrimStartRequest" do
      optional :volume_id, :string, 1
      optional :mount_path, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemTrimStartResponse" do
      optional :status, :enum, 1, "openstorage.api.FilesystemTrim.FilesystemTrimStatus"
      optional :message, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemTrimStatusRequest" do
      optional :volume_id, :string, 1
      optional :mount_path, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemTrimStatusResponse" do
      optional :status, :enum, 1, "openstorage.api.FilesystemTrim.FilesystemTrimStatus"
      optional :message, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemTrimStopRequest" do
      optional :volume_id, :string, 1
      optional :mount_path, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemTrimStopResponse" do
    end
    add_message "openstorage.api.FilesystemCheck" do
    end
    add_enum "openstorage.api.FilesystemCheck.FilesystemCheckStatus" do
      value :FS_CHECK_UNKNOWN, 0
      value :FS_CHECK_NOT_RUNNING, 1
      value :FS_CHECK_STARTED, 2
      value :FS_CHECK_INPROGRESS, 3
      value :FS_CHECK_STOPPED, 4
      value :FS_CHECK_COMPLETED, 5
      value :FS_CHECK_FAILED, 6
    end
    add_message "openstorage.api.SdkFilesystemCheckStartRequest" do
      optional :volume_id, :string, 1
      optional :mode, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemCheckStartResponse" do
      optional :status, :enum, 1, "openstorage.api.FilesystemCheck.FilesystemCheckStatus"
      optional :message, :string, 2
    end
    add_message "openstorage.api.SdkFilesystemCheckStatusRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkFilesystemCheckStatusResponse" do
      optional :status, :enum, 1, "openstorage.api.FilesystemCheck.FilesystemCheckStatus"
      optional :health_status, :enum, 2, "openstorage.api.FilesystemHealthStatus"
      optional :mode, :string, 3
      optional :message, :string, 4
    end
    add_message "openstorage.api.SdkFilesystemCheckStopRequest" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkFilesystemCheckStopResponse" do
    end
    add_message "openstorage.api.SdkIdentityCapabilitiesRequest" do
    end
    add_message "openstorage.api.SdkIdentityCapabilitiesResponse" do
      repeated :capabilities, :message, 1, "openstorage.api.SdkServiceCapability"
    end
    add_message "openstorage.api.SdkIdentityVersionRequest" do
    end
    add_message "openstorage.api.SdkIdentityVersionResponse" do
      optional :sdk_version, :message, 1, "openstorage.api.SdkVersion"
      optional :version, :message, 2, "openstorage.api.StorageVersion"
    end
    add_message "openstorage.api.SdkServiceCapability" do
      oneof :type do
        optional :service, :message, 1, "openstorage.api.SdkServiceCapability.OpenStorageService"
      end
    end
    add_message "openstorage.api.SdkServiceCapability.OpenStorageService" do
      optional :type, :enum, 1, "openstorage.api.SdkServiceCapability.OpenStorageService.Type"
    end
    add_enum "openstorage.api.SdkServiceCapability.OpenStorageService.Type" do
      value :UNKNOWN, 0
      value :CLUSTER, 1
      value :CLOUD_BACKUP, 2
      value :CREDENTIALS, 3
      value :NODE, 4
      value :OBJECT_STORAGE, 5
      value :SCHEDULE_POLICY, 6
      value :VOLUME, 7
      value :ALERTS, 8
      value :MOUNT_ATTACH, 9
      value :ROLE, 10
      value :CLUSTER_PAIR, 11
      value :MIGRATE, 12
      value :STORAGE_POLICY, 13
    end
    add_message "openstorage.api.SdkVersion" do
      optional :major, :int32, 1
      optional :minor, :int32, 2
      optional :patch, :int32, 3
      optional :version, :string, 4
    end
    add_enum "openstorage.api.SdkVersion.Version" do
      value :MUST_HAVE_ZERO_VALUE, 0
      value :Major, 0
      value :Minor, 69
      value :Patch, 29
    end
    add_message "openstorage.api.StorageVersion" do
      optional :driver, :string, 1
      optional :version, :string, 2
      map :details, :string, :string, 3
    end
    add_message "openstorage.api.CloudMigrate" do
    end
    add_enum "openstorage.api.CloudMigrate.OperationType" do
      value :InvalidType, 0
      value :MigrateCluster, 1
      value :MigrateVolume, 2
      value :MigrateVolumeGroup, 3
    end
    add_enum "openstorage.api.CloudMigrate.Stage" do
      value :InvalidStage, 0
      value :Backup, 1
      value :Restore, 2
      value :VolumeUpdate, 3
      value :Done, 4
    end
    add_enum "openstorage.api.CloudMigrate.Status" do
      value :InvalidStatus, 0
      value :Queued, 1
      value :Initialized, 2
      value :InProgress, 3
      value :Failed, 4
      value :Complete, 5
      value :Canceled, 6
    end
    add_message "openstorage.api.CloudMigrateStartRequest" do
      optional :operation, :enum, 1, "openstorage.api.CloudMigrate.OperationType"
      optional :cluster_id, :string, 2
      optional :target_id, :string, 3
      optional :task_id, :string, 4
    end
    add_message "openstorage.api.SdkCloudMigrateStartRequest" do
      optional :cluster_id, :string, 1
      optional :task_id, :string, 2
      oneof :opt do
        optional :volume, :message, 200, "openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume"
        optional :volume_group, :message, 201, "openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup"
        optional :all_volumes, :message, 202, "openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes"
      end
    end
    add_message "openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume" do
      optional :volume_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup" do
      optional :group_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes" do
    end
    add_message "openstorage.api.CloudMigrateStartResponse" do
      optional :task_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudMigrateStartResponse" do
      optional :result, :message, 1, "openstorage.api.CloudMigrateStartResponse"
    end
    add_message "openstorage.api.CloudMigrateCancelRequest" do
      optional :task_id, :string, 1
    end
    add_message "openstorage.api.SdkCloudMigrateCancelRequest" do
      optional :request, :message, 1, "openstorage.api.CloudMigrateCancelRequest"
    end
    add_message "openstorage.api.SdkCloudMigrateCancelResponse" do
    end
    add_message "openstorage.api.CloudMigrateInfo" do
      optional :task_id, :string, 1
      optional :cluster_id, :string, 2
      optional :local_volume_id, :string, 3
      optional :local_volume_name, :string, 4
      optional :remote_volume_id, :string, 5
      optional :cloudbackup_id, :string, 6
      optional :current_stage, :enum, 7, "openstorage.api.CloudMigrate.Stage"
      optional :status, :enum, 8, "openstorage.api.CloudMigrate.Status"
      optional :last_update, :message, 9, "google.protobuf.Timestamp"
      optional :error_reason, :string, 10
      optional :start_time, :message, 11, "google.protobuf.Timestamp"
      optional :completed_time, :message, 12, "google.protobuf.Timestamp"
      optional :bytes_total, :uint64, 13
      optional :bytes_done, :uint64, 14
      optional :eta_seconds, :int64, 15
    end
    add_message "openstorage.api.CloudMigrateInfoList" do
      repeated :list, :message, 1, "openstorage.api.CloudMigrateInfo"
    end
    add_message "openstorage.api.SdkCloudMigrateStatusRequest" do
      optional :request, :message, 1, "openstorage.api.CloudMigrateStatusRequest"
    end
    add_message "openstorage.api.CloudMigrateStatusRequest" do
      optional :task_id, :string, 1
      optional :cluster_id, :string, 2
    end
    add_message "openstorage.api.CloudMigrateStatusResponse" do
      map :info, :string, :message, 1, "openstorage.api.CloudMigrateInfoList"
    end
    add_message "openstorage.api.SdkCloudMigrateStatusResponse" do
      optional :result, :message, 1, "openstorage.api.CloudMigrateStatusResponse"
    end
    add_message "openstorage.api.ClusterPairMode" do
    end
    add_enum "openstorage.api.ClusterPairMode.Mode" do
      value :Default, 0
      value :DisasterRecovery, 1
    end
    add_message "openstorage.api.ClusterPairCreateRequest" do
      optional :remote_cluster_ip, :string, 1
      optional :remote_cluster_port, :uint32, 2
      optional :remote_cluster_token, :string, 3
      optional :set_default, :bool, 4
      optional :mode, :enum, 5, "openstorage.api.ClusterPairMode.Mode"
      optional :credential_id, :string, 6
    end
    add_message "openstorage.api.ClusterPairCreateResponse" do
      optional :remote_cluster_id, :string, 1
      optional :remote_cluster_name, :string, 2
    end
    add_message "openstorage.api.SdkClusterPairCreateRequest" do
      optional :request, :message, 1, "openstorage.api.ClusterPairCreateRequest"
    end
    add_message "openstorage.api.SdkClusterPairCreateResponse" do
      optional :result, :message, 1, "openstorage.api.ClusterPairCreateResponse"
    end
    add_message "openstorage.api.ClusterPairProcessRequest" do
      optional :source_cluster_id, :string, 1
      optional :remote_cluster_token, :string, 2
      optional :mode, :enum, 3, "openstorage.api.ClusterPairMode.Mode"
      optional :credential_id, :string, 4
    end
    add_message "openstorage.api.ClusterPairProcessResponse" do
      optional :remote_cluster_id, :string, 1
      optional :remote_cluster_name, :string, 2
      repeated :remote_cluster_endpoints, :string, 3
      map :options, :string, :string, 4
    end
    add_message "openstorage.api.SdkClusterPairDeleteRequest" do
      optional :cluster_id, :string, 1
    end
    add_message "openstorage.api.SdkClusterPairDeleteResponse" do
    end
    add_message "openstorage.api.ClusterPairTokenGetResponse" do
      optional :token, :string, 1
    end
    add_message "openstorage.api.SdkClusterPairGetTokenRequest" do
    end
    add_message "openstorage.api.SdkClusterPairGetTokenResponse" do
      optional :result, :message, 1, "openstorage.api.ClusterPairTokenGetResponse"
    end
    add_message "openstorage.api.SdkClusterPairResetTokenRequest" do
    end
    add_message "openstorage.api.SdkClusterPairResetTokenResponse" do
      optional :result, :message, 1, "openstorage.api.ClusterPairTokenGetResponse"
    end
    add_message "openstorage.api.ClusterPairInfo" do
      optional :id, :string, 1
      optional :name, :string, 2
      optional :endpoint, :string, 3
      repeated :current_endpoints, :string, 4
      optional :secure, :bool, 5
      optional :token, :string, 6
      map :options, :string, :string, 7
      optional :mode, :enum, 8, "openstorage.api.ClusterPairMode.Mode"
    end
    add_message "openstorage.api.SdkClusterPairInspectRequest" do
      optional :id, :string, 1
    end
    add_message "openstorage.api.ClusterPairGetResponse" do
      optional :pair_info, :message, 1, "openstorage.api.ClusterPairInfo"
    end
    add_message "openstorage.api.SdkClusterPairInspectResponse" do
      optional :result, :message, 1, "openstorage.api.ClusterPairGetResponse"
    end
    add_message "openstorage.api.SdkClusterPairEnumerateRequest" do
    end
    add_message "openstorage.api.ClusterPairsEnumerateResponse" do
      optional :default_id, :string, 1
      map :pairs, :string, :message, 2, "openstorage.api.ClusterPairInfo"
    end
    add_message "openstorage.api.SdkClusterPairEnumerateResponse" do
      optional :result, :message, 1, "openstorage.api.ClusterPairsEnumerateResponse"
    end
    add_message "openstorage.api.Catalog" do
      optional :name, :string, 1
      optional :path, :string, 2
      optional :type, :string, 3
      optional :size, :uint64, 4
      optional :LastModified, :message, 5, "google.protobuf.Timestamp"
      repeated :children, :message, 6, "openstorage.api.Catalog"
    end
    add_message "openstorage.api.Report" do
      optional :directories, :int64, 2
      optional :files, :int64, 3
    end
    add_message "openstorage.api.CatalogResponse" do
      optional :root, :message, 1, "openstorage.api.Catalog"
      optional :report, :message, 2, "openstorage.api.Report"
    end
    add_message "openstorage.api.LocateResponse" do
      map :mounts, :string, :string, 1
      map :dockerids, :string, :string, 2
    end
    add_message "openstorage.api.VolumePlacementStrategy" do
      repeated :replica_affinity, :message, 1, "openstorage.api.ReplicaPlacementSpec"
      repeated :replica_anti_affinity, :message, 2, "openstorage.api.ReplicaPlacementSpec"
      repeated :volume_affinity, :message, 3, "openstorage.api.VolumePlacementSpec"
      repeated :volume_anti_affinity, :message, 4, "openstorage.api.VolumePlacementSpec"
    end
    add_message "openstorage.api.ReplicaPlacementSpec" do
      optional :weight, :int64, 1
      optional :enforcement, :enum, 2, "openstorage.api.EnforcementType"
      optional :affected_replicas, :int32, 3
      optional :topology_key, :string, 4
      repeated :match_expressions, :message, 5, "openstorage.api.LabelSelectorRequirement"
    end
    add_message "openstorage.api.VolumePlacementSpec" do
      optional :weight, :int64, 1
      optional :enforcement, :enum, 2, "openstorage.api.EnforcementType"
      optional :topology_key, :string, 3
      repeated :match_expressions, :message, 4, "openstorage.api.LabelSelectorRequirement"
    end
    add_message "openstorage.api.LabelSelectorRequirement" do
      optional :key, :string, 1
      optional :operator, :enum, 2, "openstorage.api.LabelSelectorRequirement.Operator"
      repeated :values, :string, 3
    end
    add_enum "openstorage.api.LabelSelectorRequirement.Operator" do
      value :In, 0
      value :NotIn, 1
      value :Exists, 2
      value :DoesNotExist, 3
      value :Gt, 4
      value :Lt, 5
    end
    add_message "openstorage.api.RestoreVolSnashotSchedule" do
      optional :schedule, :string, 1
    end
    add_message "openstorage.api.RestoreVolStoragePolicy" do
      optional :policy, :string, 1
    end
    add_message "openstorage.api.RestoreVolumeSpec" do
      optional :ha_level, :int64, 1
      optional :cos, :enum, 2, "openstorage.api.CosType"
      optional :io_profile, :enum, 3, "openstorage.api.IoProfile"
      optional :snapshot_interval, :uint32, 4
      optional :shared, :enum, 5, "openstorage.api.RestoreParamBoolType"
      optional :replica_set, :message, 6, "openstorage.api.ReplicaSet"
      optional :aggregation_level, :uint32, 7
      optional :snapshot_schedule, :message, 8, "openstorage.api.RestoreVolSnashotSchedule"
      optional :sticky, :enum, 9, "openstorage.api.RestoreParamBoolType"
      optional :group, :message, 10, "openstorage.api.Group"
      optional :group_enforced, :bool, 11
      optional :journal, :enum, 12, "openstorage.api.RestoreParamBoolType"
      optional :sharedv4, :enum, 13, "openstorage.api.RestoreParamBoolType"
      optional :queue_depth, :uint32, 14
      optional :nodiscard, :enum, 15, "openstorage.api.RestoreParamBoolType"
      optional :io_strategy, :message, 16, "openstorage.api.IoStrategy"
      optional :placement_strategy, :message, 17, "openstorage.api.VolumePlacementStrategy"
      optional :storage_policy, :message, 18, "openstorage.api.RestoreVolStoragePolicy"
      optional :ownership, :message, 19, "openstorage.api.Ownership"
      optional :export_spec, :message, 20, "openstorage.api.ExportSpec"
      optional :fp_preference, :enum, 21, "openstorage.api.RestoreParamBoolType"
      optional :mount_options, :message, 22, "openstorage.api.MountOptions"
      optional :sharedv4_mount_options, :message, 23, "openstorage.api.MountOptions"
      optional :io_profile_bkup_src, :bool, 25
      optional :proxy_spec, :message, 26, "openstorage.api.ProxySpec"
      optional :proxy_write, :enum, 24, "openstorage.api.RestoreParamBoolType"
    end
    add_message "openstorage.api.SdkVolumeCatalogRequest" do
      optional :volume_id, :string, 1
      optional :path, :string, 2
      optional :depth, :string, 3
    end
    add_message "openstorage.api.SdkVolumeCatalogResponse" do
      optional :catalog, :message, 1, "openstorage.api.CatalogResponse"
    end
    add_enum "openstorage.api.Status" do
      value :STATUS_NONE, 0
      value :STATUS_INIT, 1
      value :STATUS_OK, 2
      value :STATUS_OFFLINE, 3
      value :STATUS_ERROR, 4
      value :STATUS_NOT_IN_QUORUM, 5
      value :STATUS_DECOMMISSION, 6
      value :STATUS_MAINTENANCE, 7
      value :STATUS_STORAGE_DOWN, 8
      value :STATUS_STORAGE_DEGRADED, 9
      value :STATUS_NEEDS_REBOOT, 10
      value :STATUS_STORAGE_REBALANCE, 11
      value :STATUS_STORAGE_DRIVE_REPLACE, 12
      value :STATUS_NOT_IN_QUORUM_NO_STORAGE, 13
      value :STATUS_MAX, 14
    end
    add_enum "openstorage.api.DriverType" do
      value :DRIVER_TYPE_NONE, 0
      value :DRIVER_TYPE_FILE, 1
      value :DRIVER_TYPE_BLOCK, 2
      value :DRIVER_TYPE_OBJECT, 3
      value :DRIVER_TYPE_CLUSTERED, 4
      value :DRIVER_TYPE_GRAPH, 5
    end
    add_enum "openstorage.api.FSType" do
      value :FS_TYPE_NONE, 0
      value :FS_TYPE_BTRFS, 1
      value :FS_TYPE_EXT4, 2
      value :FS_TYPE_FUSE, 3
      value :FS_TYPE_NFS, 4
      value :FS_TYPE_VFS, 5
      value :FS_TYPE_XFS, 6
      value :FS_TYPE_ZFS, 7
      value :FS_TYPE_XFSv2, 8
    end
    add_enum "openstorage.api.GraphDriverChangeType" do
      value :GRAPH_DRIVER_CHANGE_TYPE_NONE, 0
      value :GRAPH_DRIVER_CHANGE_TYPE_MODIFIED, 1
      value :GRAPH_DRIVER_CHANGE_TYPE_ADDED, 2
      value :GRAPH_DRIVER_CHANGE_TYPE_DELETED, 3
    end
    add_enum "openstorage.api.SeverityType" do
      value :SEVERITY_TYPE_NONE, 0
      value :SEVERITY_TYPE_ALARM, 1
      value :SEVERITY_TYPE_WARNING, 2
      value :SEVERITY_TYPE_NOTIFY, 3
    end
    add_enum "openstorage.api.ResourceType" do
      value :RESOURCE_TYPE_NONE, 0
      value :RESOURCE_TYPE_VOLUME, 1
      value :RESOURCE_TYPE_NODE, 2
      value :RESOURCE_TYPE_CLUSTER, 3
      value :RESOURCE_TYPE_DRIVE, 4
      value :RESOURCE_TYPE_POOL, 5
    end
    add_enum "openstorage.api.AlertActionType" do
      value :ALERT_ACTION_TYPE_NONE, 0
      value :ALERT_ACTION_TYPE_DELETE, 1
      value :ALERT_ACTION_TYPE_CREATE, 2
      value :ALERT_ACTION_TYPE_UPDATE, 3
    end
    add_enum "openstorage.api.VolumeActionParam" do
      value :VOLUME_ACTION_PARAM_NONE, 0
      value :VOLUME_ACTION_PARAM_OFF, 1
      value :VOLUME_ACTION_PARAM_ON, 2
    end
    add_enum "openstorage.api.CosType" do
      value :NONE, 0
      value :LOW, 1
      value :MEDIUM, 2
      value :HIGH, 3
    end
    add_enum "openstorage.api.IoProfile" do
      value :IO_PROFILE_SEQUENTIAL, 0
      value :IO_PROFILE_RANDOM, 1
      value :IO_PROFILE_DB, 2
      value :IO_PROFILE_DB_REMOTE, 3
      value :IO_PROFILE_CMS, 4
      value :IO_PROFILE_SYNC_SHARED, 5
      value :IO_PROFILE_AUTO, 6
    end
    add_enum "openstorage.api.VolumeState" do
      value :VOLUME_STATE_NONE, 0
      value :VOLUME_STATE_PENDING, 1
      value :VOLUME_STATE_AVAILABLE, 2
      value :VOLUME_STATE_ATTACHED, 3
      value :VOLUME_STATE_DETACHED, 4
      value :VOLUME_STATE_DETATCHING, 5
      value :VOLUME_STATE_ERROR, 6
      value :VOLUME_STATE_DELETED, 7
      value :VOLUME_STATE_TRY_DETACHING, 8
      value :VOLUME_STATE_RESTORE, 9
    end
    add_enum "openstorage.api.VolumeStatus" do
      value :VOLUME_STATUS_NONE, 0
      value :VOLUME_STATUS_NOT_PRESENT, 1
      value :VOLUME_STATUS_UP, 2
      value :VOLUME_STATUS_DOWN, 3
      value :VOLUME_STATUS_DEGRADED, 4
    end
    add_enum "openstorage.api.FilesystemHealthStatus" do
      value :FS_HEALTH_STATUS_UNKNOWN, 0
      value :FS_HEALTH_STATUS_HEALTHY, 1
      value :FS_HEALTH_STATUS_SAFE_TO_FIX, 2
      value :FS_HEALTH_STATUS_NEEDS_INSPECTION, 3
    end
    add_enum "openstorage.api.StorageMedium" do
      value :STORAGE_MEDIUM_MAGNETIC, 0
      value :STORAGE_MEDIUM_SSD, 1
      value :STORAGE_MEDIUM_NVME, 2
    end
    add_enum "openstorage.api.AttachState" do
      value :ATTACH_STATE_EXTERNAL, 0
      value :ATTACH_STATE_INTERNAL, 1
      value :ATTACH_STATE_INTERNAL_SWITCH, 2
    end
    add_enum "openstorage.api.OperationFlags" do
      value :OP_FLAGS_UNKNOWN, 0
      value :OP_FLAGS_NONE, 1
      value :OP_FLAGS_DETACH_FORCE, 2
    end
    add_enum "openstorage.api.HardwareType" do
      value :UnknownMachine, 0
      value :VirtualMachine, 1
      value :BareMetalMachine, 2
    end
    add_enum "openstorage.api.ExportProtocol" do
      value :INVALID, 0
      value :PXD, 1
      value :ISCSI, 2
      value :NFS, 3
      value :CUSTOM, 4
    end
    add_enum "openstorage.api.ProxyProtocol" do
      value :PROXY_PROTOCOL_INVALID, 0
      value :PROXY_PROTOCOL_NFS, 1
      value :PROXY_PROTOCOL_S3, 2
      value :PROXY_PROTOCOL_PXD, 3
    end
    add_enum "openstorage.api.FastpathStatus" do
      value :FASTPATH_UNKNOWN, 0
      value :FASTPATH_ACTIVE, 1
      value :FASTPATH_INACTIVE, 2
      value :FASTPATH_UNSUPPORTED, 3
      value :FASTPATH_PENDING, 4
      value :FASTPATH_ERRORED, 5
    end
    add_enum "openstorage.api.FastpathProtocol" do
      value :FASTPATH_PROTO_UNKNOWN, 0
      value :FASTPATH_PROTO_NVMEOF_TCP, 1
      value :FASTPATH_PROTO_ISCSI, 2
    end
    add_enum "openstorage.api.SdkTimeWeekday" do
      value :SdkTimeWeekdaySunday, 0
      value :SdkTimeWeekdayMonday, 1
      value :SdkTimeWeekdayTuesday, 2
      value :SdkTimeWeekdayWednesday, 3
      value :SdkTimeWeekdayThursday, 4
      value :SdkTimeWeekdayFriday, 5
      value :SdkTimeWeekdaySaturday, 6
    end
    add_enum "openstorage.api.JobType" do
      value :JobTypeNone, 0
      value :JobTypeDrainAttachments, 1
    end
    add_enum "openstorage.api.JobState" do
      value :JOB_STATE_PENDING, 0
      value :JOB_STATE_RUNNING, 1
      value :JOB_STATE_DONE, 2
      value :JOB_STATE_PAUSED, 3
      value :JOB_STATE_CANCELLED, 4
      value :JOB_STATE_FAILED, 5
    end
    add_enum "openstorage.api.StorageRebalanceJobState" do
      value :PENDING, 0
      value :RUNNING, 1
      value :DONE, 2
      value :PAUSED, 3
      value :CANCELLED, 4
    end
    add_enum "openstorage.api.SdkCloudBackupOpType" do
      value :SdkCloudBackupOpTypeUnknown, 0
      value :SdkCloudBackupOpTypeBackupOp, 1
      value :SdkCloudBackupOpTypeRestoreOp, 2
    end
    add_enum "openstorage.api.SdkCloudBackupStatusType" do
      value :SdkCloudBackupStatusTypeUnknown, 0
      value :SdkCloudBackupStatusTypeNotStarted, 1
      value :SdkCloudBackupStatusTypeDone, 2
      value :SdkCloudBackupStatusTypeAborted, 3
      value :SdkCloudBackupStatusTypePaused, 4
      value :SdkCloudBackupStatusTypeStopped, 5
      value :SdkCloudBackupStatusTypeActive, 6
      value :SdkCloudBackupStatusTypeFailed, 7
      value :SdkCloudBackupStatusTypeQueued, 8
      value :SdkCloudBackupStatusTypeInvalid, 9
    end
    add_enum "openstorage.api.SdkCloudBackupRequestedState" do
      value :SdkCloudBackupRequestedStateUnknown, 0
      value :SdkCloudBackupRequestedStatePause, 1
      value :SdkCloudBackupRequestedStateResume, 2
      value :SdkCloudBackupRequestedStateStop, 3
    end
    add_enum "openstorage.api.EnforcementType" do
      value :required, 0
      value :preferred, 1
    end
    add_enum "openstorage.api.RestoreParamBoolType" do
      value :PARAM_BKUPSRC, 0
      value :PARAM_FALSE, 1
      value :PARAM_TRUE, 2
    end
  end
end

module Openstorage
  module Api
    StorageResource = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageResource").msgclass
    StoragePool = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StoragePool").msgclass
    StoragePoolOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StoragePoolOperation").msgclass
    VolumeLocator = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeLocator").msgclass
    VolumeInspectOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeInspectOptions").msgclass
    Source = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Source").msgclass
    Group = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Group").msgclass
    IoStrategy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.IoStrategy").msgclass
    Xattr = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Xattr").msgclass
    Xattr::Value = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Xattr.Value").enummodule
    ExportSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ExportSpec").msgclass
    NFSProxySpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.NFSProxySpec").msgclass
    S3ProxySpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.S3ProxySpec").msgclass
    PXDProxySpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.PXDProxySpec").msgclass
    ProxySpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ProxySpec").msgclass
    MountOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.MountOptions").msgclass
    FastpathReplState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FastpathReplState").msgclass
    FastpathConfig = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FastpathConfig").msgclass
    ScanPolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ScanPolicy").msgclass
    ScanPolicy::ScanTrigger = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ScanPolicy.ScanTrigger").enummodule
    ScanPolicy::ScanAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ScanPolicy.ScanAction").enummodule
    VolumeSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSpec").msgclass
    VolumeSpecUpdate = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSpecUpdate").msgclass
    VolumeSpecPolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSpecPolicy").msgclass
    VolumeSpecPolicy::PolicyOp = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSpecPolicy.PolicyOp").enummodule
    ReplicaSet = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ReplicaSet").msgclass
    RuntimeStateMap = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.RuntimeStateMap").msgclass
    Ownership = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Ownership").msgclass
    Ownership::PublicAccessControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Ownership.PublicAccessControl").msgclass
    Ownership::AccessControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Ownership.AccessControl").msgclass
    Ownership::AccessType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Ownership.AccessType").enummodule
    Volume = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Volume").msgclass
    Stats = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Stats").msgclass
    CapacityUsageInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CapacityUsageInfo").msgclass
    VolumeUsage = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeUsage").msgclass
    VolumeUsageByNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeUsageByNode").msgclass
    SdkStoragePolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePolicy").msgclass
    Alert = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Alert").msgclass
    SdkAlertsTimeSpan = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsTimeSpan").msgclass
    SdkAlertsCountSpan = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsCountSpan").msgclass
    SdkAlertsOption = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsOption").msgclass
    SdkAlertsResourceTypeQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsResourceTypeQuery").msgclass
    SdkAlertsAlertTypeQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsAlertTypeQuery").msgclass
    SdkAlertsResourceIdQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsResourceIdQuery").msgclass
    SdkAlertsQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsQuery").msgclass
    SdkAlertsEnumerateWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsEnumerateWithFiltersRequest").msgclass
    SdkAlertsEnumerateWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsEnumerateWithFiltersResponse").msgclass
    SdkAlertsDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsDeleteRequest").msgclass
    SdkAlertsDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAlertsDeleteResponse").msgclass
    Alerts = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Alerts").msgclass
    ObjectstoreInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ObjectstoreInfo").msgclass
    VolumeCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeCreateRequest").msgclass
    VolumeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeResponse").msgclass
    VolumeCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeCreateResponse").msgclass
    VolumeStateAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeStateAction").msgclass
    VolumeSetRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSetRequest").msgclass
    VolumeSetResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeSetResponse").msgclass
    SnapCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SnapCreateRequest").msgclass
    SnapCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SnapCreateResponse").msgclass
    VolumeInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeInfo").msgclass
    VolumeConsumer = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeConsumer").msgclass
    VolumeServiceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeServiceRequest").msgclass
    VolumeServiceInstanceResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeServiceInstanceResponse").msgclass
    VolumeServiceResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeServiceResponse").msgclass
    GraphDriverChanges = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.GraphDriverChanges").msgclass
    ClusterResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterResponse").msgclass
    ActiveRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ActiveRequest").msgclass
    ActiveRequests = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ActiveRequests").msgclass
    GroupSnapCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.GroupSnapCreateRequest").msgclass
    GroupSnapCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.GroupSnapCreateResponse").msgclass
    StorageNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageNode").msgclass
    StorageCluster = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageCluster").msgclass
    SdkOpenStoragePolicyCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyCreateRequest").msgclass
    SdkOpenStoragePolicyCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyCreateResponse").msgclass
    SdkOpenStoragePolicyEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyEnumerateRequest").msgclass
    SdkOpenStoragePolicyEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyEnumerateResponse").msgclass
    SdkOpenStoragePolicyInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyInspectRequest").msgclass
    SdkOpenStoragePolicyInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyInspectResponse").msgclass
    SdkOpenStoragePolicyDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyDeleteRequest").msgclass
    SdkOpenStoragePolicyDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyDeleteResponse").msgclass
    SdkOpenStoragePolicyUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyUpdateRequest").msgclass
    SdkOpenStoragePolicyUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyUpdateResponse").msgclass
    SdkOpenStoragePolicySetDefaultRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicySetDefaultRequest").msgclass
    SdkOpenStoragePolicySetDefaultResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicySetDefaultResponse").msgclass
    SdkOpenStoragePolicyReleaseRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyReleaseRequest").msgclass
    SdkOpenStoragePolicyReleaseResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyReleaseResponse").msgclass
    SdkOpenStoragePolicyDefaultInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest").msgclass
    SdkOpenStoragePolicyDefaultInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse").msgclass
    SdkSchedulePolicyCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyCreateRequest").msgclass
    SdkSchedulePolicyCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyCreateResponse").msgclass
    SdkSchedulePolicyUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyUpdateRequest").msgclass
    SdkSchedulePolicyUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyUpdateResponse").msgclass
    SdkSchedulePolicyEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyEnumerateRequest").msgclass
    SdkSchedulePolicyEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyEnumerateResponse").msgclass
    SdkSchedulePolicyInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyInspectRequest").msgclass
    SdkSchedulePolicyInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyInspectResponse").msgclass
    SdkSchedulePolicyDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyDeleteRequest").msgclass
    SdkSchedulePolicyDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyDeleteResponse").msgclass
    SdkSchedulePolicyIntervalDaily = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyIntervalDaily").msgclass
    SdkSchedulePolicyIntervalWeekly = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyIntervalWeekly").msgclass
    SdkSchedulePolicyIntervalMonthly = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyIntervalMonthly").msgclass
    SdkSchedulePolicyIntervalPeriodic = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyIntervalPeriodic").msgclass
    SdkSchedulePolicyInterval = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicyInterval").msgclass
    SdkSchedulePolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkSchedulePolicy").msgclass
    SdkCredentialCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialCreateRequest").msgclass
    SdkCredentialCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialCreateResponse").msgclass
    SdkAwsCredentialRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAwsCredentialRequest").msgclass
    SdkAzureCredentialRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAzureCredentialRequest").msgclass
    SdkGoogleCredentialRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGoogleCredentialRequest").msgclass
    SdkAwsCredentialResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAwsCredentialResponse").msgclass
    SdkAzureCredentialResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkAzureCredentialResponse").msgclass
    SdkGoogleCredentialResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGoogleCredentialResponse").msgclass
    SdkCredentialEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialEnumerateRequest").msgclass
    SdkCredentialEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialEnumerateResponse").msgclass
    SdkCredentialInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialInspectRequest").msgclass
    SdkCredentialInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialInspectResponse").msgclass
    SdkCredentialDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialDeleteRequest").msgclass
    SdkCredentialDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialDeleteResponse").msgclass
    SdkCredentialValidateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialValidateRequest").msgclass
    SdkCredentialValidateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialValidateResponse").msgclass
    SdkCredentialDeleteReferencesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialDeleteReferencesRequest").msgclass
    SdkCredentialDeleteReferencesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCredentialDeleteReferencesResponse").msgclass
    SdkVolumeAttachOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeAttachOptions").msgclass
    SdkVolumeMountRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeMountRequest").msgclass
    SdkVolumeMountResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeMountResponse").msgclass
    SdkVolumeUnmountOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeUnmountOptions").msgclass
    SdkVolumeUnmountRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeUnmountRequest").msgclass
    SdkVolumeUnmountResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeUnmountResponse").msgclass
    SdkVolumeAttachRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeAttachRequest").msgclass
    SdkVolumeAttachResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeAttachResponse").msgclass
    SdkVolumeDetachOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeDetachOptions").msgclass
    SdkVolumeDetachRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeDetachRequest").msgclass
    SdkVolumeDetachResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeDetachResponse").msgclass
    SdkVolumeCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCreateRequest").msgclass
    SdkVolumeCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCreateResponse").msgclass
    SdkVolumeCloneRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCloneRequest").msgclass
    SdkVolumeCloneResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCloneResponse").msgclass
    SdkVolumeDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeDeleteRequest").msgclass
    SdkVolumeDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeDeleteResponse").msgclass
    SdkVolumeInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeInspectRequest").msgclass
    SdkVolumeInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeInspectResponse").msgclass
    SdkVolumeInspectWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeInspectWithFiltersRequest").msgclass
    SdkVolumeInspectWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeInspectWithFiltersResponse").msgclass
    SdkVolumeUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeUpdateRequest").msgclass
    SdkVolumeUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeUpdateResponse").msgclass
    SdkVolumeStatsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeStatsRequest").msgclass
    SdkVolumeStatsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeStatsResponse").msgclass
    SdkVolumeCapacityUsageRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCapacityUsageRequest").msgclass
    SdkVolumeCapacityUsageResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCapacityUsageResponse").msgclass
    SdkVolumeEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeEnumerateRequest").msgclass
    SdkVolumeEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeEnumerateResponse").msgclass
    SdkVolumeEnumerateWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeEnumerateWithFiltersRequest").msgclass
    SdkVolumeEnumerateWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeEnumerateWithFiltersResponse").msgclass
    SdkVolumeSnapshotCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotCreateRequest").msgclass
    SdkVolumeSnapshotCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotCreateResponse").msgclass
    SdkVolumeSnapshotRestoreRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotRestoreRequest").msgclass
    SdkVolumeSnapshotRestoreResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotRestoreResponse").msgclass
    SdkVolumeSnapshotEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotEnumerateRequest").msgclass
    SdkVolumeSnapshotEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotEnumerateResponse").msgclass
    SdkVolumeSnapshotEnumerateWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest").msgclass
    SdkVolumeSnapshotEnumerateWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse").msgclass
    SdkVolumeSnapshotScheduleUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest").msgclass
    SdkVolumeSnapshotScheduleUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse").msgclass
    SdkNodeVolumeUsageByNodeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeVolumeUsageByNodeRequest").msgclass
    SdkNodeVolumeUsageByNodeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeVolumeUsageByNodeResponse").msgclass
    SdkClusterDomainsEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainsEnumerateRequest").msgclass
    SdkClusterDomainsEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainsEnumerateResponse").msgclass
    SdkClusterDomainInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainInspectRequest").msgclass
    SdkClusterDomainInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainInspectResponse").msgclass
    SdkClusterDomainActivateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainActivateRequest").msgclass
    SdkClusterDomainActivateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainActivateResponse").msgclass
    SdkClusterDomainDeactivateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainDeactivateRequest").msgclass
    SdkClusterDomainDeactivateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterDomainDeactivateResponse").msgclass
    SdkClusterInspectCurrentRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterInspectCurrentRequest").msgclass
    SdkClusterInspectCurrentResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterInspectCurrentResponse").msgclass
    SdkNodeInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeInspectRequest").msgclass
    Job = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Job").msgclass
    SdkJobResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkJobResponse").msgclass
    NodeDrainAttachmentOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.NodeDrainAttachmentOptions").msgclass
    SdkNodeDrainAttachmentsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeDrainAttachmentsRequest").msgclass
    NodeDrainAttachmentsJob = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.NodeDrainAttachmentsJob").msgclass
    SdkEnumerateJobsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkEnumerateJobsRequest").msgclass
    SdkEnumerateJobsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkEnumerateJobsResponse").msgclass
    SdkUpdateJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkUpdateJobRequest").msgclass
    SdkUpdateJobResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkUpdateJobResponse").msgclass
    SdkGetJobStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGetJobStatusRequest").msgclass
    JobAudit = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.JobAudit").msgclass
    JobWorkSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.JobWorkSummary").msgclass
    JobSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.JobSummary").msgclass
    SdkGetJobStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGetJobStatusResponse").msgclass
    DrainAttachmentsSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.DrainAttachmentsSummary").msgclass
    SdkNodeCordonAttachmentsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeCordonAttachmentsRequest").msgclass
    SdkNodeCordonAttachmentsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeCordonAttachmentsResponse").msgclass
    SdkNodeUncordonAttachmentsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeUncordonAttachmentsRequest").msgclass
    SdkNodeUncordonAttachmentsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeUncordonAttachmentsResponse").msgclass
    SdkStoragePoolResizeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePoolResizeRequest").msgclass
    StorageRebalanceTriggerThreshold = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceTriggerThreshold").msgclass
    StorageRebalanceTriggerThreshold::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceTriggerThreshold.Type").enummodule
    StorageRebalanceTriggerThreshold::Metric = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceTriggerThreshold.Metric").enummodule
    SdkStorageRebalanceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStorageRebalanceRequest").msgclass
    SdkStorageRebalanceResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStorageRebalanceResponse").msgclass
    StorageRebalanceJob = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceJob").msgclass
    StorageRebalanceSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceSummary").msgclass
    StorageRebalanceWorkSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceWorkSummary").msgclass
    StorageRebalanceWorkSummary::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceWorkSummary.Type").enummodule
    StorageRebalanceAudit = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceAudit").msgclass
    StorageRebalanceAudit::StorageRebalanceAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceAudit.StorageRebalanceAction").enummodule
    SdkUpdateRebalanceJobRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkUpdateRebalanceJobRequest").msgclass
    SdkUpdateRebalanceJobResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkUpdateRebalanceJobResponse").msgclass
    SdkGetRebalanceJobStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGetRebalanceJobStatusRequest").msgclass
    SdkGetRebalanceJobStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkGetRebalanceJobStatusResponse").msgclass
    SdkEnumerateRebalanceJobsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkEnumerateRebalanceJobsRequest").msgclass
    SdkEnumerateRebalanceJobsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkEnumerateRebalanceJobsResponse").msgclass
    SdkStoragePool = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePool").msgclass
    SdkStoragePool::OperationStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePool.OperationStatus").enummodule
    SdkStoragePool::OperationType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePool.OperationType").enummodule
    SdkStoragePool::ResizeOperationType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePool.ResizeOperationType").enummodule
    SdkStoragePoolResizeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkStoragePoolResizeResponse").msgclass
    SdkNodeInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeInspectResponse").msgclass
    SdkNodeInspectCurrentRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeInspectCurrentRequest").msgclass
    SdkNodeInspectCurrentResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeInspectCurrentResponse").msgclass
    SdkNodeEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeEnumerateRequest").msgclass
    SdkNodeEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeEnumerateResponse").msgclass
    SdkNodeEnumerateWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeEnumerateWithFiltersRequest").msgclass
    SdkNodeEnumerateWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkNodeEnumerateWithFiltersResponse").msgclass
    SdkObjectstoreInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreInspectRequest").msgclass
    SdkObjectstoreInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreInspectResponse").msgclass
    SdkObjectstoreCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreCreateRequest").msgclass
    SdkObjectstoreCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreCreateResponse").msgclass
    SdkObjectstoreDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreDeleteRequest").msgclass
    SdkObjectstoreDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreDeleteResponse").msgclass
    SdkObjectstoreUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreUpdateRequest").msgclass
    SdkObjectstoreUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkObjectstoreUpdateResponse").msgclass
    SdkCloudBackupCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupCreateRequest").msgclass
    SdkCloudBackupCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupCreateResponse").msgclass
    SdkCloudBackupGroupCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupGroupCreateRequest").msgclass
    SdkCloudBackupGroupCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupGroupCreateResponse").msgclass
    SdkCloudBackupRestoreRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupRestoreRequest").msgclass
    SdkCloudBackupRestoreResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupRestoreResponse").msgclass
    SdkCloudBackupDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupDeleteRequest").msgclass
    SdkCloudBackupDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupDeleteResponse").msgclass
    SdkCloudBackupDeleteAllRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupDeleteAllRequest").msgclass
    SdkCloudBackupDeleteAllResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupDeleteAllResponse").msgclass
    SdkCloudBackupEnumerateWithFiltersRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest").msgclass
    SdkCloudBackupInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupInfo").msgclass
    SdkCloudBackupEnumerateWithFiltersResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse").msgclass
    SdkCloudBackupStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStatus").msgclass
    SdkCloudBackupStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStatusRequest").msgclass
    SdkCloudBackupStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStatusResponse").msgclass
    SdkCloudBackupCatalogRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupCatalogRequest").msgclass
    SdkCloudBackupCatalogResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupCatalogResponse").msgclass
    SdkCloudBackupHistoryItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupHistoryItem").msgclass
    SdkCloudBackupHistoryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupHistoryRequest").msgclass
    SdkCloudBackupHistoryResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupHistoryResponse").msgclass
    SdkCloudBackupStateChangeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStateChangeRequest").msgclass
    SdkCloudBackupStateChangeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStateChangeResponse").msgclass
    SdkCloudBackupScheduleInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupScheduleInfo").msgclass
    SdkCloudBackupSchedCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedCreateRequest").msgclass
    SdkCloudBackupSchedCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedCreateResponse").msgclass
    SdkCloudBackupSchedUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedUpdateRequest").msgclass
    SdkCloudBackupSchedUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedUpdateResponse").msgclass
    SdkCloudBackupSchedDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedDeleteRequest").msgclass
    SdkCloudBackupSchedDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedDeleteResponse").msgclass
    SdkCloudBackupSchedEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedEnumerateRequest").msgclass
    SdkCloudBackupSchedEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSchedEnumerateResponse").msgclass
    SdkCloudBackupSizeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSizeRequest").msgclass
    SdkCloudBackupSizeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupSizeResponse").msgclass
    SdkRule = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRule").msgclass
    SdkRole = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRole").msgclass
    SdkRoleCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleCreateRequest").msgclass
    SdkRoleCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleCreateResponse").msgclass
    SdkRoleEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleEnumerateRequest").msgclass
    SdkRoleEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleEnumerateResponse").msgclass
    SdkRoleInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleInspectRequest").msgclass
    SdkRoleInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleInspectResponse").msgclass
    SdkRoleDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleDeleteRequest").msgclass
    SdkRoleDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleDeleteResponse").msgclass
    SdkRoleUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleUpdateRequest").msgclass
    SdkRoleUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkRoleUpdateResponse").msgclass
    FilesystemTrim = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FilesystemTrim").msgclass
    FilesystemTrim::FilesystemTrimStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FilesystemTrim.FilesystemTrimStatus").enummodule
    SdkFilesystemTrimStartRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStartRequest").msgclass
    SdkFilesystemTrimStartResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStartResponse").msgclass
    SdkFilesystemTrimStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStatusRequest").msgclass
    SdkFilesystemTrimStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStatusResponse").msgclass
    SdkFilesystemTrimStopRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStopRequest").msgclass
    SdkFilesystemTrimStopResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemTrimStopResponse").msgclass
    FilesystemCheck = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FilesystemCheck").msgclass
    FilesystemCheck::FilesystemCheckStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FilesystemCheck.FilesystemCheckStatus").enummodule
    SdkFilesystemCheckStartRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStartRequest").msgclass
    SdkFilesystemCheckStartResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStartResponse").msgclass
    SdkFilesystemCheckStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStatusRequest").msgclass
    SdkFilesystemCheckStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStatusResponse").msgclass
    SdkFilesystemCheckStopRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStopRequest").msgclass
    SdkFilesystemCheckStopResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkFilesystemCheckStopResponse").msgclass
    SdkIdentityCapabilitiesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkIdentityCapabilitiesRequest").msgclass
    SdkIdentityCapabilitiesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkIdentityCapabilitiesResponse").msgclass
    SdkIdentityVersionRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkIdentityVersionRequest").msgclass
    SdkIdentityVersionResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkIdentityVersionResponse").msgclass
    SdkServiceCapability = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkServiceCapability").msgclass
    SdkServiceCapability::OpenStorageService = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkServiceCapability.OpenStorageService").msgclass
    SdkServiceCapability::OpenStorageService::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkServiceCapability.OpenStorageService.Type").enummodule
    SdkVersion = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVersion").msgclass
    SdkVersion::Version = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVersion.Version").enummodule
    StorageVersion = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageVersion").msgclass
    CloudMigrate = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrate").msgclass
    CloudMigrate::OperationType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrate.OperationType").enummodule
    CloudMigrate::Stage = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrate.Stage").enummodule
    CloudMigrate::Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrate.Status").enummodule
    CloudMigrateStartRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateStartRequest").msgclass
    SdkCloudMigrateStartRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStartRequest").msgclass
    SdkCloudMigrateStartRequest::MigrateVolume = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume").msgclass
    SdkCloudMigrateStartRequest::MigrateVolumeGroup = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup").msgclass
    SdkCloudMigrateStartRequest::MigrateAllVolumes = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes").msgclass
    CloudMigrateStartResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateStartResponse").msgclass
    SdkCloudMigrateStartResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStartResponse").msgclass
    CloudMigrateCancelRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateCancelRequest").msgclass
    SdkCloudMigrateCancelRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateCancelRequest").msgclass
    SdkCloudMigrateCancelResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateCancelResponse").msgclass
    CloudMigrateInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateInfo").msgclass
    CloudMigrateInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateInfoList").msgclass
    SdkCloudMigrateStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStatusRequest").msgclass
    CloudMigrateStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateStatusRequest").msgclass
    CloudMigrateStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CloudMigrateStatusResponse").msgclass
    SdkCloudMigrateStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudMigrateStatusResponse").msgclass
    ClusterPairMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairMode").msgclass
    ClusterPairMode::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairMode.Mode").enummodule
    ClusterPairCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairCreateRequest").msgclass
    ClusterPairCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairCreateResponse").msgclass
    SdkClusterPairCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairCreateRequest").msgclass
    SdkClusterPairCreateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairCreateResponse").msgclass
    ClusterPairProcessRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairProcessRequest").msgclass
    ClusterPairProcessResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairProcessResponse").msgclass
    SdkClusterPairDeleteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairDeleteRequest").msgclass
    SdkClusterPairDeleteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairDeleteResponse").msgclass
    ClusterPairTokenGetResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairTokenGetResponse").msgclass
    SdkClusterPairGetTokenRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairGetTokenRequest").msgclass
    SdkClusterPairGetTokenResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairGetTokenResponse").msgclass
    SdkClusterPairResetTokenRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairResetTokenRequest").msgclass
    SdkClusterPairResetTokenResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairResetTokenResponse").msgclass
    ClusterPairInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairInfo").msgclass
    SdkClusterPairInspectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairInspectRequest").msgclass
    ClusterPairGetResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairGetResponse").msgclass
    SdkClusterPairInspectResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairInspectResponse").msgclass
    SdkClusterPairEnumerateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairEnumerateRequest").msgclass
    ClusterPairsEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ClusterPairsEnumerateResponse").msgclass
    SdkClusterPairEnumerateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkClusterPairEnumerateResponse").msgclass
    Catalog = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Catalog").msgclass
    Report = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Report").msgclass
    CatalogResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CatalogResponse").msgclass
    LocateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.LocateResponse").msgclass
    VolumePlacementStrategy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumePlacementStrategy").msgclass
    ReplicaPlacementSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ReplicaPlacementSpec").msgclass
    VolumePlacementSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumePlacementSpec").msgclass
    LabelSelectorRequirement = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.LabelSelectorRequirement").msgclass
    LabelSelectorRequirement::Operator = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.LabelSelectorRequirement.Operator").enummodule
    RestoreVolSnashotSchedule = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.RestoreVolSnashotSchedule").msgclass
    RestoreVolStoragePolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.RestoreVolStoragePolicy").msgclass
    RestoreVolumeSpec = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.RestoreVolumeSpec").msgclass
    SdkVolumeCatalogRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCatalogRequest").msgclass
    SdkVolumeCatalogResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkVolumeCatalogResponse").msgclass
    Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.Status").enummodule
    DriverType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.DriverType").enummodule
    FSType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FSType").enummodule
    GraphDriverChangeType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.GraphDriverChangeType").enummodule
    SeverityType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SeverityType").enummodule
    ResourceType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ResourceType").enummodule
    AlertActionType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.AlertActionType").enummodule
    VolumeActionParam = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeActionParam").enummodule
    CosType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.CosType").enummodule
    IoProfile = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.IoProfile").enummodule
    VolumeState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeState").enummodule
    VolumeStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.VolumeStatus").enummodule
    FilesystemHealthStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FilesystemHealthStatus").enummodule
    StorageMedium = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageMedium").enummodule
    AttachState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.AttachState").enummodule
    OperationFlags = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.OperationFlags").enummodule
    HardwareType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.HardwareType").enummodule
    ExportProtocol = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ExportProtocol").enummodule
    ProxyProtocol = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.ProxyProtocol").enummodule
    FastpathStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FastpathStatus").enummodule
    FastpathProtocol = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.FastpathProtocol").enummodule
    SdkTimeWeekday = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkTimeWeekday").enummodule
    JobType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.JobType").enummodule
    JobState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.JobState").enummodule
    StorageRebalanceJobState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.StorageRebalanceJobState").enummodule
    SdkCloudBackupOpType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupOpType").enummodule
    SdkCloudBackupStatusType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupStatusType").enummodule
    SdkCloudBackupRequestedState = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.SdkCloudBackupRequestedState").enummodule
    EnforcementType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.EnforcementType").enummodule
    RestoreParamBoolType = Google::Protobuf::DescriptorPool.generated_pool.lookup("openstorage.api.RestoreParamBoolType").enummodule
  end
end
