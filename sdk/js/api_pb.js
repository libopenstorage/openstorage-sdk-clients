// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.openstorage.api.ActiveRequest', null, global);
goog.exportSymbol('proto.openstorage.api.ActiveRequests', null, global);
goog.exportSymbol('proto.openstorage.api.Alert', null, global);
goog.exportSymbol('proto.openstorage.api.AlertActionType', null, global);
goog.exportSymbol('proto.openstorage.api.Alerts', null, global);
goog.exportSymbol('proto.openstorage.api.AnonymousBucketAccessMode', null, global);
goog.exportSymbol('proto.openstorage.api.AttachState', null, global);
goog.exportSymbol('proto.openstorage.api.BucketAccessCredentials', null, global);
goog.exportSymbol('proto.openstorage.api.BucketCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.BucketCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.BucketDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.BucketDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.BucketGrantAccessRequest', null, global);
goog.exportSymbol('proto.openstorage.api.BucketGrantAccessResponse', null, global);
goog.exportSymbol('proto.openstorage.api.BucketRevokeAccessRequest', null, global);
goog.exportSymbol('proto.openstorage.api.BucketRevokeAccessResponse', null, global);
goog.exportSymbol('proto.openstorage.api.CapacityUsageInfo', null, global);
goog.exportSymbol('proto.openstorage.api.Catalog', null, global);
goog.exportSymbol('proto.openstorage.api.CatalogResponse', null, global);
goog.exportSymbol('proto.openstorage.api.CloudDriveTransferJob', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrate', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrate.OperationType', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrate.Stage', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrate.Status', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateCancelRequest', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateInfo', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateInfoList', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateStartRequest', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateStartResponse', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.CloudMigrateStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairGetResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairInfo', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairMode', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairMode.Mode', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairProcessRequest', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairProcessResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairTokenGetResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterPairsEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.ClusterResponse', null, global);
goog.exportSymbol('proto.openstorage.api.CollectDiagsJob', null, global);
goog.exportSymbol('proto.openstorage.api.CosType', null, global);
goog.exportSymbol('proto.openstorage.api.DiagsCollectionStatus', null, global);
goog.exportSymbol('proto.openstorage.api.DiagsCollectionStatus.State', null, global);
goog.exportSymbol('proto.openstorage.api.DiagsNodeSelector', null, global);
goog.exportSymbol('proto.openstorage.api.DiagsVolumeSelector', null, global);
goog.exportSymbol('proto.openstorage.api.DrainAttachmentsSummary', null, global);
goog.exportSymbol('proto.openstorage.api.DriverType', null, global);
goog.exportSymbol('proto.openstorage.api.EnforcementType', null, global);
goog.exportSymbol('proto.openstorage.api.ExportProtocol', null, global);
goog.exportSymbol('proto.openstorage.api.ExportSpec', null, global);
goog.exportSymbol('proto.openstorage.api.FSType', null, global);
goog.exportSymbol('proto.openstorage.api.FastpathConfig', null, global);
goog.exportSymbol('proto.openstorage.api.FastpathProtocol', null, global);
goog.exportSymbol('proto.openstorage.api.FastpathReplState', null, global);
goog.exportSymbol('proto.openstorage.api.FastpathStatus', null, global);
goog.exportSymbol('proto.openstorage.api.FilesystemCheck', null, global);
goog.exportSymbol('proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus', null, global);
goog.exportSymbol('proto.openstorage.api.FilesystemHealthStatus', null, global);
goog.exportSymbol('proto.openstorage.api.FilesystemTrim', null, global);
goog.exportSymbol('proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus', null, global);
goog.exportSymbol('proto.openstorage.api.FstrimVolumeUsageInfo', null, global);
goog.exportSymbol('proto.openstorage.api.GraphDriverChangeType', null, global);
goog.exportSymbol('proto.openstorage.api.GraphDriverChanges', null, global);
goog.exportSymbol('proto.openstorage.api.Group', null, global);
goog.exportSymbol('proto.openstorage.api.GroupSnapCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.GroupSnapCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.HardwareType', null, global);
goog.exportSymbol('proto.openstorage.api.IoProfile', null, global);
goog.exportSymbol('proto.openstorage.api.IoStrategy', null, global);
goog.exportSymbol('proto.openstorage.api.IoThrottle', null, global);
goog.exportSymbol('proto.openstorage.api.Job', null, global);
goog.exportSymbol('proto.openstorage.api.Job.JobCase', null, global);
goog.exportSymbol('proto.openstorage.api.Job.State', null, global);
goog.exportSymbol('proto.openstorage.api.Job.Type', null, global);
goog.exportSymbol('proto.openstorage.api.JobAudit', null, global);
goog.exportSymbol('proto.openstorage.api.JobSummary', null, global);
goog.exportSymbol('proto.openstorage.api.JobWorkSummary', null, global);
goog.exportSymbol('proto.openstorage.api.JobWorkSummary.SummaryCase', null, global);
goog.exportSymbol('proto.openstorage.api.LabelSelectorRequirement', null, global);
goog.exportSymbol('proto.openstorage.api.LabelSelectorRequirement.Operator', null, global);
goog.exportSymbol('proto.openstorage.api.LocateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.MountOptions', null, global);
goog.exportSymbol('proto.openstorage.api.NFSProxySpec', null, global);
goog.exportSymbol('proto.openstorage.api.NearSyncReplicationStrategy', null, global);
goog.exportSymbol('proto.openstorage.api.NodeDrainAttachmentOptions', null, global);
goog.exportSymbol('proto.openstorage.api.NodeDrainAttachmentsJob', null, global);
goog.exportSymbol('proto.openstorage.api.ObjectstoreInfo', null, global);
goog.exportSymbol('proto.openstorage.api.OperationFlags', null, global);
goog.exportSymbol('proto.openstorage.api.Ownership', null, global);
goog.exportSymbol('proto.openstorage.api.Ownership.AccessControl', null, global);
goog.exportSymbol('proto.openstorage.api.Ownership.AccessType', null, global);
goog.exportSymbol('proto.openstorage.api.Ownership.PublicAccessControl', null, global);
goog.exportSymbol('proto.openstorage.api.PXDProxySpec', null, global);
goog.exportSymbol('proto.openstorage.api.ProxyProtocol', null, global);
goog.exportSymbol('proto.openstorage.api.ProxySpec', null, global);
goog.exportSymbol('proto.openstorage.api.PureBlockSpec', null, global);
goog.exportSymbol('proto.openstorage.api.PureFileSpec', null, global);
goog.exportSymbol('proto.openstorage.api.RelaxedReclaimPurge', null, global);
goog.exportSymbol('proto.openstorage.api.ReplicaPlacementSpec', null, global);
goog.exportSymbol('proto.openstorage.api.ReplicaSet', null, global);
goog.exportSymbol('proto.openstorage.api.Report', null, global);
goog.exportSymbol('proto.openstorage.api.ResourceType', null, global);
goog.exportSymbol('proto.openstorage.api.RestoreParamBoolType', null, global);
goog.exportSymbol('proto.openstorage.api.RestoreVolSnashotSchedule', null, global);
goog.exportSymbol('proto.openstorage.api.RestoreVolStoragePolicy', null, global);
goog.exportSymbol('proto.openstorage.api.RestoreVolumeSpec', null, global);
goog.exportSymbol('proto.openstorage.api.RuntimeStateMap', null, global);
goog.exportSymbol('proto.openstorage.api.S3ProxySpec', null, global);
goog.exportSymbol('proto.openstorage.api.ScanPolicy', null, global);
goog.exportSymbol('proto.openstorage.api.ScanPolicy.ScanAction', null, global);
goog.exportSymbol('proto.openstorage.api.ScanPolicy.ScanTrigger', null, global);
goog.exportSymbol('proto.openstorage.api.SchedulerTopology', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsAlertTypeQuery', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsCountSpan', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsOption', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsOption.OptCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsQuery', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsQuery.QueryCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsResourceIdQuery', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsResourceTypeQuery', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAlertsTimeSpan', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimPopRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimPopResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimPushRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimPushResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimUsageRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAutoFSTrimUsageResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAwsCredentialRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAwsCredentialResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAzureCredentialRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkAzureCredentialResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupCatalogRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupCatalogResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupClusterType', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupDeleteAllRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupDeleteAllResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupGroupCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupGroupCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupHistoryItem', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupHistoryRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupHistoryResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupInfo', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupOpType', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupRequestedState', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupRestoreRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupRestoreResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSchedUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupScheduleInfo', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSizeRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupSizeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStateChangeRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStateChangeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStatus', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudBackupStatusType', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateCancelRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateCancelResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartRequest.OptCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStartResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCloudMigrateStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainActivateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainActivateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainDeactivateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainDeactivateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainsEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterDomainsEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterInspectCurrentRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterInspectCurrentResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairGetTokenRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairGetTokenResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairResetTokenRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkClusterPairResetTokenResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialCreateRequest.CredentialTypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialDeleteReferencesRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialDeleteReferencesResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialInspectResponse.CredentialTypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialValidateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkCredentialValidateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkDiagsCollectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkDiagsCollectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkEnumerateJobsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkEnumerateJobsResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkEnumerateRebalanceJobsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkEnumerateRebalanceJobsResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStartRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStartResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStopRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemCheckStopResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStartRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStartResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStopRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkFilesystemTrimStopResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGetJobStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGetJobStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGetRebalanceJobStatusRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGetRebalanceJobStatusResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGoogleCredentialRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkGoogleCredentialResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkIdentityCapabilitiesRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkIdentityCapabilitiesResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkIdentityVersionRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkIdentityVersionResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkJobResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNfsCredentialRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNfsCredentialResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeCordonAttachmentsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeCordonAttachmentsResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeDrainAttachmentsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeInspectCurrentRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeInspectCurrentResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeUncordonAttachmentsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeUncordonAttachmentsResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkObjectstoreUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRole', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRoleUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkRule', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicy', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyInterval', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyInterval.PeriodTypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyIntervalDaily', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyIntervalMonthly', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyIntervalWeekly', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkSchedulePolicyUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkServiceCapability', null, global);
goog.exportSymbol('proto.openstorage.api.SdkServiceCapability.OpenStorageService', null, global);
goog.exportSymbol('proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type', null, global);
goog.exportSymbol('proto.openstorage.api.SdkServiceCapability.TypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePolicy', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePool', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePool.OperationStatus', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePool.OperationType', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePool.ResizeOperationType', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePoolResizeRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePoolResizeRequest.ResizeFactorCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStoragePoolResizeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStorageRebalanceRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStorageRebalanceRequest.Mode', null, global);
goog.exportSymbol('proto.openstorage.api.SdkStorageRebalanceResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkTimeWeekday', null, global);
goog.exportSymbol('proto.openstorage.api.SdkUpdateJobRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkUpdateJobResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkUpdateRebalanceJobRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkUpdateRebalanceJobResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVersion', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVersion.Version', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeAttachOptions', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeAttachRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeAttachResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeBytesUsedRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeBytesUsedResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCapacityUsageRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCapacityUsageResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCatalogRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCatalogResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCloneRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCloneResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeDeleteRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeDeleteResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeDetachOptions', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeDetachRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeDetachResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeInspectRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeInspectResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeInspectWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeInspectWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeMountRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeMountResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotRestoreRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotRestoreResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeStatsRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeStatsResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeUnmountOptions', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeUnmountRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeUnmountResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeUpdateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeUpdateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeWatchRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkVolumeWatchResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkWatchRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SdkWatchRequest.EventTypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SdkWatchResponse', null, global);
goog.exportSymbol('proto.openstorage.api.SdkWatchResponse.EventTypeCase', null, global);
goog.exportSymbol('proto.openstorage.api.SeverityType', null, global);
goog.exportSymbol('proto.openstorage.api.Sharedv4FailoverStrategy', null, global);
goog.exportSymbol('proto.openstorage.api.Sharedv4FailoverStrategy.Value', null, global);
goog.exportSymbol('proto.openstorage.api.Sharedv4ServiceSpec', null, global);
goog.exportSymbol('proto.openstorage.api.Sharedv4ServiceSpec.ServiceType', null, global);
goog.exportSymbol('proto.openstorage.api.Sharedv4Spec', null, global);
goog.exportSymbol('proto.openstorage.api.SnapCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.SnapCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.Source', null, global);
goog.exportSymbol('proto.openstorage.api.Stats', null, global);
goog.exportSymbol('proto.openstorage.api.Status', null, global);
goog.exportSymbol('proto.openstorage.api.StorageCluster', null, global);
goog.exportSymbol('proto.openstorage.api.StorageMedium', null, global);
goog.exportSymbol('proto.openstorage.api.StorageNode', null, global);
goog.exportSymbol('proto.openstorage.api.StorageNode.SecurityStatus', null, global);
goog.exportSymbol('proto.openstorage.api.StoragePool', null, global);
goog.exportSymbol('proto.openstorage.api.StoragePoolOperation', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceAudit', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceJob', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceJobState', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceSummary', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceTriggerThreshold', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceTriggerThreshold.Type', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceWorkSummary', null, global);
goog.exportSymbol('proto.openstorage.api.StorageRebalanceWorkSummary.Type', null, global);
goog.exportSymbol('proto.openstorage.api.StorageResource', null, global);
goog.exportSymbol('proto.openstorage.api.StorageVersion', null, global);
goog.exportSymbol('proto.openstorage.api.TopologyRequirement', null, global);
goog.exportSymbol('proto.openstorage.api.Volume', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeActionParam', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeBytesUsed', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeBytesUsedByNode', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeConsumer', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeCreateRequest', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeCreateResponse', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeInfo', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeInspectOptions', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeLocator', null, global);
goog.exportSymbol('proto.openstorage.api.VolumePlacementSpec', null, global);
goog.exportSymbol('proto.openstorage.api.VolumePlacementStrategy', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeResponse', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeServiceInstanceResponse', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeServiceRequest', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeServiceResponse', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSetRequest', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSetResponse', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpec', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.AggregationLevelOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.AutoFstrimOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.CosOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.DedupeOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.EncryptedOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ExportSpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.FastpathOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.GroupOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.HaLevelOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.IoProfileOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.IoThrottleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.JournalOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.MountOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.NodiscardOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.PassphraseOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.PolicyOp', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ProxySpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ProxyWriteOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.QueueDepthOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ReadaheadOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ScaleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.ScanPolicyOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.SharedOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.Sharedv4MountOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.Sharedv4OptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.Sharedv4ServiceSpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.Sharedv4SpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.SizeOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.SnapshotIntervalOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.SnapshotScheduleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.StickyOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecPolicy.WinshareOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.AutoFstrimOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.CosOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.DedupeOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ExportSpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.FastpathOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.GroupOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.HaLevelOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.IoProfileOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.IoThrottleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.JournalOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.MountOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.NearSyncReplicationStrategyOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.NodiscardOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.PassphraseOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ProxySpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ProxyWriteOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.QueueDepthOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ReadaheadOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ScaleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.ScanPolicyOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.SharedOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.Sharedv4MountOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.Sharedv4OptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.Sharedv4ServiceSpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.Sharedv4SpecOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.SizeOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.SnapshotIntervalOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.SnapshotScheduleOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.StickyOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.WinshareOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeSpecUpdate.XattrOptCase', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeState', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeStateAction', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeStatus', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeUsage', null, global);
goog.exportSymbol('proto.openstorage.api.VolumeUsageByNode', null, global);
goog.exportSymbol('proto.openstorage.api.Xattr', null, global);
goog.exportSymbol('proto.openstorage.api.Xattr.Value', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageResource.displayName = 'proto.openstorage.api.StorageResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StoragePool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StoragePool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StoragePool.displayName = 'proto.openstorage.api.StoragePool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SchedulerTopology = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SchedulerTopology, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SchedulerTopology.displayName = 'proto.openstorage.api.SchedulerTopology';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StoragePoolOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StoragePoolOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StoragePoolOperation.displayName = 'proto.openstorage.api.StoragePoolOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.TopologyRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.TopologyRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.TopologyRequirement.displayName = 'proto.openstorage.api.TopologyRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeLocator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumeLocator.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumeLocator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeLocator.displayName = 'proto.openstorage.api.VolumeLocator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeInspectOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeInspectOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeInspectOptions.displayName = 'proto.openstorage.api.VolumeInspectOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Source = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Source, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Source.displayName = 'proto.openstorage.api.Source';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Group.displayName = 'proto.openstorage.api.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.IoStrategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.IoStrategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.IoStrategy.displayName = 'proto.openstorage.api.IoStrategy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Xattr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Xattr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Xattr.displayName = 'proto.openstorage.api.Xattr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ExportSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ExportSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ExportSpec.displayName = 'proto.openstorage.api.ExportSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.NFSProxySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.NFSProxySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.NFSProxySpec.displayName = 'proto.openstorage.api.NFSProxySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.S3ProxySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.S3ProxySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.S3ProxySpec.displayName = 'proto.openstorage.api.S3ProxySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.PXDProxySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.PXDProxySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.PXDProxySpec.displayName = 'proto.openstorage.api.PXDProxySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.PureBlockSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.PureBlockSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.PureBlockSpec.displayName = 'proto.openstorage.api.PureBlockSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.PureFileSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.PureFileSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.PureFileSpec.displayName = 'proto.openstorage.api.PureFileSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ProxySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ProxySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ProxySpec.displayName = 'proto.openstorage.api.ProxySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Sharedv4ServiceSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Sharedv4ServiceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Sharedv4ServiceSpec.displayName = 'proto.openstorage.api.Sharedv4ServiceSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Sharedv4FailoverStrategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Sharedv4FailoverStrategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Sharedv4FailoverStrategy.displayName = 'proto.openstorage.api.Sharedv4FailoverStrategy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Sharedv4Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Sharedv4Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Sharedv4Spec.displayName = 'proto.openstorage.api.Sharedv4Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.MountOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.MountOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.MountOptions.displayName = 'proto.openstorage.api.MountOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.FastpathReplState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.FastpathReplState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.FastpathReplState.displayName = 'proto.openstorage.api.FastpathReplState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.FastpathConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.FastpathConfig.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.FastpathConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.FastpathConfig.displayName = 'proto.openstorage.api.FastpathConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ScanPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ScanPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ScanPolicy.displayName = 'proto.openstorage.api.ScanPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.IoThrottle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.IoThrottle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.IoThrottle.displayName = 'proto.openstorage.api.IoThrottle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeSpec.displayName = 'proto.openstorage.api.VolumeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeSpecUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_);
};
goog.inherits(proto.openstorage.api.VolumeSpecUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeSpecUpdate.displayName = 'proto.openstorage.api.VolumeSpecUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeSpecPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_);
};
goog.inherits(proto.openstorage.api.VolumeSpecPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeSpecPolicy.displayName = 'proto.openstorage.api.VolumeSpecPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ReplicaSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ReplicaSet.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ReplicaSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ReplicaSet.displayName = 'proto.openstorage.api.ReplicaSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.RuntimeStateMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.RuntimeStateMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.RuntimeStateMap.displayName = 'proto.openstorage.api.RuntimeStateMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Ownership = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Ownership, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Ownership.displayName = 'proto.openstorage.api.Ownership';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Ownership.PublicAccessControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Ownership.PublicAccessControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Ownership.PublicAccessControl.displayName = 'proto.openstorage.api.Ownership.PublicAccessControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Ownership.AccessControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Ownership.AccessControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Ownership.AccessControl.displayName = 'proto.openstorage.api.Ownership.AccessControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Volume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.Volume.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.Volume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Volume.displayName = 'proto.openstorage.api.Volume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Stats.displayName = 'proto.openstorage.api.Stats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CapacityUsageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CapacityUsageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CapacityUsageInfo.displayName = 'proto.openstorage.api.CapacityUsageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeUsage.displayName = 'proto.openstorage.api.VolumeUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeUsageByNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumeUsageByNode.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumeUsageByNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeUsageByNode.displayName = 'proto.openstorage.api.VolumeUsageByNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeBytesUsed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeBytesUsed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeBytesUsed.displayName = 'proto.openstorage.api.VolumeBytesUsed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeBytesUsedByNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumeBytesUsedByNode.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumeBytesUsedByNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeBytesUsedByNode.displayName = 'proto.openstorage.api.VolumeBytesUsedByNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.FstrimVolumeUsageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.FstrimVolumeUsageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.FstrimVolumeUsageInfo.displayName = 'proto.openstorage.api.FstrimVolumeUsageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.RelaxedReclaimPurge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.RelaxedReclaimPurge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.RelaxedReclaimPurge.displayName = 'proto.openstorage.api.RelaxedReclaimPurge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStoragePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkStoragePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStoragePolicy.displayName = 'proto.openstorage.api.SdkStoragePolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Alert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Alert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Alert.displayName = 'proto.openstorage.api.Alert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsTimeSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsTimeSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsTimeSpan.displayName = 'proto.openstorage.api.SdkAlertsTimeSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsCountSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsCountSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsCountSpan.displayName = 'proto.openstorage.api.SdkAlertsCountSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkAlertsOption.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkAlertsOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsOption.displayName = 'proto.openstorage.api.SdkAlertsOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsResourceTypeQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsResourceTypeQuery.displayName = 'proto.openstorage.api.SdkAlertsResourceTypeQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsAlertTypeQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsAlertTypeQuery.displayName = 'proto.openstorage.api.SdkAlertsAlertTypeQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsResourceIdQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsResourceIdQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsResourceIdQuery.displayName = 'proto.openstorage.api.SdkAlertsResourceIdQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkAlertsQuery.repeatedFields_, proto.openstorage.api.SdkAlertsQuery.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkAlertsQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsQuery.displayName = 'proto.openstorage.api.SdkAlertsQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.displayName = 'proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.displayName = 'proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkAlertsDeleteRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsDeleteRequest.displayName = 'proto.openstorage.api.SdkAlertsDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAlertsDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAlertsDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAlertsDeleteResponse.displayName = 'proto.openstorage.api.SdkAlertsDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Alerts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.Alerts.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.Alerts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Alerts.displayName = 'proto.openstorage.api.Alerts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ObjectstoreInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ObjectstoreInfo.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ObjectstoreInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ObjectstoreInfo.displayName = 'proto.openstorage.api.ObjectstoreInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeCreateRequest.displayName = 'proto.openstorage.api.VolumeCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeResponse.displayName = 'proto.openstorage.api.VolumeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeCreateResponse.displayName = 'proto.openstorage.api.VolumeCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeStateAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeStateAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeStateAction.displayName = 'proto.openstorage.api.VolumeStateAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeSetRequest.displayName = 'proto.openstorage.api.VolumeSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeSetResponse.displayName = 'proto.openstorage.api.VolumeSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SnapCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SnapCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SnapCreateRequest.displayName = 'proto.openstorage.api.SnapCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SnapCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SnapCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SnapCreateResponse.displayName = 'proto.openstorage.api.SnapCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeInfo.displayName = 'proto.openstorage.api.VolumeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeConsumer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeConsumer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeConsumer.displayName = 'proto.openstorage.api.VolumeConsumer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeServiceRequest.displayName = 'proto.openstorage.api.VolumeServiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeServiceInstanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.VolumeServiceInstanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeServiceInstanceResponse.displayName = 'proto.openstorage.api.VolumeServiceInstanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumeServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumeServiceResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumeServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumeServiceResponse.displayName = 'proto.openstorage.api.VolumeServiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.GraphDriverChanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.GraphDriverChanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.GraphDriverChanges.displayName = 'proto.openstorage.api.GraphDriverChanges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterResponse.displayName = 'proto.openstorage.api.ClusterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ActiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ActiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ActiveRequest.displayName = 'proto.openstorage.api.ActiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ActiveRequests = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ActiveRequests.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ActiveRequests, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ActiveRequests.displayName = 'proto.openstorage.api.ActiveRequests';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.GroupSnapCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.GroupSnapCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.GroupSnapCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.GroupSnapCreateRequest.displayName = 'proto.openstorage.api.GroupSnapCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.GroupSnapCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.GroupSnapCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.GroupSnapCreateResponse.displayName = 'proto.openstorage.api.GroupSnapCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.StorageNode.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.StorageNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageNode.displayName = 'proto.openstorage.api.StorageNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageCluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageCluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageCluster.displayName = 'proto.openstorage.api.StorageCluster';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketCreateRequest.displayName = 'proto.openstorage.api.BucketCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketCreateResponse.displayName = 'proto.openstorage.api.BucketCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketDeleteRequest.displayName = 'proto.openstorage.api.BucketDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketDeleteResponse.displayName = 'proto.openstorage.api.BucketDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketGrantAccessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketGrantAccessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketGrantAccessRequest.displayName = 'proto.openstorage.api.BucketGrantAccessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketGrantAccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketGrantAccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketGrantAccessResponse.displayName = 'proto.openstorage.api.BucketGrantAccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketRevokeAccessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketRevokeAccessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketRevokeAccessRequest.displayName = 'proto.openstorage.api.BucketRevokeAccessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketRevokeAccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketRevokeAccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketRevokeAccessResponse.displayName = 'proto.openstorage.api.BucketRevokeAccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.BucketAccessCredentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.BucketAccessCredentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.BucketAccessCredentials.displayName = 'proto.openstorage.api.BucketAccessCredentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.displayName = 'proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyCreateRequest.displayName = 'proto.openstorage.api.SdkSchedulePolicyCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyCreateResponse.displayName = 'proto.openstorage.api.SdkSchedulePolicyCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyUpdateRequest.displayName = 'proto.openstorage.api.SdkSchedulePolicyUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyUpdateResponse.displayName = 'proto.openstorage.api.SdkSchedulePolicyUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.displayName = 'proto.openstorage.api.SdkSchedulePolicyEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.displayName = 'proto.openstorage.api.SdkSchedulePolicyEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyInspectRequest.displayName = 'proto.openstorage.api.SdkSchedulePolicyInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyInspectResponse.displayName = 'proto.openstorage.api.SdkSchedulePolicyInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyDeleteRequest.displayName = 'proto.openstorage.api.SdkSchedulePolicyDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyDeleteResponse.displayName = 'proto.openstorage.api.SdkSchedulePolicyDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyIntervalDaily, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyIntervalDaily.displayName = 'proto.openstorage.api.SdkSchedulePolicyIntervalDaily';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyIntervalWeekly, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.displayName = 'proto.openstorage.api.SdkSchedulePolicyIntervalWeekly';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyIntervalMonthly, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.displayName = 'proto.openstorage.api.SdkSchedulePolicyIntervalMonthly';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.displayName = 'proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicyInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicyInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicyInterval.displayName = 'proto.openstorage.api.SdkSchedulePolicyInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkSchedulePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkSchedulePolicy.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkSchedulePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkSchedulePolicy.displayName = 'proto.openstorage.api.SdkSchedulePolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkCredentialCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialCreateRequest.displayName = 'proto.openstorage.api.SdkCredentialCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialCreateResponse.displayName = 'proto.openstorage.api.SdkCredentialCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialUpdateRequest.displayName = 'proto.openstorage.api.SdkCredentialUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialUpdateResponse.displayName = 'proto.openstorage.api.SdkCredentialUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAwsCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAwsCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAwsCredentialRequest.displayName = 'proto.openstorage.api.SdkAwsCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAzureCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAzureCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAzureCredentialRequest.displayName = 'proto.openstorage.api.SdkAzureCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGoogleCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkGoogleCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGoogleCredentialRequest.displayName = 'proto.openstorage.api.SdkGoogleCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNfsCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNfsCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNfsCredentialRequest.displayName = 'proto.openstorage.api.SdkNfsCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAwsCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAwsCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAwsCredentialResponse.displayName = 'proto.openstorage.api.SdkAwsCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAzureCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAzureCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAzureCredentialResponse.displayName = 'proto.openstorage.api.SdkAzureCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGoogleCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkGoogleCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGoogleCredentialResponse.displayName = 'proto.openstorage.api.SdkGoogleCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNfsCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNfsCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNfsCredentialResponse.displayName = 'proto.openstorage.api.SdkNfsCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialEnumerateRequest.displayName = 'proto.openstorage.api.SdkCredentialEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCredentialEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialEnumerateResponse.displayName = 'proto.openstorage.api.SdkCredentialEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialInspectRequest.displayName = 'proto.openstorage.api.SdkCredentialInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkCredentialInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialInspectResponse.displayName = 'proto.openstorage.api.SdkCredentialInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialDeleteRequest.displayName = 'proto.openstorage.api.SdkCredentialDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialDeleteResponse.displayName = 'proto.openstorage.api.SdkCredentialDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialValidateRequest.displayName = 'proto.openstorage.api.SdkCredentialValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialValidateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialValidateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialValidateResponse.displayName = 'proto.openstorage.api.SdkCredentialValidateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialDeleteReferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialDeleteReferencesRequest.displayName = 'proto.openstorage.api.SdkCredentialDeleteReferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCredentialDeleteReferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCredentialDeleteReferencesResponse.displayName = 'proto.openstorage.api.SdkCredentialDeleteReferencesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeAttachOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeAttachOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeAttachOptions.displayName = 'proto.openstorage.api.SdkVolumeAttachOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeMountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeMountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeMountRequest.displayName = 'proto.openstorage.api.SdkVolumeMountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeMountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeMountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeMountResponse.displayName = 'proto.openstorage.api.SdkVolumeMountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeUnmountOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeUnmountOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeUnmountOptions.displayName = 'proto.openstorage.api.SdkVolumeUnmountOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeUnmountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeUnmountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeUnmountRequest.displayName = 'proto.openstorage.api.SdkVolumeUnmountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeUnmountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeUnmountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeUnmountResponse.displayName = 'proto.openstorage.api.SdkVolumeUnmountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeAttachRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeAttachRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeAttachRequest.displayName = 'proto.openstorage.api.SdkVolumeAttachRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeAttachResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeAttachResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeAttachResponse.displayName = 'proto.openstorage.api.SdkVolumeAttachResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeDetachOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeDetachOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeDetachOptions.displayName = 'proto.openstorage.api.SdkVolumeDetachOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeDetachRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeDetachRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeDetachRequest.displayName = 'proto.openstorage.api.SdkVolumeDetachRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeDetachResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeDetachResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeDetachResponse.displayName = 'proto.openstorage.api.SdkVolumeDetachResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCreateRequest.displayName = 'proto.openstorage.api.SdkVolumeCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCreateResponse.displayName = 'proto.openstorage.api.SdkVolumeCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCloneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCloneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCloneRequest.displayName = 'proto.openstorage.api.SdkVolumeCloneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCloneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCloneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCloneResponse.displayName = 'proto.openstorage.api.SdkVolumeCloneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeDeleteRequest.displayName = 'proto.openstorage.api.SdkVolumeDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeDeleteResponse.displayName = 'proto.openstorage.api.SdkVolumeDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeInspectRequest.displayName = 'proto.openstorage.api.SdkVolumeInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeInspectResponse.displayName = 'proto.openstorage.api.SdkVolumeInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeInspectWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.displayName = 'proto.openstorage.api.SdkVolumeInspectWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeInspectWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.displayName = 'proto.openstorage.api.SdkVolumeInspectWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeUpdateRequest.displayName = 'proto.openstorage.api.SdkVolumeUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeUpdateResponse.displayName = 'proto.openstorage.api.SdkVolumeUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeStatsRequest.displayName = 'proto.openstorage.api.SdkVolumeStatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeStatsResponse.displayName = 'proto.openstorage.api.SdkVolumeStatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCapacityUsageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCapacityUsageRequest.displayName = 'proto.openstorage.api.SdkVolumeCapacityUsageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCapacityUsageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCapacityUsageResponse.displayName = 'proto.openstorage.api.SdkVolumeCapacityUsageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeEnumerateRequest.displayName = 'proto.openstorage.api.SdkVolumeEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeEnumerateResponse.displayName = 'proto.openstorage.api.SdkVolumeEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.displayName = 'proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.displayName = 'proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotCreateRequest.displayName = 'proto.openstorage.api.SdkVolumeSnapshotCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotCreateResponse.displayName = 'proto.openstorage.api.SdkVolumeSnapshotCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotRestoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.displayName = 'proto.openstorage.api.SdkVolumeSnapshotRestoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotRestoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.displayName = 'proto.openstorage.api.SdkVolumeSnapshotRestoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.displayName = 'proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.displayName = 'proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.displayName = 'proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.displayName = 'proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.displayName = 'proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.displayName = 'proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkWatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkWatchRequest.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkWatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkWatchRequest.displayName = 'proto.openstorage.api.SdkWatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkWatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkWatchResponse.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkWatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkWatchResponse.displayName = 'proto.openstorage.api.SdkWatchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeWatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeWatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeWatchRequest.displayName = 'proto.openstorage.api.SdkVolumeWatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeWatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeWatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeWatchResponse.displayName = 'proto.openstorage.api.SdkVolumeWatchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.displayName = 'proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.displayName = 'proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.displayName = 'proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.displayName = 'proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainsEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainsEnumerateRequest.displayName = 'proto.openstorage.api.SdkClusterDomainsEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkClusterDomainsEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainsEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainsEnumerateResponse.displayName = 'proto.openstorage.api.SdkClusterDomainsEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainInspectRequest.displayName = 'proto.openstorage.api.SdkClusterDomainInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainInspectResponse.displayName = 'proto.openstorage.api.SdkClusterDomainInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainActivateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainActivateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainActivateRequest.displayName = 'proto.openstorage.api.SdkClusterDomainActivateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainActivateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainActivateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainActivateResponse.displayName = 'proto.openstorage.api.SdkClusterDomainActivateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainDeactivateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainDeactivateRequest.displayName = 'proto.openstorage.api.SdkClusterDomainDeactivateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterDomainDeactivateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterDomainDeactivateResponse.displayName = 'proto.openstorage.api.SdkClusterDomainDeactivateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterInspectCurrentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterInspectCurrentRequest.displayName = 'proto.openstorage.api.SdkClusterInspectCurrentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterInspectCurrentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterInspectCurrentResponse.displayName = 'proto.openstorage.api.SdkClusterInspectCurrentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeInspectRequest.displayName = 'proto.openstorage.api.SdkNodeInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Job = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.Job.oneofGroups_);
};
goog.inherits(proto.openstorage.api.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Job.displayName = 'proto.openstorage.api.Job';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkJobResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkJobResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkJobResponse.displayName = 'proto.openstorage.api.SdkJobResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.NodeDrainAttachmentOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.NodeDrainAttachmentOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.NodeDrainAttachmentOptions.displayName = 'proto.openstorage.api.NodeDrainAttachmentOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkNodeDrainAttachmentsRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkNodeDrainAttachmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeDrainAttachmentsRequest.displayName = 'proto.openstorage.api.SdkNodeDrainAttachmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.NodeDrainAttachmentsJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.NodeDrainAttachmentsJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.NodeDrainAttachmentsJob.displayName = 'proto.openstorage.api.NodeDrainAttachmentsJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudDriveTransferJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudDriveTransferJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudDriveTransferJob.displayName = 'proto.openstorage.api.CloudDriveTransferJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CollectDiagsJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.CollectDiagsJob.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.CollectDiagsJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CollectDiagsJob.displayName = 'proto.openstorage.api.CollectDiagsJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.DiagsCollectionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.DiagsCollectionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.DiagsCollectionStatus.displayName = 'proto.openstorage.api.DiagsCollectionStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkDiagsCollectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkDiagsCollectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkDiagsCollectRequest.displayName = 'proto.openstorage.api.SdkDiagsCollectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkDiagsCollectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkDiagsCollectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkDiagsCollectResponse.displayName = 'proto.openstorage.api.SdkDiagsCollectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.DiagsNodeSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.DiagsNodeSelector.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.DiagsNodeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.DiagsNodeSelector.displayName = 'proto.openstorage.api.DiagsNodeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.DiagsVolumeSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.DiagsVolumeSelector.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.DiagsVolumeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.DiagsVolumeSelector.displayName = 'proto.openstorage.api.DiagsVolumeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkEnumerateJobsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkEnumerateJobsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkEnumerateJobsRequest.displayName = 'proto.openstorage.api.SdkEnumerateJobsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkEnumerateJobsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkEnumerateJobsResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkEnumerateJobsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkEnumerateJobsResponse.displayName = 'proto.openstorage.api.SdkEnumerateJobsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkUpdateJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkUpdateJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkUpdateJobRequest.displayName = 'proto.openstorage.api.SdkUpdateJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkUpdateJobResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkUpdateJobResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkUpdateJobResponse.displayName = 'proto.openstorage.api.SdkUpdateJobResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGetJobStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkGetJobStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGetJobStatusRequest.displayName = 'proto.openstorage.api.SdkGetJobStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.JobAudit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.JobAudit.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.JobAudit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.JobAudit.displayName = 'proto.openstorage.api.JobAudit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.JobWorkSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.JobWorkSummary.oneofGroups_);
};
goog.inherits(proto.openstorage.api.JobWorkSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.JobWorkSummary.displayName = 'proto.openstorage.api.JobWorkSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.JobSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.JobSummary.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.JobSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.JobSummary.displayName = 'proto.openstorage.api.JobSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGetJobStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkGetJobStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGetJobStatusResponse.displayName = 'proto.openstorage.api.SdkGetJobStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.DrainAttachmentsSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.DrainAttachmentsSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.DrainAttachmentsSummary.displayName = 'proto.openstorage.api.DrainAttachmentsSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeCordonAttachmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeCordonAttachmentsRequest.displayName = 'proto.openstorage.api.SdkNodeCordonAttachmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeCordonAttachmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeCordonAttachmentsResponse.displayName = 'proto.openstorage.api.SdkNodeCordonAttachmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeUncordonAttachmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.displayName = 'proto.openstorage.api.SdkNodeUncordonAttachmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeUncordonAttachmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.displayName = 'proto.openstorage.api.SdkNodeUncordonAttachmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStoragePoolResizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkStoragePoolResizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStoragePoolResizeRequest.displayName = 'proto.openstorage.api.SdkStoragePoolResizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageRebalanceTriggerThreshold, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageRebalanceTriggerThreshold.displayName = 'proto.openstorage.api.StorageRebalanceTriggerThreshold';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStorageRebalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkStorageRebalanceRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkStorageRebalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStorageRebalanceRequest.displayName = 'proto.openstorage.api.SdkStorageRebalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStorageRebalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkStorageRebalanceResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkStorageRebalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStorageRebalanceResponse.displayName = 'proto.openstorage.api.SdkStorageRebalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageRebalanceJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageRebalanceJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageRebalanceJob.displayName = 'proto.openstorage.api.StorageRebalanceJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageRebalanceSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.StorageRebalanceSummary.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.StorageRebalanceSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageRebalanceSummary.displayName = 'proto.openstorage.api.StorageRebalanceSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageRebalanceWorkSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageRebalanceWorkSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageRebalanceWorkSummary.displayName = 'proto.openstorage.api.StorageRebalanceWorkSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageRebalanceAudit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.StorageRebalanceAudit.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.StorageRebalanceAudit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageRebalanceAudit.displayName = 'proto.openstorage.api.StorageRebalanceAudit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkUpdateRebalanceJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkUpdateRebalanceJobRequest.displayName = 'proto.openstorage.api.SdkUpdateRebalanceJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkUpdateRebalanceJobResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkUpdateRebalanceJobResponse.displayName = 'proto.openstorage.api.SdkUpdateRebalanceJobResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkGetRebalanceJobStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGetRebalanceJobStatusRequest.displayName = 'proto.openstorage.api.SdkGetRebalanceJobStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkGetRebalanceJobStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkGetRebalanceJobStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkGetRebalanceJobStatusResponse.displayName = 'proto.openstorage.api.SdkGetRebalanceJobStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkEnumerateRebalanceJobsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.displayName = 'proto.openstorage.api.SdkEnumerateRebalanceJobsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkEnumerateRebalanceJobsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.displayName = 'proto.openstorage.api.SdkEnumerateRebalanceJobsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStoragePool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkStoragePool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStoragePool.displayName = 'proto.openstorage.api.SdkStoragePool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkStoragePoolResizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkStoragePoolResizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkStoragePoolResizeResponse.displayName = 'proto.openstorage.api.SdkStoragePoolResizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeInspectResponse.displayName = 'proto.openstorage.api.SdkNodeInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeInspectCurrentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeInspectCurrentRequest.displayName = 'proto.openstorage.api.SdkNodeInspectCurrentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeInspectCurrentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeInspectCurrentResponse.displayName = 'proto.openstorage.api.SdkNodeInspectCurrentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeEnumerateRequest.displayName = 'proto.openstorage.api.SdkNodeEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkNodeEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkNodeEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeEnumerateResponse.displayName = 'proto.openstorage.api.SdkNodeEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.displayName = 'proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.displayName = 'proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreInspectRequest.displayName = 'proto.openstorage.api.SdkObjectstoreInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreInspectResponse.displayName = 'proto.openstorage.api.SdkObjectstoreInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreCreateRequest.displayName = 'proto.openstorage.api.SdkObjectstoreCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreCreateResponse.displayName = 'proto.openstorage.api.SdkObjectstoreCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreDeleteRequest.displayName = 'proto.openstorage.api.SdkObjectstoreDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreDeleteResponse.displayName = 'proto.openstorage.api.SdkObjectstoreDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreUpdateRequest.displayName = 'proto.openstorage.api.SdkObjectstoreUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkObjectstoreUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkObjectstoreUpdateResponse.displayName = 'proto.openstorage.api.SdkObjectstoreUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupCreateRequest.displayName = 'proto.openstorage.api.SdkCloudBackupCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupCreateResponse.displayName = 'proto.openstorage.api.SdkCloudBackupCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupGroupCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupGroupCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupGroupCreateRequest.displayName = 'proto.openstorage.api.SdkCloudBackupGroupCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupGroupCreateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupGroupCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupGroupCreateResponse.displayName = 'proto.openstorage.api.SdkCloudBackupGroupCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupRestoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupRestoreRequest.displayName = 'proto.openstorage.api.SdkCloudBackupRestoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupRestoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupRestoreResponse.displayName = 'proto.openstorage.api.SdkCloudBackupRestoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupDeleteRequest.displayName = 'proto.openstorage.api.SdkCloudBackupDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupDeleteResponse.displayName = 'proto.openstorage.api.SdkCloudBackupDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupDeleteAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupDeleteAllRequest.displayName = 'proto.openstorage.api.SdkCloudBackupDeleteAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupDeleteAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupDeleteAllResponse.displayName = 'proto.openstorage.api.SdkCloudBackupDeleteAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.displayName = 'proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupInfo.displayName = 'proto.openstorage.api.SdkCloudBackupInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.displayName = 'proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupStatus.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupStatus.displayName = 'proto.openstorage.api.SdkCloudBackupStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupStatusRequest.displayName = 'proto.openstorage.api.SdkCloudBackupStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupStatusResponse.displayName = 'proto.openstorage.api.SdkCloudBackupStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupCatalogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupCatalogRequest.displayName = 'proto.openstorage.api.SdkCloudBackupCatalogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupCatalogResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupCatalogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupCatalogResponse.displayName = 'proto.openstorage.api.SdkCloudBackupCatalogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupHistoryItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupHistoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupHistoryItem.displayName = 'proto.openstorage.api.SdkCloudBackupHistoryItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupHistoryRequest.displayName = 'proto.openstorage.api.SdkCloudBackupHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupHistoryResponse.displayName = 'proto.openstorage.api.SdkCloudBackupHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupStateChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupStateChangeRequest.displayName = 'proto.openstorage.api.SdkCloudBackupStateChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupStateChangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupStateChangeResponse.displayName = 'proto.openstorage.api.SdkCloudBackupStateChangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkCloudBackupScheduleInfo.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupScheduleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupScheduleInfo.displayName = 'proto.openstorage.api.SdkCloudBackupScheduleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedCreateRequest.displayName = 'proto.openstorage.api.SdkCloudBackupSchedCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedCreateResponse.displayName = 'proto.openstorage.api.SdkCloudBackupSchedCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.displayName = 'proto.openstorage.api.SdkCloudBackupSchedUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.displayName = 'proto.openstorage.api.SdkCloudBackupSchedUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.displayName = 'proto.openstorage.api.SdkCloudBackupSchedDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.displayName = 'proto.openstorage.api.SdkCloudBackupSchedDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.displayName = 'proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.displayName = 'proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSizeRequest.displayName = 'proto.openstorage.api.SdkCloudBackupSizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudBackupSizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudBackupSizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudBackupSizeResponse.displayName = 'proto.openstorage.api.SdkCloudBackupSizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkRule.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRule.displayName = 'proto.openstorage.api.SdkRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRole = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkRole.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkRole, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRole.displayName = 'proto.openstorage.api.SdkRole';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleCreateRequest.displayName = 'proto.openstorage.api.SdkRoleCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleCreateResponse.displayName = 'proto.openstorage.api.SdkRoleCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleEnumerateRequest.displayName = 'proto.openstorage.api.SdkRoleEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkRoleEnumerateResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkRoleEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleEnumerateResponse.displayName = 'proto.openstorage.api.SdkRoleEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleInspectRequest.displayName = 'proto.openstorage.api.SdkRoleInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleInspectResponse.displayName = 'proto.openstorage.api.SdkRoleInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleDeleteRequest.displayName = 'proto.openstorage.api.SdkRoleDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleDeleteResponse.displayName = 'proto.openstorage.api.SdkRoleDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleUpdateRequest.displayName = 'proto.openstorage.api.SdkRoleUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkRoleUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkRoleUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkRoleUpdateResponse.displayName = 'proto.openstorage.api.SdkRoleUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.FilesystemTrim = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.FilesystemTrim, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.FilesystemTrim.displayName = 'proto.openstorage.api.FilesystemTrim';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStartRequest.displayName = 'proto.openstorage.api.SdkFilesystemTrimStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStartResponse.displayName = 'proto.openstorage.api.SdkFilesystemTrimStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStatusRequest.displayName = 'proto.openstorage.api.SdkFilesystemTrimStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStatusResponse.displayName = 'proto.openstorage.api.SdkFilesystemTrimStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimStatusRequest.displayName = 'proto.openstorage.api.SdkAutoFSTrimStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimStatusResponse.displayName = 'proto.openstorage.api.SdkAutoFSTrimStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimUsageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimUsageRequest.displayName = 'proto.openstorage.api.SdkAutoFSTrimUsageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimUsageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimUsageResponse.displayName = 'proto.openstorage.api.SdkAutoFSTrimUsageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStopRequest.displayName = 'proto.openstorage.api.SdkFilesystemTrimStopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeBytesUsedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeBytesUsedResponse.displayName = 'proto.openstorage.api.SdkVolumeBytesUsedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkVolumeBytesUsedRequest.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeBytesUsedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeBytesUsedRequest.displayName = 'proto.openstorage.api.SdkVolumeBytesUsedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemTrimStopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemTrimStopResponse.displayName = 'proto.openstorage.api.SdkFilesystemTrimStopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimPushRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimPushRequest.displayName = 'proto.openstorage.api.SdkAutoFSTrimPushRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimPushResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimPushResponse.displayName = 'proto.openstorage.api.SdkAutoFSTrimPushResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimPopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimPopRequest.displayName = 'proto.openstorage.api.SdkAutoFSTrimPopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkAutoFSTrimPopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkAutoFSTrimPopResponse.displayName = 'proto.openstorage.api.SdkAutoFSTrimPopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.FilesystemCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.FilesystemCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.FilesystemCheck.displayName = 'proto.openstorage.api.FilesystemCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStartRequest.displayName = 'proto.openstorage.api.SdkFilesystemCheckStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStartResponse.displayName = 'proto.openstorage.api.SdkFilesystemCheckStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStatusRequest.displayName = 'proto.openstorage.api.SdkFilesystemCheckStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStatusResponse.displayName = 'proto.openstorage.api.SdkFilesystemCheckStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStopRequest.displayName = 'proto.openstorage.api.SdkFilesystemCheckStopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkFilesystemCheckStopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkFilesystemCheckStopResponse.displayName = 'proto.openstorage.api.SdkFilesystemCheckStopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkIdentityCapabilitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkIdentityCapabilitiesRequest.displayName = 'proto.openstorage.api.SdkIdentityCapabilitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.SdkIdentityCapabilitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.SdkIdentityCapabilitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkIdentityCapabilitiesResponse.displayName = 'proto.openstorage.api.SdkIdentityCapabilitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkIdentityVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkIdentityVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkIdentityVersionRequest.displayName = 'proto.openstorage.api.SdkIdentityVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkIdentityVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkIdentityVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkIdentityVersionResponse.displayName = 'proto.openstorage.api.SdkIdentityVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkServiceCapability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkServiceCapability.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkServiceCapability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkServiceCapability.displayName = 'proto.openstorage.api.SdkServiceCapability';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkServiceCapability.OpenStorageService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkServiceCapability.OpenStorageService.displayName = 'proto.openstorage.api.SdkServiceCapability.OpenStorageService';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVersion.displayName = 'proto.openstorage.api.SdkVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.StorageVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.StorageVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.StorageVersion.displayName = 'proto.openstorage.api.StorageVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrate.displayName = 'proto.openstorage.api.CloudMigrate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateStartRequest.displayName = 'proto.openstorage.api.CloudMigrateStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStartRequest.displayName = 'proto.openstorage.api.SdkCloudMigrateStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.displayName = 'proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.displayName = 'proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.displayName = 'proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateStartResponse.displayName = 'proto.openstorage.api.CloudMigrateStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStartResponse.displayName = 'proto.openstorage.api.SdkCloudMigrateStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateCancelRequest.displayName = 'proto.openstorage.api.CloudMigrateCancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateCancelRequest.displayName = 'proto.openstorage.api.SdkCloudMigrateCancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateCancelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateCancelResponse.displayName = 'proto.openstorage.api.SdkCloudMigrateCancelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateInfo.displayName = 'proto.openstorage.api.CloudMigrateInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateInfoList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.CloudMigrateInfoList.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateInfoList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateInfoList.displayName = 'proto.openstorage.api.CloudMigrateInfoList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStatusRequest.displayName = 'proto.openstorage.api.SdkCloudMigrateStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateStatusRequest.displayName = 'proto.openstorage.api.CloudMigrateStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CloudMigrateStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CloudMigrateStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CloudMigrateStatusResponse.displayName = 'proto.openstorage.api.CloudMigrateStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkCloudMigrateStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkCloudMigrateStatusResponse.displayName = 'proto.openstorage.api.SdkCloudMigrateStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairMode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairMode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairMode.displayName = 'proto.openstorage.api.ClusterPairMode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairCreateRequest.displayName = 'proto.openstorage.api.ClusterPairCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairCreateResponse.displayName = 'proto.openstorage.api.ClusterPairCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairCreateRequest.displayName = 'proto.openstorage.api.SdkClusterPairCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairCreateResponse.displayName = 'proto.openstorage.api.SdkClusterPairCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairProcessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairProcessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairProcessRequest.displayName = 'proto.openstorage.api.ClusterPairProcessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairProcessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ClusterPairProcessResponse.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ClusterPairProcessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairProcessResponse.displayName = 'proto.openstorage.api.ClusterPairProcessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairDeleteRequest.displayName = 'proto.openstorage.api.SdkClusterPairDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairDeleteResponse.displayName = 'proto.openstorage.api.SdkClusterPairDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairTokenGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairTokenGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairTokenGetResponse.displayName = 'proto.openstorage.api.ClusterPairTokenGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairGetTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairGetTokenRequest.displayName = 'proto.openstorage.api.SdkClusterPairGetTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairGetTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairGetTokenResponse.displayName = 'proto.openstorage.api.SdkClusterPairGetTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairResetTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairResetTokenRequest.displayName = 'proto.openstorage.api.SdkClusterPairResetTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairResetTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairResetTokenResponse.displayName = 'proto.openstorage.api.SdkClusterPairResetTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ClusterPairInfo.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ClusterPairInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairInfo.displayName = 'proto.openstorage.api.ClusterPairInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairInspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairInspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairInspectRequest.displayName = 'proto.openstorage.api.SdkClusterPairInspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairGetResponse.displayName = 'proto.openstorage.api.ClusterPairGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairInspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairInspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairInspectResponse.displayName = 'proto.openstorage.api.SdkClusterPairInspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairEnumerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairEnumerateRequest.displayName = 'proto.openstorage.api.SdkClusterPairEnumerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ClusterPairsEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.ClusterPairsEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ClusterPairsEnumerateResponse.displayName = 'proto.openstorage.api.ClusterPairsEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkClusterPairEnumerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkClusterPairEnumerateResponse.displayName = 'proto.openstorage.api.SdkClusterPairEnumerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Catalog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.Catalog.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.Catalog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Catalog.displayName = 'proto.openstorage.api.Catalog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.Report = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.Report, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.Report.displayName = 'proto.openstorage.api.Report';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.CatalogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.CatalogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.CatalogResponse.displayName = 'proto.openstorage.api.CatalogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.LocateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.LocateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.LocateResponse.displayName = 'proto.openstorage.api.LocateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumePlacementStrategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumePlacementStrategy.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumePlacementStrategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumePlacementStrategy.displayName = 'proto.openstorage.api.VolumePlacementStrategy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.ReplicaPlacementSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.ReplicaPlacementSpec.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.ReplicaPlacementSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.ReplicaPlacementSpec.displayName = 'proto.openstorage.api.ReplicaPlacementSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.VolumePlacementSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.VolumePlacementSpec.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.VolumePlacementSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.VolumePlacementSpec.displayName = 'proto.openstorage.api.VolumePlacementSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.LabelSelectorRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openstorage.api.LabelSelectorRequirement.repeatedFields_, null);
};
goog.inherits(proto.openstorage.api.LabelSelectorRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.LabelSelectorRequirement.displayName = 'proto.openstorage.api.LabelSelectorRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.RestoreVolSnashotSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.RestoreVolSnashotSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.RestoreVolSnashotSchedule.displayName = 'proto.openstorage.api.RestoreVolSnashotSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.RestoreVolStoragePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.RestoreVolStoragePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.RestoreVolStoragePolicy.displayName = 'proto.openstorage.api.RestoreVolStoragePolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.RestoreVolumeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.RestoreVolumeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.RestoreVolumeSpec.displayName = 'proto.openstorage.api.RestoreVolumeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCatalogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCatalogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCatalogRequest.displayName = 'proto.openstorage.api.SdkVolumeCatalogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openstorage.api.SdkVolumeCatalogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openstorage.api.SdkVolumeCatalogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openstorage.api.SdkVolumeCatalogResponse.displayName = 'proto.openstorage.api.SdkVolumeCatalogResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageResource.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    medium: jspb.Message.getFieldWithDefault(msg, 3, 0),
    online: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    iops: jspb.Message.getFieldWithDefault(msg, 5, 0),
    seqWrite: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    seqRead: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    randrw: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    size: jspb.Message.getFieldWithDefault(msg, 9, 0),
    used: jspb.Message.getFieldWithDefault(msg, 10, 0),
    rotationSpeed: jspb.Message.getFieldWithDefault(msg, 11, ""),
    lastScan: (f = msg.getLastScan()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    metadata: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    cache: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    poolMetadataDev: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageResource}
 */
proto.openstorage.api.StorageResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageResource;
  return proto.openstorage.api.StorageResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageResource}
 */
proto.openstorage.api.StorageResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.StorageMedium} */ (reader.readEnum());
      msg.setMedium(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIops(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeqWrite(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeqRead(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRandrw(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsed(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRotationSpeed(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastScan(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMetadata(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCache(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPoolMetadataDev(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMedium();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIops();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSeqWrite();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSeqRead();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getRandrw();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getUsed();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getRotationSpeed();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLastScan();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getCache();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPoolMetadataDev();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.StorageResource.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.openstorage.api.StorageResource.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageMedium medium = 3;
 * @return {!proto.openstorage.api.StorageMedium}
 */
proto.openstorage.api.StorageResource.prototype.getMedium = function() {
  return /** @type {!proto.openstorage.api.StorageMedium} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.StorageMedium} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setMedium = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool online = 4;
 * @return {boolean}
 */
proto.openstorage.api.StorageResource.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint64 iops = 5;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getIops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setIops = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double seq_write = 6;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getSeqWrite = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setSeqWrite = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double seq_read = 7;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getSeqRead = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setSeqRead = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double randRW = 8;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getRandrw = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setRandrw = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint64 size = 9;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 used = 10;
 * @return {number}
 */
proto.openstorage.api.StorageResource.prototype.getUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string rotation_speed = 11;
 * @return {string}
 */
proto.openstorage.api.StorageResource.prototype.getRotationSpeed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setRotationSpeed = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp last_scan = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.StorageResource.prototype.getLastScan = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.StorageResource} returns this
*/
proto.openstorage.api.StorageResource.prototype.setLastScan = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.clearLastScan = function() {
  return this.setLastScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageResource.prototype.hasLastScan = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool metadata = 13;
 * @return {boolean}
 */
proto.openstorage.api.StorageResource.prototype.getMetadata = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool cache = 14;
 * @return {boolean}
 */
proto.openstorage.api.StorageResource.prototype.getCache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setCache = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool pool_metadata_dev = 15;
 * @return {boolean}
 */
proto.openstorage.api.StorageResource.prototype.getPoolMetadataDev = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.StorageResource} returns this
 */
proto.openstorage.api.StorageResource.prototype.setPoolMetadataDev = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StoragePool.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StoragePool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StoragePool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StoragePool.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cos: jspb.Message.getFieldWithDefault(msg, 2, 0),
    medium: jspb.Message.getFieldWithDefault(msg, 3, 0),
    raidlevel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalsize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    used: jspb.Message.getFieldWithDefault(msg, 8, 0),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    uuid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    lastOperation: (f = msg.getLastOperation()) && proto.openstorage.api.StoragePoolOperation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StoragePool}
 */
proto.openstorage.api.StoragePool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StoragePool;
  return proto.openstorage.api.StoragePool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StoragePool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StoragePool}
 */
proto.openstorage.api.StoragePool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.CosType} */ (reader.readEnum());
      msg.setCos(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.StorageMedium} */ (reader.readEnum());
      msg.setMedium(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRaidlevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalsize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsed(value);
      break;
    case 9:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 11:
      var value = new proto.openstorage.api.StoragePoolOperation;
      reader.readMessage(value,proto.openstorage.api.StoragePoolOperation.deserializeBinaryFromReader);
      msg.setLastOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StoragePool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StoragePool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StoragePool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StoragePool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCos();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMedium();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRaidlevel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalsize();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getUsed();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLastOperation();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.openstorage.api.StoragePoolOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.openstorage.api.StoragePool.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CosType Cos = 2;
 * @return {!proto.openstorage.api.CosType}
 */
proto.openstorage.api.StoragePool.prototype.getCos = function() {
  return /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.CosType} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setCos = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional StorageMedium Medium = 3;
 * @return {!proto.openstorage.api.StorageMedium}
 */
proto.openstorage.api.StoragePool.prototype.getMedium = function() {
  return /** @type {!proto.openstorage.api.StorageMedium} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.StorageMedium} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setMedium = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string RaidLevel = 4;
 * @return {string}
 */
proto.openstorage.api.StoragePool.prototype.getRaidlevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setRaidlevel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 TotalSize = 7;
 * @return {number}
 */
proto.openstorage.api.StoragePool.prototype.getTotalsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setTotalsize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 Used = 8;
 * @return {number}
 */
proto.openstorage.api.StoragePool.prototype.getUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * map<string, string> labels = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.StoragePool.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional string uuid = 10;
 * @return {string}
 */
proto.openstorage.api.StoragePool.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional StoragePoolOperation last_operation = 11;
 * @return {?proto.openstorage.api.StoragePoolOperation}
 */
proto.openstorage.api.StoragePool.prototype.getLastOperation = function() {
  return /** @type{?proto.openstorage.api.StoragePoolOperation} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StoragePoolOperation, 11));
};


/**
 * @param {?proto.openstorage.api.StoragePoolOperation|undefined} value
 * @return {!proto.openstorage.api.StoragePool} returns this
*/
proto.openstorage.api.StoragePool.prototype.setLastOperation = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StoragePool} returns this
 */
proto.openstorage.api.StoragePool.prototype.clearLastOperation = function() {
  return this.setLastOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StoragePool.prototype.hasLastOperation = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SchedulerTopology.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SchedulerTopology.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SchedulerTopology} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SchedulerTopology.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SchedulerTopology}
 */
proto.openstorage.api.SchedulerTopology.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SchedulerTopology;
  return proto.openstorage.api.SchedulerTopology.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SchedulerTopology} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SchedulerTopology}
 */
proto.openstorage.api.SchedulerTopology.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SchedulerTopology.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SchedulerTopology.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SchedulerTopology} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SchedulerTopology.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> labels = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SchedulerTopology.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SchedulerTopology} returns this
 */
proto.openstorage.api.SchedulerTopology.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StoragePoolOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StoragePoolOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StoragePoolOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StoragePoolOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : [],
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StoragePoolOperation}
 */
proto.openstorage.api.StoragePoolOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StoragePoolOperation;
  return proto.openstorage.api.StoragePoolOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StoragePoolOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StoragePoolOperation}
 */
proto.openstorage.api.StoragePoolOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.SdkStoragePool.OperationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = /** @type {!proto.openstorage.api.SdkStoragePool.OperationStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StoragePoolOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StoragePoolOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StoragePoolOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StoragePoolOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional SdkStoragePool.OperationType type = 1;
 * @return {!proto.openstorage.api.SdkStoragePool.OperationType}
 */
proto.openstorage.api.StoragePoolOperation.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.SdkStoragePool.OperationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.SdkStoragePool.OperationType} value
 * @return {!proto.openstorage.api.StoragePoolOperation} returns this
 */
proto.openstorage.api.StoragePoolOperation.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.openstorage.api.StoragePoolOperation.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StoragePoolOperation} returns this
 */
proto.openstorage.api.StoragePoolOperation.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> params = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.StoragePoolOperation.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.StoragePoolOperation} returns this
 */
proto.openstorage.api.StoragePoolOperation.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};


/**
 * optional SdkStoragePool.OperationStatus status = 4;
 * @return {!proto.openstorage.api.SdkStoragePool.OperationStatus}
 */
proto.openstorage.api.StoragePoolOperation.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.SdkStoragePool.OperationStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.openstorage.api.SdkStoragePool.OperationStatus} value
 * @return {!proto.openstorage.api.StoragePoolOperation} returns this
 */
proto.openstorage.api.StoragePoolOperation.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.TopologyRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.TopologyRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.TopologyRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.TopologyRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.TopologyRequirement}
 */
proto.openstorage.api.TopologyRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.TopologyRequirement;
  return proto.openstorage.api.TopologyRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.TopologyRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.TopologyRequirement}
 */
proto.openstorage.api.TopologyRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.TopologyRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.TopologyRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.TopologyRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.TopologyRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> labels = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.TopologyRequirement.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.TopologyRequirement} returns this
 */
proto.openstorage.api.TopologyRequirement.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumeLocator.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeLocator.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeLocator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeLocator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeLocator.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeLabelsMap: (f = msg.getVolumeLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.VolumeLocator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeLocator;
  return proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeLocator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getVolumeLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 4:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeLocator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeLocator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeLocator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeLocator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeLocator.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> volume_labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeLocator.prototype.getVolumeLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.clearVolumeLabelsMap = function() {
  this.getVolumeLabelsMap().clear();
  return this;};


/**
 * optional Ownership ownership = 3;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.VolumeLocator.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 3));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.VolumeLocator} returns this
*/
proto.openstorage.api.VolumeLocator.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeLocator.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Group group = 4;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.VolumeLocator.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 4));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.VolumeLocator} returns this
*/
proto.openstorage.api.VolumeLocator.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeLocator.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string volume_ids = 5;
 * @return {!Array<string>}
 */
proto.openstorage.api.VolumeLocator.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumeLocator} returns this
 */
proto.openstorage.api.VolumeLocator.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeInspectOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeInspectOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeInspectOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeInspectOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    deep: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeInspectOptions}
 */
proto.openstorage.api.VolumeInspectOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeInspectOptions;
  return proto.openstorage.api.VolumeInspectOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeInspectOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeInspectOptions}
 */
proto.openstorage.api.VolumeInspectOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeInspectOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeInspectOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeInspectOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeInspectOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeep();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool deep = 1;
 * @return {boolean}
 */
proto.openstorage.api.VolumeInspectOptions.prototype.getDeep = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeInspectOptions} returns this
 */
proto.openstorage.api.VolumeInspectOptions.prototype.setDeep = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Source.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Source.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Source} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Source.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    seed: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Source}
 */
proto.openstorage.api.Source.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Source;
  return proto.openstorage.api.Source.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Source} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Source}
 */
proto.openstorage.api.Source.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Source.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Source.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Source} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Source.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSeed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.openstorage.api.Source.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Source} returns this
 */
proto.openstorage.api.Source.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string seed = 2;
 * @return {string}
 */
proto.openstorage.api.Source.prototype.getSeed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Source} returns this
 */
proto.openstorage.api.Source.prototype.setSeed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Group}
 */
proto.openstorage.api.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Group;
  return proto.openstorage.api.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Group}
 */
proto.openstorage.api.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.Group.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Group} returns this
 */
proto.openstorage.api.Group.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.IoStrategy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.IoStrategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.IoStrategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.IoStrategy.toObject = function(includeInstance, msg) {
  var f, obj = {
    asyncIo: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    earlyAck: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    directIo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.IoStrategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.IoStrategy;
  return proto.openstorage.api.IoStrategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.IoStrategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.IoStrategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsyncIo(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEarlyAck(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectIo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.IoStrategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.IoStrategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.IoStrategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.IoStrategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsyncIo();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEarlyAck();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDirectIo();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool async_io = 1;
 * @return {boolean}
 */
proto.openstorage.api.IoStrategy.prototype.getAsyncIo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.IoStrategy} returns this
 */
proto.openstorage.api.IoStrategy.prototype.setAsyncIo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool early_ack = 2;
 * @return {boolean}
 */
proto.openstorage.api.IoStrategy.prototype.getEarlyAck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.IoStrategy} returns this
 */
proto.openstorage.api.IoStrategy.prototype.setEarlyAck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool direct_io = 3;
 * @return {boolean}
 */
proto.openstorage.api.IoStrategy.prototype.getDirectIo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.IoStrategy} returns this
 */
proto.openstorage.api.IoStrategy.prototype.setDirectIo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Xattr.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Xattr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Xattr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Xattr.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Xattr}
 */
proto.openstorage.api.Xattr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Xattr;
  return proto.openstorage.api.Xattr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Xattr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Xattr}
 */
proto.openstorage.api.Xattr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Xattr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Xattr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Xattr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Xattr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.Xattr.Value = {
  UNSPECIFIED: 0,
  COW_ON_DEMAND: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ExportSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ExportSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ExportSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ExportSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    exportProtocol: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exportOptions: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.ExportSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ExportSpec;
  return proto.openstorage.api.ExportSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ExportSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.ExportSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ExportProtocol} */ (reader.readEnum());
      msg.setExportProtocol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExportOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ExportSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ExportSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ExportSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ExportSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExportProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getExportOptions();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ExportProtocol export_protocol = 1;
 * @return {!proto.openstorage.api.ExportProtocol}
 */
proto.openstorage.api.ExportSpec.prototype.getExportProtocol = function() {
  return /** @type {!proto.openstorage.api.ExportProtocol} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ExportProtocol} value
 * @return {!proto.openstorage.api.ExportSpec} returns this
 */
proto.openstorage.api.ExportSpec.prototype.setExportProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string export_options = 2;
 * @return {string}
 */
proto.openstorage.api.ExportSpec.prototype.getExportOptions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ExportSpec} returns this
 */
proto.openstorage.api.ExportSpec.prototype.setExportOptions = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.NFSProxySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.NFSProxySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.NFSProxySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NFSProxySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    exportPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subPath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.NFSProxySpec}
 */
proto.openstorage.api.NFSProxySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.NFSProxySpec;
  return proto.openstorage.api.NFSProxySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.NFSProxySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.NFSProxySpec}
 */
proto.openstorage.api.NFSProxySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExportPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.NFSProxySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.NFSProxySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.NFSProxySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NFSProxySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExportPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string export_path = 1;
 * @return {string}
 */
proto.openstorage.api.NFSProxySpec.prototype.getExportPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.NFSProxySpec} returns this
 */
proto.openstorage.api.NFSProxySpec.prototype.setExportPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sub_path = 2;
 * @return {string}
 */
proto.openstorage.api.NFSProxySpec.prototype.getSubPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.NFSProxySpec} returns this
 */
proto.openstorage.api.NFSProxySpec.prototype.setSubPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.S3ProxySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.S3ProxySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.S3ProxySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.S3ProxySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.S3ProxySpec}
 */
proto.openstorage.api.S3ProxySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.S3ProxySpec;
  return proto.openstorage.api.S3ProxySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.S3ProxySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.S3ProxySpec}
 */
proto.openstorage.api.S3ProxySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.S3ProxySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.S3ProxySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.S3ProxySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.S3ProxySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bucket_name = 1;
 * @return {string}
 */
proto.openstorage.api.S3ProxySpec.prototype.getBucketName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.S3ProxySpec} returns this
 */
proto.openstorage.api.S3ProxySpec.prototype.setBucketName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.PXDProxySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.PXDProxySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.PXDProxySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PXDProxySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.PXDProxySpec}
 */
proto.openstorage.api.PXDProxySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.PXDProxySpec;
  return proto.openstorage.api.PXDProxySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.PXDProxySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.PXDProxySpec}
 */
proto.openstorage.api.PXDProxySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.PXDProxySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.PXDProxySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.PXDProxySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PXDProxySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.PXDProxySpec.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.PXDProxySpec} returns this
 */
proto.openstorage.api.PXDProxySpec.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.PureBlockSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.PureBlockSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.PureBlockSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PureBlockSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    serialNum: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullVolName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.PureBlockSpec}
 */
proto.openstorage.api.PureBlockSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.PureBlockSpec;
  return proto.openstorage.api.PureBlockSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.PureBlockSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.PureBlockSpec}
 */
proto.openstorage.api.PureBlockSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullVolName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.PureBlockSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.PureBlockSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.PureBlockSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PureBlockSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSerialNum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullVolName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string serial_num = 1;
 * @return {string}
 */
proto.openstorage.api.PureBlockSpec.prototype.getSerialNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.PureBlockSpec} returns this
 */
proto.openstorage.api.PureBlockSpec.prototype.setSerialNum = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_vol_name = 2;
 * @return {string}
 */
proto.openstorage.api.PureBlockSpec.prototype.getFullVolName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.PureBlockSpec} returns this
 */
proto.openstorage.api.PureBlockSpec.prototype.setFullVolName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.PureFileSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.PureFileSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.PureFileSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PureFileSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    exportRules: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullVolName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.PureFileSpec}
 */
proto.openstorage.api.PureFileSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.PureFileSpec;
  return proto.openstorage.api.PureFileSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.PureFileSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.PureFileSpec}
 */
proto.openstorage.api.PureFileSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExportRules(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullVolName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.PureFileSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.PureFileSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.PureFileSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.PureFileSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExportRules();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullVolName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string export_rules = 1;
 * @return {string}
 */
proto.openstorage.api.PureFileSpec.prototype.getExportRules = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.PureFileSpec} returns this
 */
proto.openstorage.api.PureFileSpec.prototype.setExportRules = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_vol_name = 2;
 * @return {string}
 */
proto.openstorage.api.PureFileSpec.prototype.getFullVolName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.PureFileSpec} returns this
 */
proto.openstorage.api.PureFileSpec.prototype.setFullVolName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ProxySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ProxySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ProxySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ProxySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    proxyProtocol: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endpoint: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nfsSpec: (f = msg.getNfsSpec()) && proto.openstorage.api.NFSProxySpec.toObject(includeInstance, f),
    s3Spec: (f = msg.getS3Spec()) && proto.openstorage.api.S3ProxySpec.toObject(includeInstance, f),
    pxdSpec: (f = msg.getPxdSpec()) && proto.openstorage.api.PXDProxySpec.toObject(includeInstance, f),
    pureBlockSpec: (f = msg.getPureBlockSpec()) && proto.openstorage.api.PureBlockSpec.toObject(includeInstance, f),
    pureFileSpec: (f = msg.getPureFileSpec()) && proto.openstorage.api.PureFileSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.ProxySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ProxySpec;
  return proto.openstorage.api.ProxySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ProxySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.ProxySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ProxyProtocol} */ (reader.readEnum());
      msg.setProxyProtocol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 3:
      var value = new proto.openstorage.api.NFSProxySpec;
      reader.readMessage(value,proto.openstorage.api.NFSProxySpec.deserializeBinaryFromReader);
      msg.setNfsSpec(value);
      break;
    case 4:
      var value = new proto.openstorage.api.S3ProxySpec;
      reader.readMessage(value,proto.openstorage.api.S3ProxySpec.deserializeBinaryFromReader);
      msg.setS3Spec(value);
      break;
    case 5:
      var value = new proto.openstorage.api.PXDProxySpec;
      reader.readMessage(value,proto.openstorage.api.PXDProxySpec.deserializeBinaryFromReader);
      msg.setPxdSpec(value);
      break;
    case 6:
      var value = new proto.openstorage.api.PureBlockSpec;
      reader.readMessage(value,proto.openstorage.api.PureBlockSpec.deserializeBinaryFromReader);
      msg.setPureBlockSpec(value);
      break;
    case 7:
      var value = new proto.openstorage.api.PureFileSpec;
      reader.readMessage(value,proto.openstorage.api.PureFileSpec.deserializeBinaryFromReader);
      msg.setPureFileSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ProxySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ProxySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ProxySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ProxySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProxyProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNfsSpec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.NFSProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getS3Spec();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.S3ProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getPxdSpec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.openstorage.api.PXDProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getPureBlockSpec();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.openstorage.api.PureBlockSpec.serializeBinaryToWriter
    );
  }
  f = message.getPureFileSpec();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.openstorage.api.PureFileSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProxyProtocol proxy_protocol = 1;
 * @return {!proto.openstorage.api.ProxyProtocol}
 */
proto.openstorage.api.ProxySpec.prototype.getProxyProtocol = function() {
  return /** @type {!proto.openstorage.api.ProxyProtocol} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ProxyProtocol} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.setProxyProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string endpoint = 2;
 * @return {string}
 */
proto.openstorage.api.ProxySpec.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NFSProxySpec nfs_spec = 3;
 * @return {?proto.openstorage.api.NFSProxySpec}
 */
proto.openstorage.api.ProxySpec.prototype.getNfsSpec = function() {
  return /** @type{?proto.openstorage.api.NFSProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.NFSProxySpec, 3));
};


/**
 * @param {?proto.openstorage.api.NFSProxySpec|undefined} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
*/
proto.openstorage.api.ProxySpec.prototype.setNfsSpec = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.clearNfsSpec = function() {
  return this.setNfsSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ProxySpec.prototype.hasNfsSpec = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional S3ProxySpec s3_spec = 4;
 * @return {?proto.openstorage.api.S3ProxySpec}
 */
proto.openstorage.api.ProxySpec.prototype.getS3Spec = function() {
  return /** @type{?proto.openstorage.api.S3ProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.S3ProxySpec, 4));
};


/**
 * @param {?proto.openstorage.api.S3ProxySpec|undefined} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
*/
proto.openstorage.api.ProxySpec.prototype.setS3Spec = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.clearS3Spec = function() {
  return this.setS3Spec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ProxySpec.prototype.hasS3Spec = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PXDProxySpec pxd_spec = 5;
 * @return {?proto.openstorage.api.PXDProxySpec}
 */
proto.openstorage.api.ProxySpec.prototype.getPxdSpec = function() {
  return /** @type{?proto.openstorage.api.PXDProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.PXDProxySpec, 5));
};


/**
 * @param {?proto.openstorage.api.PXDProxySpec|undefined} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
*/
proto.openstorage.api.ProxySpec.prototype.setPxdSpec = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.clearPxdSpec = function() {
  return this.setPxdSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ProxySpec.prototype.hasPxdSpec = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PureBlockSpec pure_block_spec = 6;
 * @return {?proto.openstorage.api.PureBlockSpec}
 */
proto.openstorage.api.ProxySpec.prototype.getPureBlockSpec = function() {
  return /** @type{?proto.openstorage.api.PureBlockSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.PureBlockSpec, 6));
};


/**
 * @param {?proto.openstorage.api.PureBlockSpec|undefined} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
*/
proto.openstorage.api.ProxySpec.prototype.setPureBlockSpec = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.clearPureBlockSpec = function() {
  return this.setPureBlockSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ProxySpec.prototype.hasPureBlockSpec = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PureFileSpec pure_file_spec = 7;
 * @return {?proto.openstorage.api.PureFileSpec}
 */
proto.openstorage.api.ProxySpec.prototype.getPureFileSpec = function() {
  return /** @type{?proto.openstorage.api.PureFileSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.PureFileSpec, 7));
};


/**
 * @param {?proto.openstorage.api.PureFileSpec|undefined} value
 * @return {!proto.openstorage.api.ProxySpec} returns this
*/
proto.openstorage.api.ProxySpec.prototype.setPureFileSpec = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ProxySpec} returns this
 */
proto.openstorage.api.ProxySpec.prototype.clearPureFileSpec = function() {
  return this.setPureFileSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ProxySpec.prototype.hasPureFileSpec = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Sharedv4ServiceSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Sharedv4ServiceSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4ServiceSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    externalAccess: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Sharedv4ServiceSpec;
  return proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Sharedv4ServiceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.Sharedv4ServiceSpec.ServiceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExternalAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Sharedv4ServiceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getExternalAccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.Sharedv4ServiceSpec.ServiceType = {
  UNSPECIFIED: 0,
  NODEPORT: 1,
  CLUSTERIP: 2,
  LOADBALANCER: 3,
  NONE: 4
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec} returns this
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ServiceType type = 2;
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec.ServiceType}
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Sharedv4ServiceSpec.ServiceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.Sharedv4ServiceSpec.ServiceType} value
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec} returns this
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool external_access = 3;
 * @return {boolean}
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.getExternalAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.Sharedv4ServiceSpec} returns this
 */
proto.openstorage.api.Sharedv4ServiceSpec.prototype.setExternalAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Sharedv4FailoverStrategy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Sharedv4FailoverStrategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Sharedv4FailoverStrategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4FailoverStrategy.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Sharedv4FailoverStrategy}
 */
proto.openstorage.api.Sharedv4FailoverStrategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Sharedv4FailoverStrategy;
  return proto.openstorage.api.Sharedv4FailoverStrategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Sharedv4FailoverStrategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Sharedv4FailoverStrategy}
 */
proto.openstorage.api.Sharedv4FailoverStrategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Sharedv4FailoverStrategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Sharedv4FailoverStrategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Sharedv4FailoverStrategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4FailoverStrategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.Sharedv4FailoverStrategy.Value = {
  UNSPECIFIED: 0,
  AGGRESSIVE: 1,
  NORMAL: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Sharedv4Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Sharedv4Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Sharedv4Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    failoverStrategy: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.Sharedv4Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Sharedv4Spec;
  return proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Sharedv4Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.Sharedv4FailoverStrategy.Value} */ (reader.readEnum());
      msg.setFailoverStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Sharedv4Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Sharedv4Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailoverStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Sharedv4FailoverStrategy.Value failover_strategy = 1;
 * @return {!proto.openstorage.api.Sharedv4FailoverStrategy.Value}
 */
proto.openstorage.api.Sharedv4Spec.prototype.getFailoverStrategy = function() {
  return /** @type {!proto.openstorage.api.Sharedv4FailoverStrategy.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.Sharedv4FailoverStrategy.Value} value
 * @return {!proto.openstorage.api.Sharedv4Spec} returns this
 */
proto.openstorage.api.Sharedv4Spec.prototype.setFailoverStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.MountOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.MountOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.MountOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.MountOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.MountOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.MountOptions;
  return proto.openstorage.api.MountOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.MountOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.MountOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.MountOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.MountOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.MountOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.MountOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> options = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.MountOptions.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.MountOptions} returns this
 */
proto.openstorage.api.MountOptions.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.FastpathReplState.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.FastpathReplState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.FastpathReplState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FastpathReplState.toObject = function(includeInstance, msg) {
  var f, obj = {
    devId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, 0),
    acl: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    exportedDevice: jspb.Message.getFieldWithDefault(msg, 5, ""),
    block: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    target: jspb.Message.getFieldWithDefault(msg, 7, ""),
    exported: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    imported: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    devpath: jspb.Message.getFieldWithDefault(msg, 10, ""),
    nodeUuid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.FastpathReplState}
 */
proto.openstorage.api.FastpathReplState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.FastpathReplState;
  return proto.openstorage.api.FastpathReplState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.FastpathReplState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.FastpathReplState}
 */
proto.openstorage.api.FastpathReplState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDevId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNodeId(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.FastpathProtocol} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExportedDevice(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlock(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExported(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImported(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevpath(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.FastpathReplState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.FastpathReplState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.FastpathReplState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FastpathReplState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNodeId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAcl();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getExportedDevice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBlock();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExported();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getImported();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getDevpath();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getNodeUuid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional uint64 dev_id = 1;
 * @return {number}
 */
proto.openstorage.api.FastpathReplState.prototype.getDevId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setDevId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 node_id = 2;
 * @return {number}
 */
proto.openstorage.api.FastpathReplState.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional FastpathProtocol protocol = 3;
 * @return {!proto.openstorage.api.FastpathProtocol}
 */
proto.openstorage.api.FastpathReplState.prototype.getProtocol = function() {
  return /** @type {!proto.openstorage.api.FastpathProtocol} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.FastpathProtocol} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool acl = 4;
 * @return {boolean}
 */
proto.openstorage.api.FastpathReplState.prototype.getAcl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setAcl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string exported_device = 5;
 * @return {string}
 */
proto.openstorage.api.FastpathReplState.prototype.getExportedDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setExportedDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool block = 6;
 * @return {boolean}
 */
proto.openstorage.api.FastpathReplState.prototype.getBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string target = 7;
 * @return {string}
 */
proto.openstorage.api.FastpathReplState.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool exported = 8;
 * @return {boolean}
 */
proto.openstorage.api.FastpathReplState.prototype.getExported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setExported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool imported = 9;
 * @return {boolean}
 */
proto.openstorage.api.FastpathReplState.prototype.getImported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setImported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string devpath = 10;
 * @return {string}
 */
proto.openstorage.api.FastpathReplState.prototype.getDevpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setDevpath = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string node_uuid = 11;
 * @return {string}
 */
proto.openstorage.api.FastpathReplState.prototype.getNodeUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FastpathReplState} returns this
 */
proto.openstorage.api.FastpathReplState.prototype.setNodeUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.FastpathConfig.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.FastpathConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.FastpathConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.FastpathConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FastpathConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    setupOn: jspb.Message.getFieldWithDefault(msg, 1, 0),
    promote: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    replicasList: jspb.Message.toObjectList(msg.getReplicasList(),
    proto.openstorage.api.FastpathReplState.toObject, includeInstance),
    dirty: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    coordUuid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    forceFailover: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.FastpathConfig}
 */
proto.openstorage.api.FastpathConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.FastpathConfig;
  return proto.openstorage.api.FastpathConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.FastpathConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.FastpathConfig}
 */
proto.openstorage.api.FastpathConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSetupOn(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPromote(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.FastpathStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.openstorage.api.FastpathReplState;
      reader.readMessage(value,proto.openstorage.api.FastpathReplState.deserializeBinaryFromReader);
      msg.addReplicas(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirty(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoordUuid(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceFailover(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.FastpathConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.FastpathConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.FastpathConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FastpathConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetupOn();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPromote();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReplicasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.openstorage.api.FastpathReplState.serializeBinaryToWriter
    );
  }
  f = message.getDirty();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCoordUuid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getForceFailover();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 setup_on = 1;
 * @return {number}
 */
proto.openstorage.api.FastpathConfig.prototype.getSetupOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setSetupOn = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool promote = 2;
 * @return {boolean}
 */
proto.openstorage.api.FastpathConfig.prototype.getPromote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setPromote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional FastpathStatus status = 3;
 * @return {!proto.openstorage.api.FastpathStatus}
 */
proto.openstorage.api.FastpathConfig.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.FastpathStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.FastpathStatus} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated FastpathReplState replicas = 4;
 * @return {!Array<!proto.openstorage.api.FastpathReplState>}
 */
proto.openstorage.api.FastpathConfig.prototype.getReplicasList = function() {
  return /** @type{!Array<!proto.openstorage.api.FastpathReplState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.FastpathReplState, 4));
};


/**
 * @param {!Array<!proto.openstorage.api.FastpathReplState>} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
*/
proto.openstorage.api.FastpathConfig.prototype.setReplicasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.openstorage.api.FastpathReplState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.FastpathReplState}
 */
proto.openstorage.api.FastpathConfig.prototype.addReplicas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.openstorage.api.FastpathReplState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.clearReplicasList = function() {
  return this.setReplicasList([]);
};


/**
 * optional bool dirty = 5;
 * @return {boolean}
 */
proto.openstorage.api.FastpathConfig.prototype.getDirty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setDirty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string coord_uuid = 6;
 * @return {string}
 */
proto.openstorage.api.FastpathConfig.prototype.getCoordUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setCoordUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool force_failover = 7;
 * @return {boolean}
 */
proto.openstorage.api.FastpathConfig.prototype.getForceFailover = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.FastpathConfig} returns this
 */
proto.openstorage.api.FastpathConfig.prototype.setForceFailover = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ScanPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ScanPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ScanPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ScanPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    trigger: jspb.Message.getFieldWithDefault(msg, 1, 0),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ScanPolicy}
 */
proto.openstorage.api.ScanPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ScanPolicy;
  return proto.openstorage.api.ScanPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ScanPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ScanPolicy}
 */
proto.openstorage.api.ScanPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ScanPolicy.ScanTrigger} */ (reader.readEnum());
      msg.setTrigger(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.ScanPolicy.ScanAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ScanPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ScanPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ScanPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ScanPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrigger();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.ScanPolicy.ScanTrigger = {
  SCAN_TRIGGER_NONE: 0,
  SCAN_TRIGGER_ON_MOUNT: 1,
  SCAN_TRIGGER_ON_NEXT_MOUNT: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.ScanPolicy.ScanAction = {
  SCAN_ACTION_NONE: 0,
  SCAN_ACTION_SCAN_ONLY: 1,
  SCAN_ACTION_SCAN_REPAIR: 2
};

/**
 * optional ScanTrigger trigger = 1;
 * @return {!proto.openstorage.api.ScanPolicy.ScanTrigger}
 */
proto.openstorage.api.ScanPolicy.prototype.getTrigger = function() {
  return /** @type {!proto.openstorage.api.ScanPolicy.ScanTrigger} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ScanPolicy.ScanTrigger} value
 * @return {!proto.openstorage.api.ScanPolicy} returns this
 */
proto.openstorage.api.ScanPolicy.prototype.setTrigger = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ScanAction action = 2;
 * @return {!proto.openstorage.api.ScanPolicy.ScanAction}
 */
proto.openstorage.api.ScanPolicy.prototype.getAction = function() {
  return /** @type {!proto.openstorage.api.ScanPolicy.ScanAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.ScanPolicy.ScanAction} value
 * @return {!proto.openstorage.api.ScanPolicy} returns this
 */
proto.openstorage.api.ScanPolicy.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.IoThrottle.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.IoThrottle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.IoThrottle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.IoThrottle.toObject = function(includeInstance, msg) {
  var f, obj = {
    readIops: jspb.Message.getFieldWithDefault(msg, 1, 0),
    writeIops: jspb.Message.getFieldWithDefault(msg, 2, 0),
    readBwMbytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    writeBwMbytes: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.IoThrottle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.IoThrottle;
  return proto.openstorage.api.IoThrottle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.IoThrottle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.IoThrottle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReadIops(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWriteIops(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReadBwMbytes(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWriteBwMbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.IoThrottle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.IoThrottle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.IoThrottle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.IoThrottle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadIops();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWriteIops();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getReadBwMbytes();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getWriteBwMbytes();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 read_iops = 1;
 * @return {number}
 */
proto.openstorage.api.IoThrottle.prototype.getReadIops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.IoThrottle} returns this
 */
proto.openstorage.api.IoThrottle.prototype.setReadIops = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 write_iops = 2;
 * @return {number}
 */
proto.openstorage.api.IoThrottle.prototype.getWriteIops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.IoThrottle} returns this
 */
proto.openstorage.api.IoThrottle.prototype.setWriteIops = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 read_bw_mbytes = 3;
 * @return {number}
 */
proto.openstorage.api.IoThrottle.prototype.getReadBwMbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.IoThrottle} returns this
 */
proto.openstorage.api.IoThrottle.prototype.setReadBwMbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 write_bw_mbytes = 4;
 * @return {number}
 */
proto.openstorage.api.IoThrottle.prototype.getWriteBwMbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.IoThrottle} returns this
 */
proto.openstorage.api.IoThrottle.prototype.setWriteBwMbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    ephemeral: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    format: jspb.Message.getFieldWithDefault(msg, 3, 0),
    blockSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    haLevel: jspb.Message.getFieldWithDefault(msg, 5, 0),
    cos: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ioProfile: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dedupe: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    snapshotInterval: jspb.Message.getFieldWithDefault(msg, 9, 0),
    volumeLabelsMap: (f = msg.getVolumeLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    shared: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    replicaSet: (f = msg.getReplicaSet()) && proto.openstorage.api.ReplicaSet.toObject(includeInstance, f),
    aggregationLevel: jspb.Message.getFieldWithDefault(msg, 13, 0),
    encrypted: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    passphrase: jspb.Message.getFieldWithDefault(msg, 15, ""),
    snapshotSchedule: jspb.Message.getFieldWithDefault(msg, 16, ""),
    scale: jspb.Message.getFieldWithDefault(msg, 17, 0),
    sticky: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    groupEnforced: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    compressed: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    cascaded: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    journal: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    sharedv4: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    queueDepth: jspb.Message.getFieldWithDefault(msg, 27, 0),
    forceUnsupportedFsType: jspb.Message.getBooleanFieldWithDefault(msg, 28, false),
    nodiscard: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    ioStrategy: (f = msg.getIoStrategy()) && proto.openstorage.api.IoStrategy.toObject(includeInstance, f),
    placementStrategy: (f = msg.getPlacementStrategy()) && proto.openstorage.api.VolumePlacementStrategy.toObject(includeInstance, f),
    storagePolicy: jspb.Message.getFieldWithDefault(msg, 32, ""),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    exportSpec: (f = msg.getExportSpec()) && proto.openstorage.api.ExportSpec.toObject(includeInstance, f),
    fpPreference: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    xattr: jspb.Message.getFieldWithDefault(msg, 36, 0),
    scanPolicy: (f = msg.getScanPolicy()) && proto.openstorage.api.ScanPolicy.toObject(includeInstance, f),
    mountOptions: (f = msg.getMountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    sharedv4MountOptions: (f = msg.getSharedv4MountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    proxyWrite: jspb.Message.getBooleanFieldWithDefault(msg, 40, false),
    proxySpec: (f = msg.getProxySpec()) && proto.openstorage.api.ProxySpec.toObject(includeInstance, f),
    sharedv4ServiceSpec: (f = msg.getSharedv4ServiceSpec()) && proto.openstorage.api.Sharedv4ServiceSpec.toObject(includeInstance, f),
    sharedv4Spec: (f = msg.getSharedv4Spec()) && proto.openstorage.api.Sharedv4Spec.toObject(includeInstance, f),
    autoFstrim: jspb.Message.getBooleanFieldWithDefault(msg, 44, false),
    ioThrottle: (f = msg.getIoThrottle()) && proto.openstorage.api.IoThrottle.toObject(includeInstance, f),
    numberOfChunks: jspb.Message.getFieldWithDefault(msg, 46, 0),
    readahead: jspb.Message.getBooleanFieldWithDefault(msg, 47, false),
    topologyRequirement: (f = msg.getTopologyRequirement()) && proto.openstorage.api.TopologyRequirement.toObject(includeInstance, f),
    winshare: jspb.Message.getBooleanFieldWithDefault(msg, 49, false),
    faCreateOptions: jspb.Message.getFieldWithDefault(msg, 50, ""),
    nearSync: jspb.Message.getBooleanFieldWithDefault(msg, 51, false),
    nearSyncReplicationStrategy: jspb.Message.getFieldWithDefault(msg, 52, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.VolumeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeSpec;
  return proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEphemeral(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.FSType} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHaLevel(value);
      break;
    case 6:
      var value = /** @type {!proto.openstorage.api.CosType} */ (reader.readEnum());
      msg.setCos(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.IoProfile} */ (reader.readEnum());
      msg.setIoProfile(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDedupe(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSnapshotInterval(value);
      break;
    case 10:
      var value = msg.getVolumeLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShared(value);
      break;
    case 12:
      var value = new proto.openstorage.api.ReplicaSet;
      reader.readMessage(value,proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader);
      msg.setReplicaSet(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAggregationLevel(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncrypted(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassphrase(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotSchedule(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScale(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSticky(value);
      break;
    case 21:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGroupEnforced(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompressed(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCascaded(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJournal(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSharedv4(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQueueDepth(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceUnsupportedFsType(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNodiscard(value);
      break;
    case 30:
      var value = new proto.openstorage.api.IoStrategy;
      reader.readMessage(value,proto.openstorage.api.IoStrategy.deserializeBinaryFromReader);
      msg.setIoStrategy(value);
      break;
    case 31:
      var value = new proto.openstorage.api.VolumePlacementStrategy;
      reader.readMessage(value,proto.openstorage.api.VolumePlacementStrategy.deserializeBinaryFromReader);
      msg.setPlacementStrategy(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragePolicy(value);
      break;
    case 33:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 34:
      var value = new proto.openstorage.api.ExportSpec;
      reader.readMessage(value,proto.openstorage.api.ExportSpec.deserializeBinaryFromReader);
      msg.setExportSpec(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFpPreference(value);
      break;
    case 36:
      var value = /** @type {!proto.openstorage.api.Xattr.Value} */ (reader.readEnum());
      msg.setXattr(value);
      break;
    case 37:
      var value = new proto.openstorage.api.ScanPolicy;
      reader.readMessage(value,proto.openstorage.api.ScanPolicy.deserializeBinaryFromReader);
      msg.setScanPolicy(value);
      break;
    case 38:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setMountOptions(value);
      break;
    case 39:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setSharedv4MountOptions(value);
      break;
    case 40:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProxyWrite(value);
      break;
    case 41:
      var value = new proto.openstorage.api.ProxySpec;
      reader.readMessage(value,proto.openstorage.api.ProxySpec.deserializeBinaryFromReader);
      msg.setProxySpec(value);
      break;
    case 42:
      var value = new proto.openstorage.api.Sharedv4ServiceSpec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader);
      msg.setSharedv4ServiceSpec(value);
      break;
    case 43:
      var value = new proto.openstorage.api.Sharedv4Spec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader);
      msg.setSharedv4Spec(value);
      break;
    case 44:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoFstrim(value);
      break;
    case 45:
      var value = new proto.openstorage.api.IoThrottle;
      reader.readMessage(value,proto.openstorage.api.IoThrottle.deserializeBinaryFromReader);
      msg.setIoThrottle(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberOfChunks(value);
      break;
    case 47:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadahead(value);
      break;
    case 48:
      var value = new proto.openstorage.api.TopologyRequirement;
      reader.readMessage(value,proto.openstorage.api.TopologyRequirement.deserializeBinaryFromReader);
      msg.setTopologyRequirement(value);
      break;
    case 49:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWinshare(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setFaCreateOptions(value);
      break;
    case 51:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNearSync(value);
      break;
    case 52:
      var value = /** @type {!proto.openstorage.api.NearSyncReplicationStrategy} */ (reader.readEnum());
      msg.setNearSyncReplicationStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEphemeral();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getBlockSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getHaLevel();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCos();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getIoProfile();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getDedupe();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSnapshotInterval();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getVolumeLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getShared();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getReplicaSet();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.openstorage.api.ReplicaSet.serializeBinaryToWriter
    );
  }
  f = message.getAggregationLevel();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getEncrypted();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPassphrase();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSnapshotSchedule();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getScale();
  if (f !== 0) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = message.getSticky();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = message.getGroupEnforced();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getCompressed();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getCascaded();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getJournal();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getSharedv4();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getQueueDepth();
  if (f !== 0) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = message.getForceUnsupportedFsType();
  if (f) {
    writer.writeBool(
      28,
      f
    );
  }
  f = message.getNodiscard();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getIoStrategy();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.openstorage.api.IoStrategy.serializeBinaryToWriter
    );
  }
  f = message.getPlacementStrategy();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.openstorage.api.VolumePlacementStrategy.serializeBinaryToWriter
    );
  }
  f = message.getStoragePolicy();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getExportSpec();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.openstorage.api.ExportSpec.serializeBinaryToWriter
    );
  }
  f = message.getFpPreference();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getXattr();
  if (f !== 0.0) {
    writer.writeEnum(
      36,
      f
    );
  }
  f = message.getScanPolicy();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.openstorage.api.ScanPolicy.serializeBinaryToWriter
    );
  }
  f = message.getMountOptions();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4MountOptions();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getProxyWrite();
  if (f) {
    writer.writeBool(
      40,
      f
    );
  }
  f = message.getProxySpec();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.openstorage.api.ProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4ServiceSpec();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4Spec();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter
    );
  }
  f = message.getAutoFstrim();
  if (f) {
    writer.writeBool(
      44,
      f
    );
  }
  f = message.getIoThrottle();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      proto.openstorage.api.IoThrottle.serializeBinaryToWriter
    );
  }
  f = message.getNumberOfChunks();
  if (f !== 0) {
    writer.writeUint32(
      46,
      f
    );
  }
  f = message.getReadahead();
  if (f) {
    writer.writeBool(
      47,
      f
    );
  }
  f = message.getTopologyRequirement();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.openstorage.api.TopologyRequirement.serializeBinaryToWriter
    );
  }
  f = message.getWinshare();
  if (f) {
    writer.writeBool(
      49,
      f
    );
  }
  f = message.getFaCreateOptions();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getNearSync();
  if (f) {
    writer.writeBool(
      51,
      f
    );
  }
  f = message.getNearSyncReplicationStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      52,
      f
    );
  }
};


/**
 * optional bool ephemeral = 1;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getEphemeral = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setEphemeral = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 size = 2;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional FSType format = 3;
 * @return {!proto.openstorage.api.FSType}
 */
proto.openstorage.api.VolumeSpec.prototype.getFormat = function() {
  return /** @type {!proto.openstorage.api.FSType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.FSType} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 block_size = 4;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getBlockSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setBlockSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 ha_level = 5;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getHaLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setHaLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional CosType cos = 6;
 * @return {!proto.openstorage.api.CosType}
 */
proto.openstorage.api.VolumeSpec.prototype.getCos = function() {
  return /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.openstorage.api.CosType} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setCos = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional IoProfile io_profile = 7;
 * @return {!proto.openstorage.api.IoProfile}
 */
proto.openstorage.api.VolumeSpec.prototype.getIoProfile = function() {
  return /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.IoProfile} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setIoProfile = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool dedupe = 8;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getDedupe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setDedupe = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 snapshot_interval = 9;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getSnapshotInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setSnapshotInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * map<string, string> volume_labels = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeSpec.prototype.getVolumeLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearVolumeLabelsMap = function() {
  this.getVolumeLabelsMap().clear();
  return this;};


/**
 * optional bool shared = 11;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getShared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setShared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional ReplicaSet replica_set = 12;
 * @return {?proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.VolumeSpec.prototype.getReplicaSet = function() {
  return /** @type{?proto.openstorage.api.ReplicaSet} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ReplicaSet, 12));
};


/**
 * @param {?proto.openstorage.api.ReplicaSet|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setReplicaSet = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearReplicaSet = function() {
  return this.setReplicaSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasReplicaSet = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 aggregation_level = 13;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getAggregationLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setAggregationLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool encrypted = 14;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string passphrase = 15;
 * @return {string}
 */
proto.openstorage.api.VolumeSpec.prototype.getPassphrase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setPassphrase = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string snapshot_schedule = 16;
 * @return {string}
 */
proto.openstorage.api.VolumeSpec.prototype.getSnapshotSchedule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setSnapshotSchedule = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional uint32 scale = 17;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setScale = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool sticky = 18;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getSticky = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setSticky = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional Group group = 21;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.VolumeSpec.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 21));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool group_enforced = 22;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getGroupEnforced = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setGroupEnforced = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool compressed = 23;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getCompressed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setCompressed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool cascaded = 24;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getCascaded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setCascaded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool journal = 25;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getJournal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setJournal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool sharedv4 = 26;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getSharedv4 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setSharedv4 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional uint32 queue_depth = 27;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getQueueDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setQueueDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional bool force_unsupported_fs_type = 28;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getForceUnsupportedFsType = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 28, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setForceUnsupportedFsType = function(value) {
  return jspb.Message.setProto3BooleanField(this, 28, value);
};


/**
 * optional bool nodiscard = 29;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getNodiscard = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setNodiscard = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional IoStrategy io_strategy = 30;
 * @return {?proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.VolumeSpec.prototype.getIoStrategy = function() {
  return /** @type{?proto.openstorage.api.IoStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoStrategy, 30));
};


/**
 * @param {?proto.openstorage.api.IoStrategy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setIoStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearIoStrategy = function() {
  return this.setIoStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasIoStrategy = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional VolumePlacementStrategy placement_strategy = 31;
 * @return {?proto.openstorage.api.VolumePlacementStrategy}
 */
proto.openstorage.api.VolumeSpec.prototype.getPlacementStrategy = function() {
  return /** @type{?proto.openstorage.api.VolumePlacementStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumePlacementStrategy, 31));
};


/**
 * @param {?proto.openstorage.api.VolumePlacementStrategy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setPlacementStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearPlacementStrategy = function() {
  return this.setPlacementStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasPlacementStrategy = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string storage_policy = 32;
 * @return {string}
 */
proto.openstorage.api.VolumeSpec.prototype.getStoragePolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional Ownership ownership = 33;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.VolumeSpec.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 33));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional ExportSpec export_spec = 34;
 * @return {?proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.VolumeSpec.prototype.getExportSpec = function() {
  return /** @type{?proto.openstorage.api.ExportSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ExportSpec, 34));
};


/**
 * @param {?proto.openstorage.api.ExportSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setExportSpec = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearExportSpec = function() {
  return this.setExportSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasExportSpec = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional bool fp_preference = 35;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getFpPreference = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setFpPreference = function(value) {
  return jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * optional Xattr.Value xattr = 36;
 * @return {!proto.openstorage.api.Xattr.Value}
 */
proto.openstorage.api.VolumeSpec.prototype.getXattr = function() {
  return /** @type {!proto.openstorage.api.Xattr.Value} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {!proto.openstorage.api.Xattr.Value} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setXattr = function(value) {
  return jspb.Message.setProto3EnumField(this, 36, value);
};


/**
 * optional ScanPolicy scan_policy = 37;
 * @return {?proto.openstorage.api.ScanPolicy}
 */
proto.openstorage.api.VolumeSpec.prototype.getScanPolicy = function() {
  return /** @type{?proto.openstorage.api.ScanPolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ScanPolicy, 37));
};


/**
 * @param {?proto.openstorage.api.ScanPolicy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setScanPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearScanPolicy = function() {
  return this.setScanPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasScanPolicy = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional MountOptions mount_options = 38;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpec.prototype.getMountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 38));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setMountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearMountOptions = function() {
  return this.setMountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasMountOptions = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional MountOptions sharedv4_mount_options = 39;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpec.prototype.getSharedv4MountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 39));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setSharedv4MountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearSharedv4MountOptions = function() {
  return this.setSharedv4MountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasSharedv4MountOptions = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional bool proxy_write = 40;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getProxyWrite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 40, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setProxyWrite = function(value) {
  return jspb.Message.setProto3BooleanField(this, 40, value);
};


/**
 * optional ProxySpec proxy_spec = 41;
 * @return {?proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.VolumeSpec.prototype.getProxySpec = function() {
  return /** @type{?proto.openstorage.api.ProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ProxySpec, 41));
};


/**
 * @param {?proto.openstorage.api.ProxySpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setProxySpec = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearProxySpec = function() {
  return this.setProxySpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasProxySpec = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional Sharedv4ServiceSpec sharedv4_service_spec = 42;
 * @return {?proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.VolumeSpec.prototype.getSharedv4ServiceSpec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4ServiceSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4ServiceSpec, 42));
};


/**
 * @param {?proto.openstorage.api.Sharedv4ServiceSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setSharedv4ServiceSpec = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearSharedv4ServiceSpec = function() {
  return this.setSharedv4ServiceSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasSharedv4ServiceSpec = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional Sharedv4Spec sharedv4_spec = 43;
 * @return {?proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.VolumeSpec.prototype.getSharedv4Spec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4Spec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4Spec, 43));
};


/**
 * @param {?proto.openstorage.api.Sharedv4Spec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setSharedv4Spec = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearSharedv4Spec = function() {
  return this.setSharedv4Spec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasSharedv4Spec = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional bool auto_fstrim = 44;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getAutoFstrim = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 44, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setAutoFstrim = function(value) {
  return jspb.Message.setProto3BooleanField(this, 44, value);
};


/**
 * optional IoThrottle io_throttle = 45;
 * @return {?proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.VolumeSpec.prototype.getIoThrottle = function() {
  return /** @type{?proto.openstorage.api.IoThrottle} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoThrottle, 45));
};


/**
 * @param {?proto.openstorage.api.IoThrottle|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setIoThrottle = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearIoThrottle = function() {
  return this.setIoThrottle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasIoThrottle = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional uint32 number_of_chunks = 46;
 * @return {number}
 */
proto.openstorage.api.VolumeSpec.prototype.getNumberOfChunks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setNumberOfChunks = function(value) {
  return jspb.Message.setProto3IntField(this, 46, value);
};


/**
 * optional bool readahead = 47;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getReadahead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 47, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setReadahead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 47, value);
};


/**
 * optional TopologyRequirement topology_requirement = 48;
 * @return {?proto.openstorage.api.TopologyRequirement}
 */
proto.openstorage.api.VolumeSpec.prototype.getTopologyRequirement = function() {
  return /** @type{?proto.openstorage.api.TopologyRequirement} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.TopologyRequirement, 48));
};


/**
 * @param {?proto.openstorage.api.TopologyRequirement|undefined} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
*/
proto.openstorage.api.VolumeSpec.prototype.setTopologyRequirement = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.clearTopologyRequirement = function() {
  return this.setTopologyRequirement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.hasTopologyRequirement = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional bool winshare = 49;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getWinshare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 49, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setWinshare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 49, value);
};


/**
 * optional string fa_create_options = 50;
 * @return {string}
 */
proto.openstorage.api.VolumeSpec.prototype.getFaCreateOptions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setFaCreateOptions = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional bool near_sync = 51;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpec.prototype.getNearSync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 51, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setNearSync = function(value) {
  return jspb.Message.setProto3BooleanField(this, 51, value);
};


/**
 * optional NearSyncReplicationStrategy near_sync_replication_strategy = 52;
 * @return {!proto.openstorage.api.NearSyncReplicationStrategy}
 */
proto.openstorage.api.VolumeSpec.prototype.getNearSyncReplicationStrategy = function() {
  return /** @type {!proto.openstorage.api.NearSyncReplicationStrategy} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {!proto.openstorage.api.NearSyncReplicationStrategy} value
 * @return {!proto.openstorage.api.VolumeSpec} returns this
 */
proto.openstorage.api.VolumeSpec.prototype.setNearSyncReplicationStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 52, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.VolumeSpecUpdate.oneofGroups_ = [[2],[5],[6],[7],[8],[9],[11],[15],[16],[17],[18],[19],[23],[24],[25],[27],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43]];

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.SizeOptCase = {
  SIZE_OPT_NOT_SET: 0,
  SIZE: 2
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.SizeOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSizeOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.SizeOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.HaLevelOptCase = {
  HA_LEVEL_OPT_NOT_SET: 0,
  HA_LEVEL: 5
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.HaLevelOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getHaLevelOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.HaLevelOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.CosOptCase = {
  COS_OPT_NOT_SET: 0,
  COS: 6
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.CosOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getCosOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.CosOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.IoProfileOptCase = {
  IO_PROFILE_OPT_NOT_SET: 0,
  IO_PROFILE: 7
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.IoProfileOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getIoProfileOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.IoProfileOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.DedupeOptCase = {
  DEDUPE_OPT_NOT_SET: 0,
  DEDUPE: 8
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.DedupeOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getDedupeOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.DedupeOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[4]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.SnapshotIntervalOptCase = {
  SNAPSHOT_INTERVAL_OPT_NOT_SET: 0,
  SNAPSHOT_INTERVAL: 9
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.SnapshotIntervalOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSnapshotIntervalOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.SnapshotIntervalOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[5]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.SharedOptCase = {
  SHARED_OPT_NOT_SET: 0,
  SHARED: 11
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.SharedOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.SharedOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[6]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.PassphraseOptCase = {
  PASSPHRASE_OPT_NOT_SET: 0,
  PASSPHRASE: 15
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.PassphraseOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getPassphraseOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.PassphraseOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[7]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.SnapshotScheduleOptCase = {
  SNAPSHOT_SCHEDULE_OPT_NOT_SET: 0,
  SNAPSHOT_SCHEDULE: 16
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.SnapshotScheduleOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSnapshotScheduleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.SnapshotScheduleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[8]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ScaleOptCase = {
  SCALE_OPT_NOT_SET: 0,
  SCALE: 17
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ScaleOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getScaleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ScaleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[9]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.StickyOptCase = {
  STICKY_OPT_NOT_SET: 0,
  STICKY: 18
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.StickyOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getStickyOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.StickyOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[10]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.GroupOptCase = {
  GROUP_OPT_NOT_SET: 0,
  GROUP: 19
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.GroupOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getGroupOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.GroupOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[11]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.JournalOptCase = {
  JOURNAL_OPT_NOT_SET: 0,
  JOURNAL: 23
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.JournalOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getJournalOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.JournalOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[12]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.Sharedv4OptCase = {
  SHAREDV4_OPT_NOT_SET: 0,
  SHAREDV4: 24
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.Sharedv4OptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4OptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.Sharedv4OptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[13]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.QueueDepthOptCase = {
  QUEUE_DEPTH_OPT_NOT_SET: 0,
  QUEUE_DEPTH: 25
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.QueueDepthOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getQueueDepthOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.QueueDepthOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[14]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.NodiscardOptCase = {
  NODISCARD_OPT_NOT_SET: 0,
  NODISCARD: 27
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.NodiscardOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getNodiscardOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.NodiscardOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[15]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ExportSpecOptCase = {
  EXPORT_SPEC_OPT_NOT_SET: 0,
  EXPORT_SPEC: 29
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ExportSpecOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getExportSpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ExportSpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[16]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.FastpathOptCase = {
  FASTPATH_OPT_NOT_SET: 0,
  FASTPATH: 30
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.FastpathOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getFastpathOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.FastpathOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[17]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.XattrOptCase = {
  XATTR_OPT_NOT_SET: 0,
  XATTR: 31
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.XattrOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getXattrOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.XattrOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[18]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ScanPolicyOptCase = {
  SCAN_POLICY_OPT_NOT_SET: 0,
  SCAN_POLICY: 32
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ScanPolicyOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getScanPolicyOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ScanPolicyOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[19]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.MountOptCase = {
  MOUNT_OPT_NOT_SET: 0,
  MOUNT_OPT_SPEC: 33
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.MountOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getMountOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.MountOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[20]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.Sharedv4MountOptCase = {
  SHAREDV4_MOUNT_OPT_NOT_SET: 0,
  SHAREDV4_MOUNT_OPT_SPEC: 34
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.Sharedv4MountOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4MountOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.Sharedv4MountOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[21]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ProxyWriteOptCase = {
  PROXY_WRITE_OPT_NOT_SET: 0,
  PROXY_WRITE: 35
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ProxyWriteOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getProxyWriteOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ProxyWriteOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[22]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ProxySpecOptCase = {
  PROXY_SPEC_OPT_NOT_SET: 0,
  PROXY_SPEC: 36
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ProxySpecOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getProxySpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ProxySpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[23]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.Sharedv4ServiceSpecOptCase = {
  SHAREDV4_SERVICE_SPEC_OPT_NOT_SET: 0,
  SHAREDV4_SERVICE_SPEC: 37
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.Sharedv4ServiceSpecOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4ServiceSpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.Sharedv4ServiceSpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[24]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.Sharedv4SpecOptCase = {
  SHAREDV4_SPEC_OPT_NOT_SET: 0,
  SHAREDV4_SPEC: 38
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.Sharedv4SpecOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4SpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.Sharedv4SpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[25]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.AutoFstrimOptCase = {
  AUTO_FSTRIM_OPT_NOT_SET: 0,
  AUTO_FSTRIM: 39
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.AutoFstrimOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getAutoFstrimOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.AutoFstrimOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[26]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.IoThrottleOptCase = {
  IO_THROTTLE_OPT_NOT_SET: 0,
  IO_THROTTLE: 40
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.IoThrottleOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getIoThrottleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.IoThrottleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[27]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.ReadaheadOptCase = {
  READAHEAD_OPT_NOT_SET: 0,
  READAHEAD: 41
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.ReadaheadOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getReadaheadOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.ReadaheadOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[28]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.WinshareOptCase = {
  WINSHARE_OPT_NOT_SET: 0,
  WINSHARE: 42
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.WinshareOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getWinshareOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.WinshareOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[29]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecUpdate.NearSyncReplicationStrategyOptCase = {
  NEAR_SYNC_REPLICATION_STRATEGY_OPT_NOT_SET: 0,
  NEAR_SYNC_REPLICATION_STRATEGY: 43
};

/**
 * @return {proto.openstorage.api.VolumeSpecUpdate.NearSyncReplicationStrategyOptCase}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getNearSyncReplicationStrategyOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecUpdate.NearSyncReplicationStrategyOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[30]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeSpecUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeSpecUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpecUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    haLevel: jspb.Message.getFieldWithDefault(msg, 5, 0),
    cos: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ioProfile: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dedupe: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    snapshotInterval: jspb.Message.getFieldWithDefault(msg, 9, 0),
    shared: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    replicaSet: (f = msg.getReplicaSet()) && proto.openstorage.api.ReplicaSet.toObject(includeInstance, f),
    passphrase: jspb.Message.getFieldWithDefault(msg, 15, ""),
    snapshotSchedule: jspb.Message.getFieldWithDefault(msg, 16, ""),
    scale: jspb.Message.getFieldWithDefault(msg, 17, 0),
    sticky: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    journal: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    sharedv4: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    queueDepth: jspb.Message.getFieldWithDefault(msg, 25, 0),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    nodiscard: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    ioStrategy: (f = msg.getIoStrategy()) && proto.openstorage.api.IoStrategy.toObject(includeInstance, f),
    exportSpec: (f = msg.getExportSpec()) && proto.openstorage.api.ExportSpec.toObject(includeInstance, f),
    fastpath: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    xattr: jspb.Message.getFieldWithDefault(msg, 31, 0),
    scanPolicy: (f = msg.getScanPolicy()) && proto.openstorage.api.ScanPolicy.toObject(includeInstance, f),
    mountOptSpec: (f = msg.getMountOptSpec()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    sharedv4MountOptSpec: (f = msg.getSharedv4MountOptSpec()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    proxyWrite: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    proxySpec: (f = msg.getProxySpec()) && proto.openstorage.api.ProxySpec.toObject(includeInstance, f),
    sharedv4ServiceSpec: (f = msg.getSharedv4ServiceSpec()) && proto.openstorage.api.Sharedv4ServiceSpec.toObject(includeInstance, f),
    sharedv4Spec: (f = msg.getSharedv4Spec()) && proto.openstorage.api.Sharedv4Spec.toObject(includeInstance, f),
    autoFstrim: jspb.Message.getBooleanFieldWithDefault(msg, 39, false),
    ioThrottle: (f = msg.getIoThrottle()) && proto.openstorage.api.IoThrottle.toObject(includeInstance, f),
    readahead: jspb.Message.getBooleanFieldWithDefault(msg, 41, false),
    winshare: jspb.Message.getBooleanFieldWithDefault(msg, 42, false),
    nearSyncReplicationStrategy: jspb.Message.getFieldWithDefault(msg, 43, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeSpecUpdate}
 */
proto.openstorage.api.VolumeSpecUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeSpecUpdate;
  return proto.openstorage.api.VolumeSpecUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeSpecUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeSpecUpdate}
 */
proto.openstorage.api.VolumeSpecUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHaLevel(value);
      break;
    case 6:
      var value = /** @type {!proto.openstorage.api.CosType} */ (reader.readEnum());
      msg.setCos(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.IoProfile} */ (reader.readEnum());
      msg.setIoProfile(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDedupe(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSnapshotInterval(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShared(value);
      break;
    case 12:
      var value = new proto.openstorage.api.ReplicaSet;
      reader.readMessage(value,proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader);
      msg.setReplicaSet(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassphrase(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotSchedule(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScale(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSticky(value);
      break;
    case 19:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJournal(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSharedv4(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQueueDepth(value);
      break;
    case 26:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNodiscard(value);
      break;
    case 28:
      var value = new proto.openstorage.api.IoStrategy;
      reader.readMessage(value,proto.openstorage.api.IoStrategy.deserializeBinaryFromReader);
      msg.setIoStrategy(value);
      break;
    case 29:
      var value = new proto.openstorage.api.ExportSpec;
      reader.readMessage(value,proto.openstorage.api.ExportSpec.deserializeBinaryFromReader);
      msg.setExportSpec(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFastpath(value);
      break;
    case 31:
      var value = /** @type {!proto.openstorage.api.Xattr.Value} */ (reader.readEnum());
      msg.setXattr(value);
      break;
    case 32:
      var value = new proto.openstorage.api.ScanPolicy;
      reader.readMessage(value,proto.openstorage.api.ScanPolicy.deserializeBinaryFromReader);
      msg.setScanPolicy(value);
      break;
    case 33:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setMountOptSpec(value);
      break;
    case 34:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setSharedv4MountOptSpec(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProxyWrite(value);
      break;
    case 36:
      var value = new proto.openstorage.api.ProxySpec;
      reader.readMessage(value,proto.openstorage.api.ProxySpec.deserializeBinaryFromReader);
      msg.setProxySpec(value);
      break;
    case 37:
      var value = new proto.openstorage.api.Sharedv4ServiceSpec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader);
      msg.setSharedv4ServiceSpec(value);
      break;
    case 38:
      var value = new proto.openstorage.api.Sharedv4Spec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader);
      msg.setSharedv4Spec(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoFstrim(value);
      break;
    case 40:
      var value = new proto.openstorage.api.IoThrottle;
      reader.readMessage(value,proto.openstorage.api.IoThrottle.deserializeBinaryFromReader);
      msg.setIoThrottle(value);
      break;
    case 41:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadahead(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWinshare(value);
      break;
    case 43:
      var value = /** @type {!proto.openstorage.api.NearSyncReplicationStrategy} */ (reader.readEnum());
      msg.setNearSyncReplicationStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeSpecUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeSpecUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpecUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getReplicaSet();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.openstorage.api.ReplicaSet.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getIoStrategy();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.openstorage.api.IoStrategy.serializeBinaryToWriter
    );
  }
  f = message.getExportSpec();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.openstorage.api.ExportSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.Xattr.Value} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeEnum(
      31,
      f
    );
  }
  f = message.getScanPolicy();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.openstorage.api.ScanPolicy.serializeBinaryToWriter
    );
  }
  f = message.getMountOptSpec();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4MountOptSpec();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getProxySpec();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.openstorage.api.ProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4ServiceSpec();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4Spec();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeBool(
      39,
      f
    );
  }
  f = message.getIoThrottle();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.openstorage.api.IoThrottle.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeBool(
      41,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeBool(
      42,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.NearSyncReplicationStrategy} */ (jspb.Message.getField(message, 43));
  if (f != null) {
    writer.writeEnum(
      43,
      f
    );
  }
};


/**
 * optional uint64 size = 2;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setSize = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSize = function() {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 ha_level = 5;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getHaLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setHaLevel = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearHaLevel = function() {
  return jspb.Message.setOneofField(this, 5, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasHaLevel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CosType cos = 6;
 * @return {!proto.openstorage.api.CosType}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getCos = function() {
  return /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.openstorage.api.CosType} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setCos = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearCos = function() {
  return jspb.Message.setOneofField(this, 6, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasCos = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional IoProfile io_profile = 7;
 * @return {!proto.openstorage.api.IoProfile}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getIoProfile = function() {
  return /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.IoProfile} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setIoProfile = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearIoProfile = function() {
  return jspb.Message.setOneofField(this, 7, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasIoProfile = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool dedupe = 8;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getDedupe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setDedupe = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearDedupe = function() {
  return jspb.Message.setOneofField(this, 8, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasDedupe = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 snapshot_interval = 9;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSnapshotInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setSnapshotInterval = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[5], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSnapshotInterval = function() {
  return jspb.Message.setOneofField(this, 9, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[5], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSnapshotInterval = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool shared = 11;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getShared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setShared = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[6], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearShared = function() {
  return jspb.Message.setOneofField(this, 11, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[6], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasShared = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ReplicaSet replica_set = 12;
 * @return {?proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getReplicaSet = function() {
  return /** @type{?proto.openstorage.api.ReplicaSet} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ReplicaSet, 12));
};


/**
 * @param {?proto.openstorage.api.ReplicaSet|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setReplicaSet = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearReplicaSet = function() {
  return this.setReplicaSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasReplicaSet = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string passphrase = 15;
 * @return {string}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getPassphrase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setPassphrase = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[7], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearPassphrase = function() {
  return jspb.Message.setOneofField(this, 15, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[7], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasPassphrase = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string snapshot_schedule = 16;
 * @return {string}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSnapshotSchedule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setSnapshotSchedule = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[8], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSnapshotSchedule = function() {
  return jspb.Message.setOneofField(this, 16, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[8], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSnapshotSchedule = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 scale = 17;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setScale = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[9], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearScale = function() {
  return jspb.Message.setOneofField(this, 17, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[9], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasScale = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool sticky = 18;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSticky = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setSticky = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[10], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSticky = function() {
  return jspb.Message.setOneofField(this, 18, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[10], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSticky = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Group group = 19;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 19));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[11], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool journal = 23;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getJournal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setJournal = function(value) {
  return jspb.Message.setOneofField(this, 23, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[12], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearJournal = function() {
  return jspb.Message.setOneofField(this, 23, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[12], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasJournal = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool sharedv4 = 24;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setSharedv4 = function(value) {
  return jspb.Message.setOneofField(this, 24, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[13], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSharedv4 = function() {
  return jspb.Message.setOneofField(this, 24, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[13], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSharedv4 = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 queue_depth = 25;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getQueueDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setQueueDepth = function(value) {
  return jspb.Message.setOneofField(this, 25, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[14], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearQueueDepth = function() {
  return jspb.Message.setOneofField(this, 25, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[14], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasQueueDepth = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Ownership ownership = 26;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 26));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bool nodiscard = 27;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getNodiscard = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setNodiscard = function(value) {
  return jspb.Message.setOneofField(this, 27, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[15], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearNodiscard = function() {
  return jspb.Message.setOneofField(this, 27, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[15], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasNodiscard = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional IoStrategy io_strategy = 28;
 * @return {?proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getIoStrategy = function() {
  return /** @type{?proto.openstorage.api.IoStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoStrategy, 28));
};


/**
 * @param {?proto.openstorage.api.IoStrategy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setIoStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearIoStrategy = function() {
  return this.setIoStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasIoStrategy = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional ExportSpec export_spec = 29;
 * @return {?proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getExportSpec = function() {
  return /** @type{?proto.openstorage.api.ExportSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ExportSpec, 29));
};


/**
 * @param {?proto.openstorage.api.ExportSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setExportSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[16], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearExportSpec = function() {
  return this.setExportSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasExportSpec = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool fastpath = 30;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getFastpath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setFastpath = function(value) {
  return jspb.Message.setOneofField(this, 30, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[17], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearFastpath = function() {
  return jspb.Message.setOneofField(this, 30, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[17], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasFastpath = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Xattr.Value xattr = 31;
 * @return {!proto.openstorage.api.Xattr.Value}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getXattr = function() {
  return /** @type {!proto.openstorage.api.Xattr.Value} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {!proto.openstorage.api.Xattr.Value} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setXattr = function(value) {
  return jspb.Message.setOneofField(this, 31, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[18], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearXattr = function() {
  return jspb.Message.setOneofField(this, 31, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[18], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasXattr = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional ScanPolicy scan_policy = 32;
 * @return {?proto.openstorage.api.ScanPolicy}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getScanPolicy = function() {
  return /** @type{?proto.openstorage.api.ScanPolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ScanPolicy, 32));
};


/**
 * @param {?proto.openstorage.api.ScanPolicy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setScanPolicy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 32, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[19], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearScanPolicy = function() {
  return this.setScanPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasScanPolicy = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional MountOptions mount_opt_spec = 33;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getMountOptSpec = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 33));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setMountOptSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 33, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[20], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearMountOptSpec = function() {
  return this.setMountOptSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasMountOptSpec = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional MountOptions sharedv4_mount_opt_spec = 34;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4MountOptSpec = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 34));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setSharedv4MountOptSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 34, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[21], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSharedv4MountOptSpec = function() {
  return this.setSharedv4MountOptSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSharedv4MountOptSpec = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional bool proxy_write = 35;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getProxyWrite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setProxyWrite = function(value) {
  return jspb.Message.setOneofField(this, 35, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[22], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearProxyWrite = function() {
  return jspb.Message.setOneofField(this, 35, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[22], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasProxyWrite = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ProxySpec proxy_spec = 36;
 * @return {?proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getProxySpec = function() {
  return /** @type{?proto.openstorage.api.ProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ProxySpec, 36));
};


/**
 * @param {?proto.openstorage.api.ProxySpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setProxySpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 36, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[23], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearProxySpec = function() {
  return this.setProxySpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasProxySpec = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional Sharedv4ServiceSpec sharedv4_service_spec = 37;
 * @return {?proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4ServiceSpec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4ServiceSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4ServiceSpec, 37));
};


/**
 * @param {?proto.openstorage.api.Sharedv4ServiceSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setSharedv4ServiceSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 37, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[24], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSharedv4ServiceSpec = function() {
  return this.setSharedv4ServiceSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSharedv4ServiceSpec = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional Sharedv4Spec sharedv4_spec = 38;
 * @return {?proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getSharedv4Spec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4Spec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4Spec, 38));
};


/**
 * @param {?proto.openstorage.api.Sharedv4Spec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setSharedv4Spec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 38, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[25], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearSharedv4Spec = function() {
  return this.setSharedv4Spec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasSharedv4Spec = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional bool auto_fstrim = 39;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getAutoFstrim = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 39, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setAutoFstrim = function(value) {
  return jspb.Message.setOneofField(this, 39, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[26], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearAutoFstrim = function() {
  return jspb.Message.setOneofField(this, 39, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[26], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasAutoFstrim = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional IoThrottle io_throttle = 40;
 * @return {?proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getIoThrottle = function() {
  return /** @type{?proto.openstorage.api.IoThrottle} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoThrottle, 40));
};


/**
 * @param {?proto.openstorage.api.IoThrottle|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
*/
proto.openstorage.api.VolumeSpecUpdate.prototype.setIoThrottle = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[27], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearIoThrottle = function() {
  return this.setIoThrottle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasIoThrottle = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional bool readahead = 41;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getReadahead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 41, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setReadahead = function(value) {
  return jspb.Message.setOneofField(this, 41, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[28], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearReadahead = function() {
  return jspb.Message.setOneofField(this, 41, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[28], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasReadahead = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional bool winshare = 42;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getWinshare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setWinshare = function(value) {
  return jspb.Message.setOneofField(this, 42, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[29], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearWinshare = function() {
  return jspb.Message.setOneofField(this, 42, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[29], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasWinshare = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional NearSyncReplicationStrategy near_sync_replication_strategy = 43;
 * @return {!proto.openstorage.api.NearSyncReplicationStrategy}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.getNearSyncReplicationStrategy = function() {
  return /** @type {!proto.openstorage.api.NearSyncReplicationStrategy} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {!proto.openstorage.api.NearSyncReplicationStrategy} value
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.setNearSyncReplicationStrategy = function(value) {
  return jspb.Message.setOneofField(this, 43, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[30], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecUpdate} returns this
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.clearNearSyncReplicationStrategy = function() {
  return jspb.Message.setOneofField(this, 43, proto.openstorage.api.VolumeSpecUpdate.oneofGroups_[30], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecUpdate.prototype.hasNearSyncReplicationStrategy = function() {
  return jspb.Message.getField(this, 43) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.VolumeSpecPolicy.oneofGroups_ = [[1],[2],[3],[4],[5],[6],[8],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[54],[56],[57],[58],[59],[60],[61],[62],[63],[64],[65],[66],[67],[68]];

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.SizeOptCase = {
  SIZE_OPT_NOT_SET: 0,
  SIZE: 1
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.SizeOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSizeOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.SizeOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.HaLevelOptCase = {
  HA_LEVEL_OPT_NOT_SET: 0,
  HA_LEVEL: 2
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.HaLevelOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getHaLevelOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.HaLevelOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.CosOptCase = {
  COS_OPT_NOT_SET: 0,
  COS: 3
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.CosOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getCosOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.CosOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.IoProfileOptCase = {
  IO_PROFILE_OPT_NOT_SET: 0,
  IO_PROFILE: 4
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.IoProfileOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getIoProfileOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.IoProfileOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.DedupeOptCase = {
  DEDUPE_OPT_NOT_SET: 0,
  DEDUPE: 5
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.DedupeOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getDedupeOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.DedupeOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[4]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.SnapshotIntervalOptCase = {
  SNAPSHOT_INTERVAL_OPT_NOT_SET: 0,
  SNAPSHOT_INTERVAL: 6
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.SnapshotIntervalOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSnapshotIntervalOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.SnapshotIntervalOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[5]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.SharedOptCase = {
  SHARED_OPT_NOT_SET: 0,
  SHARED: 8
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.SharedOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.SharedOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[6]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.PassphraseOptCase = {
  PASSPHRASE_OPT_NOT_SET: 0,
  PASSPHRASE: 10
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.PassphraseOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getPassphraseOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.PassphraseOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[7]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.SnapshotScheduleOptCase = {
  SNAPSHOT_SCHEDULE_OPT_NOT_SET: 0,
  SNAPSHOT_SCHEDULE: 11
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.SnapshotScheduleOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSnapshotScheduleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.SnapshotScheduleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[8]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ScaleOptCase = {
  SCALE_OPT_NOT_SET: 0,
  SCALE: 12
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ScaleOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getScaleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ScaleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[9]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.StickyOptCase = {
  STICKY_OPT_NOT_SET: 0,
  STICKY: 13
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.StickyOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getStickyOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.StickyOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[10]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.GroupOptCase = {
  GROUP_OPT_NOT_SET: 0,
  GROUP: 14
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.GroupOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getGroupOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.GroupOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[11]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.JournalOptCase = {
  JOURNAL_OPT_NOT_SET: 0,
  JOURNAL: 15
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.JournalOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getJournalOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.JournalOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[12]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.Sharedv4OptCase = {
  SHAREDV4_OPT_NOT_SET: 0,
  SHAREDV4: 16
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.Sharedv4OptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4OptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.Sharedv4OptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[13]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.QueueDepthOptCase = {
  QUEUE_DEPTH_OPT_NOT_SET: 0,
  QUEUE_DEPTH: 17
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.QueueDepthOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getQueueDepthOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.QueueDepthOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[14]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.EncryptedOptCase = {
  ENCRYPTED_OPT_NOT_SET: 0,
  ENCRYPTED: 18
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.EncryptedOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getEncryptedOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.EncryptedOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[15]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.AggregationLevelOptCase = {
  AGGREGATION_LEVEL_OPT_NOT_SET: 0,
  AGGREGATION_LEVEL: 19
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.AggregationLevelOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getAggregationLevelOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.AggregationLevelOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[16]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.NodiscardOptCase = {
  NODISCARD_OPT_NOT_SET: 0,
  NODISCARD: 54
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.NodiscardOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getNodiscardOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.NodiscardOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[17]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ExportSpecOptCase = {
  EXPORT_SPEC_OPT_NOT_SET: 0,
  EXPORT_SPEC: 56
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ExportSpecOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getExportSpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ExportSpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[18]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ScanPolicyOptCase = {
  SCAN_POLICY_OPT_NOT_SET: 0,
  SCAN_POLICY: 57
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ScanPolicyOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getScanPolicyOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ScanPolicyOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[19]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.MountOptCase = {
  MOUNT_OPT_NOT_SET: 0,
  MOUNT_OPT_SPEC: 58
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.MountOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getMountOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.MountOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[20]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.Sharedv4MountOptCase = {
  SHAREDV4_MOUNT_OPT_NOT_SET: 0,
  SHAREDV4_MOUNT_OPT_SPEC: 59
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.Sharedv4MountOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4MountOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.Sharedv4MountOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[21]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ProxyWriteOptCase = {
  PROXY_WRITE_OPT_NOT_SET: 0,
  PROXY_WRITE: 60
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ProxyWriteOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getProxyWriteOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ProxyWriteOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[22]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ProxySpecOptCase = {
  PROXY_SPEC_OPT_NOT_SET: 0,
  PROXY_SPEC: 61
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ProxySpecOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getProxySpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ProxySpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[23]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.FastpathOptCase = {
  FASTPATH_OPT_NOT_SET: 0,
  FASTPATH: 62
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.FastpathOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getFastpathOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.FastpathOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[24]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.Sharedv4ServiceSpecOptCase = {
  SHAREDV4_SERVICE_SPEC_OPT_NOT_SET: 0,
  SHAREDV4_SERVICE_SPEC: 63
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.Sharedv4ServiceSpecOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4ServiceSpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.Sharedv4ServiceSpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[25]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.Sharedv4SpecOptCase = {
  SHAREDV4_SPEC_OPT_NOT_SET: 0,
  SHAREDV4_SPEC: 64
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.Sharedv4SpecOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4SpecOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.Sharedv4SpecOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[26]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.AutoFstrimOptCase = {
  AUTO_FSTRIM_OPT_NOT_SET: 0,
  AUTO_FSTRIM: 65
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.AutoFstrimOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getAutoFstrimOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.AutoFstrimOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[27]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.IoThrottleOptCase = {
  IO_THROTTLE_OPT_NOT_SET: 0,
  IO_THROTTLE: 66
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.IoThrottleOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getIoThrottleOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.IoThrottleOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[28]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.ReadaheadOptCase = {
  READAHEAD_OPT_NOT_SET: 0,
  READAHEAD: 67
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.ReadaheadOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getReadaheadOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.ReadaheadOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[29]));
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.WinshareOptCase = {
  WINSHARE_OPT_NOT_SET: 0,
  WINSHARE: 68
};

/**
 * @return {proto.openstorage.api.VolumeSpecPolicy.WinshareOptCase}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getWinshareOptCase = function() {
  return /** @type {proto.openstorage.api.VolumeSpecPolicy.WinshareOptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[30]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeSpecPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeSpecPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpecPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    haLevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cos: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ioProfile: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dedupe: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    snapshotInterval: jspb.Message.getFieldWithDefault(msg, 6, 0),
    volumeLabelsMap: (f = msg.getVolumeLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    shared: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    replicaSet: (f = msg.getReplicaSet()) && proto.openstorage.api.ReplicaSet.toObject(includeInstance, f),
    passphrase: jspb.Message.getFieldWithDefault(msg, 10, ""),
    snapshotSchedule: jspb.Message.getFieldWithDefault(msg, 11, ""),
    scale: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sticky: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    journal: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    sharedv4: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    queueDepth: jspb.Message.getFieldWithDefault(msg, 17, 0),
    encrypted: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    aggregationLevel: jspb.Message.getFieldWithDefault(msg, 19, 0),
    sizeOperator: jspb.Message.getFieldWithDefault(msg, 50, 0),
    haLevelOperator: jspb.Message.getFieldWithDefault(msg, 51, 0),
    scaleOperator: jspb.Message.getFieldWithDefault(msg, 52, 0),
    snapshotIntervalOperator: jspb.Message.getFieldWithDefault(msg, 53, 0),
    nodiscard: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    ioStrategy: (f = msg.getIoStrategy()) && proto.openstorage.api.IoStrategy.toObject(includeInstance, f),
    exportSpec: (f = msg.getExportSpec()) && proto.openstorage.api.ExportSpec.toObject(includeInstance, f),
    scanPolicy: (f = msg.getScanPolicy()) && proto.openstorage.api.ScanPolicy.toObject(includeInstance, f),
    mountOptSpec: (f = msg.getMountOptSpec()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    sharedv4MountOptSpec: (f = msg.getSharedv4MountOptSpec()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    proxyWrite: jspb.Message.getBooleanFieldWithDefault(msg, 60, false),
    proxySpec: (f = msg.getProxySpec()) && proto.openstorage.api.ProxySpec.toObject(includeInstance, f),
    fastpath: jspb.Message.getBooleanFieldWithDefault(msg, 62, false),
    sharedv4ServiceSpec: (f = msg.getSharedv4ServiceSpec()) && proto.openstorage.api.Sharedv4ServiceSpec.toObject(includeInstance, f),
    sharedv4Spec: (f = msg.getSharedv4Spec()) && proto.openstorage.api.Sharedv4Spec.toObject(includeInstance, f),
    autoFstrim: jspb.Message.getBooleanFieldWithDefault(msg, 65, false),
    ioThrottle: (f = msg.getIoThrottle()) && proto.openstorage.api.IoThrottle.toObject(includeInstance, f),
    readahead: jspb.Message.getBooleanFieldWithDefault(msg, 67, false),
    winshare: jspb.Message.getBooleanFieldWithDefault(msg, 68, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeSpecPolicy}
 */
proto.openstorage.api.VolumeSpecPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeSpecPolicy;
  return proto.openstorage.api.VolumeSpecPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeSpecPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeSpecPolicy}
 */
proto.openstorage.api.VolumeSpecPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHaLevel(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.CosType} */ (reader.readEnum());
      msg.setCos(value);
      break;
    case 4:
      var value = /** @type {!proto.openstorage.api.IoProfile} */ (reader.readEnum());
      msg.setIoProfile(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDedupe(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSnapshotInterval(value);
      break;
    case 7:
      var value = msg.getVolumeLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShared(value);
      break;
    case 9:
      var value = new proto.openstorage.api.ReplicaSet;
      reader.readMessage(value,proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader);
      msg.setReplicaSet(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassphrase(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotSchedule(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScale(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSticky(value);
      break;
    case 14:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJournal(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSharedv4(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQueueDepth(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncrypted(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAggregationLevel(value);
      break;
    case 50:
      var value = /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (reader.readEnum());
      msg.setSizeOperator(value);
      break;
    case 51:
      var value = /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (reader.readEnum());
      msg.setHaLevelOperator(value);
      break;
    case 52:
      var value = /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (reader.readEnum());
      msg.setScaleOperator(value);
      break;
    case 53:
      var value = /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (reader.readEnum());
      msg.setSnapshotIntervalOperator(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNodiscard(value);
      break;
    case 55:
      var value = new proto.openstorage.api.IoStrategy;
      reader.readMessage(value,proto.openstorage.api.IoStrategy.deserializeBinaryFromReader);
      msg.setIoStrategy(value);
      break;
    case 56:
      var value = new proto.openstorage.api.ExportSpec;
      reader.readMessage(value,proto.openstorage.api.ExportSpec.deserializeBinaryFromReader);
      msg.setExportSpec(value);
      break;
    case 57:
      var value = new proto.openstorage.api.ScanPolicy;
      reader.readMessage(value,proto.openstorage.api.ScanPolicy.deserializeBinaryFromReader);
      msg.setScanPolicy(value);
      break;
    case 58:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setMountOptSpec(value);
      break;
    case 59:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setSharedv4MountOptSpec(value);
      break;
    case 60:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProxyWrite(value);
      break;
    case 61:
      var value = new proto.openstorage.api.ProxySpec;
      reader.readMessage(value,proto.openstorage.api.ProxySpec.deserializeBinaryFromReader);
      msg.setProxySpec(value);
      break;
    case 62:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFastpath(value);
      break;
    case 63:
      var value = new proto.openstorage.api.Sharedv4ServiceSpec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader);
      msg.setSharedv4ServiceSpec(value);
      break;
    case 64:
      var value = new proto.openstorage.api.Sharedv4Spec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader);
      msg.setSharedv4Spec(value);
      break;
    case 65:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoFstrim(value);
      break;
    case 66:
      var value = new proto.openstorage.api.IoThrottle;
      reader.readMessage(value,proto.openstorage.api.IoThrottle.deserializeBinaryFromReader);
      msg.setIoThrottle(value);
      break;
    case 67:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadahead(value);
      break;
    case 68:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWinshare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeSpecPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeSpecPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSpecPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getVolumeLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getReplicaSet();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.openstorage.api.ReplicaSet.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getSizeOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      50,
      f
    );
  }
  f = message.getHaLevelOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      51,
      f
    );
  }
  f = message.getScaleOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      52,
      f
    );
  }
  f = message.getSnapshotIntervalOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      53,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeBool(
      54,
      f
    );
  }
  f = message.getIoStrategy();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      proto.openstorage.api.IoStrategy.serializeBinaryToWriter
    );
  }
  f = message.getExportSpec();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      proto.openstorage.api.ExportSpec.serializeBinaryToWriter
    );
  }
  f = message.getScanPolicy();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      proto.openstorage.api.ScanPolicy.serializeBinaryToWriter
    );
  }
  f = message.getMountOptSpec();
  if (f != null) {
    writer.writeMessage(
      58,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4MountOptSpec();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeBool(
      60,
      f
    );
  }
  f = message.getProxySpec();
  if (f != null) {
    writer.writeMessage(
      61,
      f,
      proto.openstorage.api.ProxySpec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeBool(
      62,
      f
    );
  }
  f = message.getSharedv4ServiceSpec();
  if (f != null) {
    writer.writeMessage(
      63,
      f,
      proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4Spec();
  if (f != null) {
    writer.writeMessage(
      64,
      f,
      proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeBool(
      65,
      f
    );
  }
  f = message.getIoThrottle();
  if (f != null) {
    writer.writeMessage(
      66,
      f,
      proto.openstorage.api.IoThrottle.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeBool(
      67,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 68));
  if (f != null) {
    writer.writeBool(
      68,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.VolumeSpecPolicy.PolicyOp = {
  EQUAL: 0,
  MINIMUM: 1,
  MAXIMUM: 2
};

/**
 * optional uint64 size = 1;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSize = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSize = function() {
  return jspb.Message.setOneofField(this, 1, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 ha_level = 2;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getHaLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setHaLevel = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearHaLevel = function() {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasHaLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CosType cos = 3;
 * @return {!proto.openstorage.api.CosType}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getCos = function() {
  return /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.CosType} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setCos = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearCos = function() {
  return jspb.Message.setOneofField(this, 3, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasCos = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IoProfile io_profile = 4;
 * @return {!proto.openstorage.api.IoProfile}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getIoProfile = function() {
  return /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.openstorage.api.IoProfile} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setIoProfile = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearIoProfile = function() {
  return jspb.Message.setOneofField(this, 4, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasIoProfile = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool dedupe = 5;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getDedupe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setDedupe = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearDedupe = function() {
  return jspb.Message.setOneofField(this, 5, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasDedupe = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 snapshot_interval = 6;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSnapshotInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSnapshotInterval = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[5], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSnapshotInterval = function() {
  return jspb.Message.setOneofField(this, 6, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[5], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSnapshotInterval = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<string, string> volume_labels = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getVolumeLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearVolumeLabelsMap = function() {
  this.getVolumeLabelsMap().clear();
  return this;};


/**
 * optional bool shared = 8;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getShared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setShared = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[6], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearShared = function() {
  return jspb.Message.setOneofField(this, 8, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[6], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasShared = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ReplicaSet replica_set = 9;
 * @return {?proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getReplicaSet = function() {
  return /** @type{?proto.openstorage.api.ReplicaSet} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ReplicaSet, 9));
};


/**
 * @param {?proto.openstorage.api.ReplicaSet|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setReplicaSet = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearReplicaSet = function() {
  return this.setReplicaSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasReplicaSet = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string passphrase = 10;
 * @return {string}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getPassphrase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setPassphrase = function(value) {
  return jspb.Message.setOneofField(this, 10, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[7], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearPassphrase = function() {
  return jspb.Message.setOneofField(this, 10, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[7], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasPassphrase = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string snapshot_schedule = 11;
 * @return {string}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSnapshotSchedule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSnapshotSchedule = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[8], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSnapshotSchedule = function() {
  return jspb.Message.setOneofField(this, 11, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[8], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSnapshotSchedule = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 scale = 12;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setScale = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[9], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearScale = function() {
  return jspb.Message.setOneofField(this, 12, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[9], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasScale = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool sticky = 13;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSticky = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSticky = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[10], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSticky = function() {
  return jspb.Message.setOneofField(this, 13, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[10], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSticky = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Group group = 14;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 14));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[11], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool journal = 15;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getJournal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setJournal = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[12], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearJournal = function() {
  return jspb.Message.setOneofField(this, 15, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[12], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasJournal = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool sharedv4 = 16;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSharedv4 = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[13], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSharedv4 = function() {
  return jspb.Message.setOneofField(this, 16, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[13], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSharedv4 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 queue_depth = 17;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getQueueDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setQueueDepth = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[14], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearQueueDepth = function() {
  return jspb.Message.setOneofField(this, 17, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[14], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasQueueDepth = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool encrypted = 18;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setEncrypted = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[15], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearEncrypted = function() {
  return jspb.Message.setOneofField(this, 18, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[15], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasEncrypted = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 aggregation_level = 19;
 * @return {number}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getAggregationLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setAggregationLevel = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[16], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearAggregationLevel = function() {
  return jspb.Message.setOneofField(this, 19, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[16], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasAggregationLevel = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional PolicyOp size_operator = 50;
 * @return {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSizeOperator = function() {
  return /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSizeOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 50, value);
};


/**
 * optional PolicyOp ha_level_operator = 51;
 * @return {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getHaLevelOperator = function() {
  return /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setHaLevelOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 51, value);
};


/**
 * optional PolicyOp scale_operator = 52;
 * @return {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getScaleOperator = function() {
  return /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setScaleOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 52, value);
};


/**
 * optional PolicyOp snapshot_interval_operator = 53;
 * @return {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSnapshotIntervalOperator = function() {
  return /** @type {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeSpecPolicy.PolicyOp} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setSnapshotIntervalOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 53, value);
};


/**
 * optional bool nodiscard = 54;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getNodiscard = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setNodiscard = function(value) {
  return jspb.Message.setOneofField(this, 54, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[17], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearNodiscard = function() {
  return jspb.Message.setOneofField(this, 54, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[17], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasNodiscard = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional IoStrategy io_strategy = 55;
 * @return {?proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getIoStrategy = function() {
  return /** @type{?proto.openstorage.api.IoStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoStrategy, 55));
};


/**
 * @param {?proto.openstorage.api.IoStrategy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setIoStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearIoStrategy = function() {
  return this.setIoStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasIoStrategy = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional ExportSpec export_spec = 56;
 * @return {?proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getExportSpec = function() {
  return /** @type{?proto.openstorage.api.ExportSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ExportSpec, 56));
};


/**
 * @param {?proto.openstorage.api.ExportSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setExportSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 56, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[18], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearExportSpec = function() {
  return this.setExportSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasExportSpec = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional ScanPolicy scan_policy = 57;
 * @return {?proto.openstorage.api.ScanPolicy}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getScanPolicy = function() {
  return /** @type{?proto.openstorage.api.ScanPolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ScanPolicy, 57));
};


/**
 * @param {?proto.openstorage.api.ScanPolicy|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setScanPolicy = function(value) {
  return jspb.Message.setOneofWrapperField(this, 57, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[19], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearScanPolicy = function() {
  return this.setScanPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasScanPolicy = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional MountOptions mount_opt_spec = 58;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getMountOptSpec = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 58));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setMountOptSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 58, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[20], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearMountOptSpec = function() {
  return this.setMountOptSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasMountOptSpec = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional MountOptions sharedv4_mount_opt_spec = 59;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4MountOptSpec = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 59));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setSharedv4MountOptSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 59, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[21], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSharedv4MountOptSpec = function() {
  return this.setSharedv4MountOptSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSharedv4MountOptSpec = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional bool proxy_write = 60;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getProxyWrite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 60, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setProxyWrite = function(value) {
  return jspb.Message.setOneofField(this, 60, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[22], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearProxyWrite = function() {
  return jspb.Message.setOneofField(this, 60, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[22], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasProxyWrite = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional ProxySpec proxy_spec = 61;
 * @return {?proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getProxySpec = function() {
  return /** @type{?proto.openstorage.api.ProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ProxySpec, 61));
};


/**
 * @param {?proto.openstorage.api.ProxySpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setProxySpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 61, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[23], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearProxySpec = function() {
  return this.setProxySpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasProxySpec = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional bool fastpath = 62;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getFastpath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 62, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setFastpath = function(value) {
  return jspb.Message.setOneofField(this, 62, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[24], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearFastpath = function() {
  return jspb.Message.setOneofField(this, 62, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[24], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasFastpath = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional Sharedv4ServiceSpec sharedv4_service_spec = 63;
 * @return {?proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4ServiceSpec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4ServiceSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4ServiceSpec, 63));
};


/**
 * @param {?proto.openstorage.api.Sharedv4ServiceSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setSharedv4ServiceSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 63, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[25], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSharedv4ServiceSpec = function() {
  return this.setSharedv4ServiceSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSharedv4ServiceSpec = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional Sharedv4Spec sharedv4_spec = 64;
 * @return {?proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getSharedv4Spec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4Spec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4Spec, 64));
};


/**
 * @param {?proto.openstorage.api.Sharedv4Spec|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setSharedv4Spec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 64, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[26], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearSharedv4Spec = function() {
  return this.setSharedv4Spec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasSharedv4Spec = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional bool auto_fstrim = 65;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getAutoFstrim = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 65, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setAutoFstrim = function(value) {
  return jspb.Message.setOneofField(this, 65, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[27], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearAutoFstrim = function() {
  return jspb.Message.setOneofField(this, 65, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[27], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasAutoFstrim = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional IoThrottle io_throttle = 66;
 * @return {?proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getIoThrottle = function() {
  return /** @type{?proto.openstorage.api.IoThrottle} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoThrottle, 66));
};


/**
 * @param {?proto.openstorage.api.IoThrottle|undefined} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
*/
proto.openstorage.api.VolumeSpecPolicy.prototype.setIoThrottle = function(value) {
  return jspb.Message.setOneofWrapperField(this, 66, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[28], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearIoThrottle = function() {
  return this.setIoThrottle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasIoThrottle = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional bool readahead = 67;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getReadahead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 67, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setReadahead = function(value) {
  return jspb.Message.setOneofField(this, 67, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[29], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearReadahead = function() {
  return jspb.Message.setOneofField(this, 67, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[29], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasReadahead = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional bool winshare = 68;
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.getWinshare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 68, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.setWinshare = function(value) {
  return jspb.Message.setOneofField(this, 68, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[30], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.VolumeSpecPolicy} returns this
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.clearWinshare = function() {
  return jspb.Message.setOneofField(this, 68, proto.openstorage.api.VolumeSpecPolicy.oneofGroups_[30], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSpecPolicy.prototype.hasWinshare = function() {
  return jspb.Message.getField(this, 68) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ReplicaSet.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ReplicaSet.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ReplicaSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ReplicaSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ReplicaSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    poolUuidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    id: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.ReplicaSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ReplicaSet;
  return proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ReplicaSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPoolUuids(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ReplicaSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ReplicaSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ReplicaSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ReplicaSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPoolUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated string nodes = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.ReplicaSet.prototype.getNodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.setNodesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.addNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * repeated string pool_uuids = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.ReplicaSet.prototype.getPoolUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.setPoolUuidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.addPoolUuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.clearPoolUuidsList = function() {
  return this.setPoolUuidsList([]);
};


/**
 * optional uint32 id = 3;
 * @return {number}
 */
proto.openstorage.api.ReplicaSet.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ReplicaSet} returns this
 */
proto.openstorage.api.ReplicaSet.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.RuntimeStateMap.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.RuntimeStateMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.RuntimeStateMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RuntimeStateMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeStateMap: (f = msg.getRuntimeStateMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.RuntimeStateMap}
 */
proto.openstorage.api.RuntimeStateMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.RuntimeStateMap;
  return proto.openstorage.api.RuntimeStateMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.RuntimeStateMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.RuntimeStateMap}
 */
proto.openstorage.api.RuntimeStateMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRuntimeStateMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.RuntimeStateMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.RuntimeStateMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.RuntimeStateMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RuntimeStateMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuntimeStateMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> runtime_state = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.RuntimeStateMap.prototype.getRuntimeStateMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.RuntimeStateMap} returns this
 */
proto.openstorage.api.RuntimeStateMap.prototype.clearRuntimeStateMap = function() {
  this.getRuntimeStateMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Ownership.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Ownership.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Ownership} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    acls: (f = msg.getAcls()) && proto.openstorage.api.Ownership.AccessControl.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Ownership}
 */
proto.openstorage.api.Ownership.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Ownership;
  return proto.openstorage.api.Ownership.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Ownership} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Ownership}
 */
proto.openstorage.api.Ownership.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 2:
      var value = new proto.openstorage.api.Ownership.AccessControl;
      reader.readMessage(value,proto.openstorage.api.Ownership.AccessControl.deserializeBinaryFromReader);
      msg.setAcls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Ownership.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Ownership.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Ownership} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAcls();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.Ownership.AccessControl.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.Ownership.AccessType = {
  READ: 0,
  WRITE: 1,
  ADMIN: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Ownership.PublicAccessControl.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Ownership.PublicAccessControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Ownership.PublicAccessControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.PublicAccessControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Ownership.PublicAccessControl}
 */
proto.openstorage.api.Ownership.PublicAccessControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Ownership.PublicAccessControl;
  return proto.openstorage.api.Ownership.PublicAccessControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Ownership.PublicAccessControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Ownership.PublicAccessControl}
 */
proto.openstorage.api.Ownership.PublicAccessControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.Ownership.AccessType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Ownership.PublicAccessControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Ownership.PublicAccessControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Ownership.PublicAccessControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.PublicAccessControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional AccessType type = 1;
 * @return {!proto.openstorage.api.Ownership.AccessType}
 */
proto.openstorage.api.Ownership.PublicAccessControl.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Ownership.AccessType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.Ownership.AccessType} value
 * @return {!proto.openstorage.api.Ownership.PublicAccessControl} returns this
 */
proto.openstorage.api.Ownership.PublicAccessControl.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Ownership.AccessControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Ownership.AccessControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.AccessControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsMap: (f = msg.getGroupsMap()) ? f.toObject(includeInstance, undefined) : [],
    collaboratorsMap: (f = msg.getCollaboratorsMap()) ? f.toObject(includeInstance, undefined) : [],
    pb_public: (f = msg.getPublic()) && proto.openstorage.api.Ownership.PublicAccessControl.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Ownership.AccessControl}
 */
proto.openstorage.api.Ownership.AccessControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Ownership.AccessControl;
  return proto.openstorage.api.Ownership.AccessControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Ownership.AccessControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Ownership.AccessControl}
 */
proto.openstorage.api.Ownership.AccessControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getGroupsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 2:
      var value = msg.getCollaboratorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 3:
      var value = new proto.openstorage.api.Ownership.PublicAccessControl;
      reader.readMessage(value,proto.openstorage.api.Ownership.PublicAccessControl.deserializeBinaryFromReader);
      msg.setPublic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Ownership.AccessControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Ownership.AccessControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Ownership.AccessControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getCollaboratorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getPublic();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.Ownership.PublicAccessControl.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, AccessType> groups = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.Ownership.AccessType>}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.getGroupsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.Ownership.AccessType>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.Ownership.AccessControl} returns this
 */
proto.openstorage.api.Ownership.AccessControl.prototype.clearGroupsMap = function() {
  this.getGroupsMap().clear();
  return this;};


/**
 * map<string, AccessType> collaborators = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.Ownership.AccessType>}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.getCollaboratorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.Ownership.AccessType>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.Ownership.AccessControl} returns this
 */
proto.openstorage.api.Ownership.AccessControl.prototype.clearCollaboratorsMap = function() {
  this.getCollaboratorsMap().clear();
  return this;};


/**
 * optional PublicAccessControl public = 3;
 * @return {?proto.openstorage.api.Ownership.PublicAccessControl}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.getPublic = function() {
  return /** @type{?proto.openstorage.api.Ownership.PublicAccessControl} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership.PublicAccessControl, 3));
};


/**
 * @param {?proto.openstorage.api.Ownership.PublicAccessControl|undefined} value
 * @return {!proto.openstorage.api.Ownership.AccessControl} returns this
*/
proto.openstorage.api.Ownership.AccessControl.prototype.setPublic = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Ownership.AccessControl} returns this
 */
proto.openstorage.api.Ownership.AccessControl.prototype.clearPublic = function() {
  return this.setPublic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Ownership.AccessControl.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string owner = 1;
 * @return {string}
 */
proto.openstorage.api.Ownership.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Ownership} returns this
 */
proto.openstorage.api.Ownership.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AccessControl acls = 2;
 * @return {?proto.openstorage.api.Ownership.AccessControl}
 */
proto.openstorage.api.Ownership.prototype.getAcls = function() {
  return /** @type{?proto.openstorage.api.Ownership.AccessControl} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership.AccessControl, 2));
};


/**
 * @param {?proto.openstorage.api.Ownership.AccessControl|undefined} value
 * @return {!proto.openstorage.api.Ownership} returns this
*/
proto.openstorage.api.Ownership.prototype.setAcls = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Ownership} returns this
 */
proto.openstorage.api.Ownership.prototype.clearAcls = function() {
  return this.setAcls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Ownership.prototype.hasAcls = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.Volume.repeatedFields_ = [17,19,20,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Volume.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Volume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Volume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Volume.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: (f = msg.getSource()) && proto.openstorage.api.Source.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    readonly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    locator: (f = msg.getLocator()) && proto.openstorage.api.VolumeLocator.toObject(includeInstance, f),
    ctime: (f = msg.getCtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.openstorage.api.VolumeSpec.toObject(includeInstance, f),
    usage: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lastScan: (f = msg.getLastScan()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    format: jspb.Message.getFieldWithDefault(msg, 10, 0),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0),
    state: jspb.Message.getFieldWithDefault(msg, 12, 0),
    attachedOn: jspb.Message.getFieldWithDefault(msg, 13, ""),
    attachedState: jspb.Message.getFieldWithDefault(msg, 14, 0),
    devicePath: jspb.Message.getFieldWithDefault(msg, 15, ""),
    secureDevicePath: jspb.Message.getFieldWithDefault(msg, 16, ""),
    attachPathList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    attachInfoMap: (f = msg.getAttachInfoMap()) ? f.toObject(includeInstance, undefined) : [],
    replicaSetsList: jspb.Message.toObjectList(msg.getReplicaSetsList(),
    proto.openstorage.api.ReplicaSet.toObject, includeInstance),
    runtimeStateList: jspb.Message.toObjectList(msg.getRuntimeStateList(),
    proto.openstorage.api.RuntimeStateMap.toObject, includeInstance),
    error: jspb.Message.getFieldWithDefault(msg, 21, ""),
    volumeConsumersList: jspb.Message.toObjectList(msg.getVolumeConsumersList(),
    proto.openstorage.api.VolumeConsumer.toObject, includeInstance),
    fsResizeRequired: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    attachTime: (f = msg.getAttachTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    detachTime: (f = msg.getDetachTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fpconfig: (f = msg.getFpconfig()) && proto.openstorage.api.FastpathConfig.toObject(includeInstance, f),
    lastScanFix: (f = msg.getLastScanFix()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastScanStatus: jspb.Message.getFieldWithDefault(msg, 28, 0),
    mountOptions: (f = msg.getMountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    sharedv4MountOptions: (f = msg.getSharedv4MountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    derivedIoProfile: jspb.Message.getFieldWithDefault(msg, 31, 0),
    inTrashcan: jspb.Message.getBooleanFieldWithDefault(msg, 32, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Volume}
 */
proto.openstorage.api.Volume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Volume;
  return proto.openstorage.api.Volume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Volume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Volume}
 */
proto.openstorage.api.Volume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.Source;
      reader.readMessage(value,proto.openstorage.api.Source.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 3:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadonly(value);
      break;
    case 5:
      var value = new proto.openstorage.api.VolumeLocator;
      reader.readMessage(value,proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCtime(value);
      break;
    case 7:
      var value = new proto.openstorage.api.VolumeSpec;
      reader.readMessage(value,proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsage(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastScan(value);
      break;
    case 10:
      var value = /** @type {!proto.openstorage.api.FSType} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 11:
      var value = /** @type {!proto.openstorage.api.VolumeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {!proto.openstorage.api.VolumeState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachedOn(value);
      break;
    case 14:
      var value = /** @type {!proto.openstorage.api.AttachState} */ (reader.readEnum());
      msg.setAttachedState(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicePath(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecureDevicePath(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttachPath(value);
      break;
    case 18:
      var value = msg.getAttachInfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 19:
      var value = new proto.openstorage.api.ReplicaSet;
      reader.readMessage(value,proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader);
      msg.addReplicaSets(value);
      break;
    case 20:
      var value = new proto.openstorage.api.RuntimeStateMap;
      reader.readMessage(value,proto.openstorage.api.RuntimeStateMap.deserializeBinaryFromReader);
      msg.addRuntimeState(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 22:
      var value = new proto.openstorage.api.VolumeConsumer;
      reader.readMessage(value,proto.openstorage.api.VolumeConsumer.deserializeBinaryFromReader);
      msg.addVolumeConsumers(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFsResizeRequired(value);
      break;
    case 24:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAttachTime(value);
      break;
    case 25:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDetachTime(value);
      break;
    case 26:
      var value = new proto.openstorage.api.FastpathConfig;
      reader.readMessage(value,proto.openstorage.api.FastpathConfig.deserializeBinaryFromReader);
      msg.setFpconfig(value);
      break;
    case 27:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastScanFix(value);
      break;
    case 28:
      var value = /** @type {!proto.openstorage.api.FilesystemHealthStatus} */ (reader.readEnum());
      msg.setLastScanStatus(value);
      break;
    case 29:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setMountOptions(value);
      break;
    case 30:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setSharedv4MountOptions(value);
      break;
    case 31:
      var value = /** @type {!proto.openstorage.api.IoProfile} */ (reader.readEnum());
      msg.setDerivedIoProfile(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInTrashcan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Volume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Volume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Volume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Volume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.Source.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.openstorage.api.VolumeLocator.serializeBinaryToWriter
    );
  }
  f = message.getCtime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.openstorage.api.VolumeSpec.serializeBinaryToWriter
    );
  }
  f = message.getUsage();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getLastScan();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getAttachedOn();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAttachedState();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getDevicePath();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSecureDevicePath();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAttachPathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getAttachInfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getReplicaSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.openstorage.api.ReplicaSet.serializeBinaryToWriter
    );
  }
  f = message.getRuntimeStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.openstorage.api.RuntimeStateMap.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getVolumeConsumersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.openstorage.api.VolumeConsumer.serializeBinaryToWriter
    );
  }
  f = message.getFsResizeRequired();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getAttachTime();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDetachTime();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFpconfig();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.openstorage.api.FastpathConfig.serializeBinaryToWriter
    );
  }
  f = message.getLastScanFix();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastScanStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      28,
      f
    );
  }
  f = message.getMountOptions();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4MountOptions();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getDerivedIoProfile();
  if (f !== 0.0) {
    writer.writeEnum(
      31,
      f
    );
  }
  f = message.getInTrashcan();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.Volume.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Source source = 2;
 * @return {?proto.openstorage.api.Source}
 */
proto.openstorage.api.Volume.prototype.getSource = function() {
  return /** @type{?proto.openstorage.api.Source} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Source, 2));
};


/**
 * @param {?proto.openstorage.api.Source|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Group group = 3;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.Volume.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 3));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool readonly = 4;
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional VolumeLocator locator = 5;
 * @return {?proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.Volume.prototype.getLocator = function() {
  return /** @type{?proto.openstorage.api.VolumeLocator} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeLocator, 5));
};


/**
 * @param {?proto.openstorage.api.VolumeLocator|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp ctime = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Volume.prototype.getCtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setCtime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearCtime = function() {
  return this.setCtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasCtime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional VolumeSpec spec = 7;
 * @return {?proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.Volume.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.VolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpec, 7));
};


/**
 * @param {?proto.openstorage.api.VolumeSpec|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 usage = 8;
 * @return {number}
 */
proto.openstorage.api.Volume.prototype.getUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp last_scan = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Volume.prototype.getLastScan = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setLastScan = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearLastScan = function() {
  return this.setLastScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasLastScan = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FSType format = 10;
 * @return {!proto.openstorage.api.FSType}
 */
proto.openstorage.api.Volume.prototype.getFormat = function() {
  return /** @type {!proto.openstorage.api.FSType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.openstorage.api.FSType} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional VolumeStatus status = 11;
 * @return {!proto.openstorage.api.VolumeStatus}
 */
proto.openstorage.api.Volume.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.VolumeStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeStatus} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional VolumeState state = 12;
 * @return {!proto.openstorage.api.VolumeState}
 */
proto.openstorage.api.Volume.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.VolumeState} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeState} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional string attached_on = 13;
 * @return {string}
 */
proto.openstorage.api.Volume.prototype.getAttachedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setAttachedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional AttachState attached_state = 14;
 * @return {!proto.openstorage.api.AttachState}
 */
proto.openstorage.api.Volume.prototype.getAttachedState = function() {
  return /** @type {!proto.openstorage.api.AttachState} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.openstorage.api.AttachState} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setAttachedState = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string device_path = 15;
 * @return {string}
 */
proto.openstorage.api.Volume.prototype.getDevicePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setDevicePath = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string secure_device_path = 16;
 * @return {string}
 */
proto.openstorage.api.Volume.prototype.getSecureDevicePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setSecureDevicePath = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * repeated string attach_path = 17;
 * @return {!Array<string>}
 */
proto.openstorage.api.Volume.prototype.getAttachPathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setAttachPathList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.addAttachPath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearAttachPathList = function() {
  return this.setAttachPathList([]);
};


/**
 * map<string, string> attach_info = 18;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.Volume.prototype.getAttachInfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 18, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearAttachInfoMap = function() {
  this.getAttachInfoMap().clear();
  return this;};


/**
 * repeated ReplicaSet replica_sets = 19;
 * @return {!Array<!proto.openstorage.api.ReplicaSet>}
 */
proto.openstorage.api.Volume.prototype.getReplicaSetsList = function() {
  return /** @type{!Array<!proto.openstorage.api.ReplicaSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.ReplicaSet, 19));
};


/**
 * @param {!Array<!proto.openstorage.api.ReplicaSet>} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setReplicaSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.openstorage.api.ReplicaSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.Volume.prototype.addReplicaSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.openstorage.api.ReplicaSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearReplicaSetsList = function() {
  return this.setReplicaSetsList([]);
};


/**
 * repeated RuntimeStateMap runtime_state = 20;
 * @return {!Array<!proto.openstorage.api.RuntimeStateMap>}
 */
proto.openstorage.api.Volume.prototype.getRuntimeStateList = function() {
  return /** @type{!Array<!proto.openstorage.api.RuntimeStateMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.RuntimeStateMap, 20));
};


/**
 * @param {!Array<!proto.openstorage.api.RuntimeStateMap>} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setRuntimeStateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.openstorage.api.RuntimeStateMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.RuntimeStateMap}
 */
proto.openstorage.api.Volume.prototype.addRuntimeState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.openstorage.api.RuntimeStateMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearRuntimeStateList = function() {
  return this.setRuntimeStateList([]);
};


/**
 * optional string error = 21;
 * @return {string}
 */
proto.openstorage.api.Volume.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated VolumeConsumer volume_consumers = 22;
 * @return {!Array<!proto.openstorage.api.VolumeConsumer>}
 */
proto.openstorage.api.Volume.prototype.getVolumeConsumersList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumeConsumer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumeConsumer, 22));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumeConsumer>} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setVolumeConsumersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.openstorage.api.VolumeConsumer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumeConsumer}
 */
proto.openstorage.api.Volume.prototype.addVolumeConsumers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.openstorage.api.VolumeConsumer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearVolumeConsumersList = function() {
  return this.setVolumeConsumersList([]);
};


/**
 * optional bool fs_resize_required = 23;
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.getFsResizeRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setFsResizeRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional google.protobuf.Timestamp attach_time = 24;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Volume.prototype.getAttachTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 24));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setAttachTime = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearAttachTime = function() {
  return this.setAttachTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasAttachTime = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional google.protobuf.Timestamp detach_time = 25;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Volume.prototype.getDetachTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 25));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setDetachTime = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearDetachTime = function() {
  return this.setDetachTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasDetachTime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional FastpathConfig fpConfig = 26;
 * @return {?proto.openstorage.api.FastpathConfig}
 */
proto.openstorage.api.Volume.prototype.getFpconfig = function() {
  return /** @type{?proto.openstorage.api.FastpathConfig} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.FastpathConfig, 26));
};


/**
 * @param {?proto.openstorage.api.FastpathConfig|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setFpconfig = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearFpconfig = function() {
  return this.setFpconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasFpconfig = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional google.protobuf.Timestamp last_scan_fix = 27;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Volume.prototype.getLastScanFix = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 27));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setLastScanFix = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearLastScanFix = function() {
  return this.setLastScanFix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasLastScanFix = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional FilesystemHealthStatus last_scan_status = 28;
 * @return {!proto.openstorage.api.FilesystemHealthStatus}
 */
proto.openstorage.api.Volume.prototype.getLastScanStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemHealthStatus} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemHealthStatus} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setLastScanStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 28, value);
};


/**
 * optional MountOptions mount_options = 29;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.Volume.prototype.getMountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 29));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setMountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearMountOptions = function() {
  return this.setMountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasMountOptions = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional MountOptions sharedv4_mount_options = 30;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.Volume.prototype.getSharedv4MountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 30));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.Volume} returns this
*/
proto.openstorage.api.Volume.prototype.setSharedv4MountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.clearSharedv4MountOptions = function() {
  return this.setSharedv4MountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.hasSharedv4MountOptions = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional IoProfile derived_io_profile = 31;
 * @return {!proto.openstorage.api.IoProfile}
 */
proto.openstorage.api.Volume.prototype.getDerivedIoProfile = function() {
  return /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {!proto.openstorage.api.IoProfile} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setDerivedIoProfile = function(value) {
  return jspb.Message.setProto3EnumField(this, 31, value);
};


/**
 * optional bool in_trashcan = 32;
 * @return {boolean}
 */
proto.openstorage.api.Volume.prototype.getInTrashcan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.Volume} returns this
 */
proto.openstorage.api.Volume.prototype.setInTrashcan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Stats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    reads: jspb.Message.getFieldWithDefault(msg, 1, 0),
    readMs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    readBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    writes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    writeMs: jspb.Message.getFieldWithDefault(msg, 5, 0),
    writeBytes: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ioProgress: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ioMs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    bytesUsed: jspb.Message.getFieldWithDefault(msg, 9, 0),
    intervalMs: jspb.Message.getFieldWithDefault(msg, 10, 0),
    discards: jspb.Message.getFieldWithDefault(msg, 11, 0),
    discardMs: jspb.Message.getFieldWithDefault(msg, 12, 0),
    discardBytes: jspb.Message.getFieldWithDefault(msg, 13, 0),
    uniqueBlocks: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Stats}
 */
proto.openstorage.api.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Stats;
  return proto.openstorage.api.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Stats}
 */
proto.openstorage.api.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReads(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadMs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadBytes(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWrites(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWriteMs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWriteBytes(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIoProgress(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIoMs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytesUsed(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIntervalMs(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDiscards(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDiscardMs(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDiscardBytes(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUniqueBlocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Stats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReads();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getReadMs();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getReadBytes();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getWrites();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getWriteMs();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getWriteBytes();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getIoProgress();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getIoMs();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getBytesUsed();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getIntervalMs();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getDiscards();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getDiscardMs();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getDiscardBytes();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getUniqueBlocks();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
};


/**
 * optional uint64 reads = 1;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getReads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setReads = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 read_ms = 2;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getReadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setReadMs = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 read_bytes = 3;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getReadBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setReadBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 writes = 4;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getWrites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setWrites = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 write_ms = 5;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getWriteMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setWriteMs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 write_bytes = 6;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getWriteBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setWriteBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 io_progress = 7;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getIoProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setIoProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 io_ms = 8;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getIoMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setIoMs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 bytes_used = 9;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getBytesUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setBytesUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 interval_ms = 10;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getIntervalMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setIntervalMs = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 discards = 11;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getDiscards = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setDiscards = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 discard_ms = 12;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getDiscardMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setDiscardMs = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 discard_bytes = 13;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getDiscardBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setDiscardBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 unique_blocks = 14;
 * @return {number}
 */
proto.openstorage.api.Stats.prototype.getUniqueBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Stats} returns this
 */
proto.openstorage.api.Stats.prototype.setUniqueBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CapacityUsageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CapacityUsageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CapacityUsageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CapacityUsageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    exclusiveBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sharedBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalBytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CapacityUsageInfo}
 */
proto.openstorage.api.CapacityUsageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CapacityUsageInfo;
  return proto.openstorage.api.CapacityUsageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CapacityUsageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CapacityUsageInfo}
 */
proto.openstorage.api.CapacityUsageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExclusiveBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSharedBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CapacityUsageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CapacityUsageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CapacityUsageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CapacityUsageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExclusiveBytes();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSharedBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTotalBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 exclusive_bytes = 1;
 * @return {number}
 */
proto.openstorage.api.CapacityUsageInfo.prototype.getExclusiveBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CapacityUsageInfo} returns this
 */
proto.openstorage.api.CapacityUsageInfo.prototype.setExclusiveBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 shared_bytes = 2;
 * @return {number}
 */
proto.openstorage.api.CapacityUsageInfo.prototype.getSharedBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CapacityUsageInfo} returns this
 */
proto.openstorage.api.CapacityUsageInfo.prototype.setSharedBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 total_bytes = 3;
 * @return {number}
 */
proto.openstorage.api.CapacityUsageInfo.prototype.getTotalBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CapacityUsageInfo} returns this
 */
proto.openstorage.api.CapacityUsageInfo.prototype.setTotalBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    poolUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exclusiveBytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalBytes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    localCloudSnapshot: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeUsage}
 */
proto.openstorage.api.VolumeUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeUsage;
  return proto.openstorage.api.VolumeUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeUsage}
 */
proto.openstorage.api.VolumeUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolUuid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExclusiveBytes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBytes(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalCloudSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExclusiveBytes();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTotalBytes();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getLocalCloudSnapshot();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeUsage.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string volume_name = 2;
 * @return {string}
 */
proto.openstorage.api.VolumeUsage.prototype.getVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_uuid = 3;
 * @return {string}
 */
proto.openstorage.api.VolumeUsage.prototype.getPoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setPoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 exclusive_bytes = 4;
 * @return {number}
 */
proto.openstorage.api.VolumeUsage.prototype.getExclusiveBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setExclusiveBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 total_bytes = 5;
 * @return {number}
 */
proto.openstorage.api.VolumeUsage.prototype.getTotalBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setTotalBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool local_cloud_snapshot = 6;
 * @return {boolean}
 */
proto.openstorage.api.VolumeUsage.prototype.getLocalCloudSnapshot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.VolumeUsage} returns this
 */
proto.openstorage.api.VolumeUsage.prototype.setLocalCloudSnapshot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumeUsageByNode.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeUsageByNode.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeUsageByNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeUsageByNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeUsageByNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeUsageList: jspb.Message.toObjectList(msg.getVolumeUsageList(),
    proto.openstorage.api.VolumeUsage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeUsageByNode}
 */
proto.openstorage.api.VolumeUsageByNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeUsageByNode;
  return proto.openstorage.api.VolumeUsageByNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeUsageByNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeUsageByNode}
 */
proto.openstorage.api.VolumeUsageByNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeUsage;
      reader.readMessage(value,proto.openstorage.api.VolumeUsage.deserializeBinaryFromReader);
      msg.addVolumeUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeUsageByNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeUsageByNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeUsageByNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeUsageByNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeUsageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.VolumeUsage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VolumeUsage volume_usage = 1;
 * @return {!Array<!proto.openstorage.api.VolumeUsage>}
 */
proto.openstorage.api.VolumeUsageByNode.prototype.getVolumeUsageList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumeUsage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumeUsage, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumeUsage>} value
 * @return {!proto.openstorage.api.VolumeUsageByNode} returns this
*/
proto.openstorage.api.VolumeUsageByNode.prototype.setVolumeUsageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.VolumeUsage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumeUsage}
 */
proto.openstorage.api.VolumeUsageByNode.prototype.addVolumeUsage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.VolumeUsage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumeUsageByNode} returns this
 */
proto.openstorage.api.VolumeUsageByNode.prototype.clearVolumeUsageList = function() {
  return this.setVolumeUsageList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeBytesUsed.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeBytesUsed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeBytesUsed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeBytesUsed.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeBytesUsed}
 */
proto.openstorage.api.VolumeBytesUsed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeBytesUsed;
  return proto.openstorage.api.VolumeBytesUsed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeBytesUsed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeBytesUsed}
 */
proto.openstorage.api.VolumeBytesUsed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeBytesUsed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeBytesUsed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeBytesUsed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeBytesUsed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeBytesUsed.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeBytesUsed} returns this
 */
proto.openstorage.api.VolumeBytesUsed.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 total_bytes = 2;
 * @return {number}
 */
proto.openstorage.api.VolumeBytesUsed.prototype.getTotalBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeBytesUsed} returns this
 */
proto.openstorage.api.VolumeBytesUsed.prototype.setTotalBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumeBytesUsedByNode.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeBytesUsedByNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeBytesUsedByNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeBytesUsedByNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volUsageList: jspb.Message.toObjectList(msg.getVolUsageList(),
    proto.openstorage.api.VolumeBytesUsed.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeBytesUsedByNode}
 */
proto.openstorage.api.VolumeBytesUsedByNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeBytesUsedByNode;
  return proto.openstorage.api.VolumeBytesUsedByNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeBytesUsedByNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeBytesUsedByNode}
 */
proto.openstorage.api.VolumeBytesUsedByNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeBytesUsed;
      reader.readMessage(value,proto.openstorage.api.VolumeBytesUsed.deserializeBinaryFromReader);
      msg.addVolUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeBytesUsedByNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeBytesUsedByNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeBytesUsedByNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolUsageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.VolumeBytesUsed.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeBytesUsedByNode} returns this
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated VolumeBytesUsed vol_usage = 2;
 * @return {!Array<!proto.openstorage.api.VolumeBytesUsed>}
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.getVolUsageList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumeBytesUsed>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumeBytesUsed, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumeBytesUsed>} value
 * @return {!proto.openstorage.api.VolumeBytesUsedByNode} returns this
*/
proto.openstorage.api.VolumeBytesUsedByNode.prototype.setVolUsageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.VolumeBytesUsed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumeBytesUsed}
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.addVolUsage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.VolumeBytesUsed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumeBytesUsedByNode} returns this
 */
proto.openstorage.api.VolumeBytesUsedByNode.prototype.clearVolUsageList = function() {
  return this.setVolUsageList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.FstrimVolumeUsageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.FstrimVolumeUsageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FstrimVolumeUsageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duUsage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pxUsage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    performAutoFstrim: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.FstrimVolumeUsageInfo;
  return proto.openstorage.api.FstrimVolumeUsageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.FstrimVolumeUsageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVolumeSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDuUsage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPxUsage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerformAutoFstrim(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.FstrimVolumeUsageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.FstrimVolumeUsageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FstrimVolumeUsageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getDuUsage();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPxUsage();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPerformAutoFstrim();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string volume_name = 1;
 * @return {string}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.getVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo} returns this
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.setVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 volume_size = 2;
 * @return {number}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.getVolumeSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo} returns this
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.setVolumeSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 du_usage = 3;
 * @return {number}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.getDuUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo} returns this
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.setDuUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 px_usage = 4;
 * @return {number}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.getPxUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo} returns this
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.setPxUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string perform_auto_fstrim = 5;
 * @return {string}
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.getPerformAutoFstrim = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.FstrimVolumeUsageInfo} returns this
 */
proto.openstorage.api.FstrimVolumeUsageInfo.prototype.setPerformAutoFstrim = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.RelaxedReclaimPurge.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.RelaxedReclaimPurge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.RelaxedReclaimPurge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RelaxedReclaimPurge.toObject = function(includeInstance, msg) {
  var f, obj = {
    numPurged: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.RelaxedReclaimPurge}
 */
proto.openstorage.api.RelaxedReclaimPurge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.RelaxedReclaimPurge;
  return proto.openstorage.api.RelaxedReclaimPurge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.RelaxedReclaimPurge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.RelaxedReclaimPurge}
 */
proto.openstorage.api.RelaxedReclaimPurge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPurged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.RelaxedReclaimPurge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.RelaxedReclaimPurge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.RelaxedReclaimPurge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RelaxedReclaimPurge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumPurged();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 num_purged = 1;
 * @return {number}
 */
proto.openstorage.api.RelaxedReclaimPurge.prototype.getNumPurged = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.RelaxedReclaimPurge} returns this
 */
proto.openstorage.api.RelaxedReclaimPurge.prototype.setNumPurged = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStoragePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStoragePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    policy: (f = msg.getPolicy()) && proto.openstorage.api.VolumeSpecPolicy.toObject(includeInstance, f),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    allowUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkStoragePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStoragePolicy;
  return proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStoragePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeSpecPolicy;
      reader.readMessage(value,proto.openstorage.api.VolumeSpecPolicy.deserializeBinaryFromReader);
      msg.setPolicy(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowUpdate(value);
      break;
    case 5:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStoragePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPolicy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeSpecPolicy.serializeBinaryToWriter
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAllowUpdate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
 */
proto.openstorage.api.SdkStoragePolicy.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional VolumeSpecPolicy policy = 2;
 * @return {?proto.openstorage.api.VolumeSpecPolicy}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.getPolicy = function() {
  return /** @type{?proto.openstorage.api.VolumeSpecPolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpecPolicy, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeSpecPolicy|undefined} value
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
*/
proto.openstorage.api.SdkStoragePolicy.prototype.setPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
 */
proto.openstorage.api.SdkStoragePolicy.prototype.clearPolicy = function() {
  return this.setPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool force = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
 */
proto.openstorage.api.SdkStoragePolicy.prototype.setForce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool allow_update = 4;
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.getAllowUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
 */
proto.openstorage.api.SdkStoragePolicy.prototype.setAllowUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Ownership ownership = 5;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 5));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
*/
proto.openstorage.api.SdkStoragePolicy.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkStoragePolicy} returns this
 */
proto.openstorage.api.SdkStoragePolicy.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePolicy.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Alert.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Alert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Alert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Alert.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    severity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alertType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    resourceId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    resource: jspb.Message.getFieldWithDefault(msg, 7, 0),
    cleared: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    ttl: jspb.Message.getFieldWithDefault(msg, 9, 0),
    uniqueTag: jspb.Message.getFieldWithDefault(msg, 10, ""),
    count: jspb.Message.getFieldWithDefault(msg, 11, 0),
    firstSeen: (f = msg.getFirstSeen()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Alert}
 */
proto.openstorage.api.Alert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Alert;
  return proto.openstorage.api.Alert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Alert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Alert}
 */
proto.openstorage.api.Alert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.SeverityType} */ (reader.readEnum());
      msg.setSeverity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlertType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceId(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.ResourceType} */ (reader.readEnum());
      msg.setResource(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleared(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTtl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueTag(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstSeen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Alert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Alert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Alert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Alert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSeverity();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAlertType();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getResourceId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getResource();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getCleared();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getUniqueTag();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getFirstSeen();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.openstorage.api.Alert.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional SeverityType severity = 2;
 * @return {!proto.openstorage.api.SeverityType}
 */
proto.openstorage.api.Alert.prototype.getSeverity = function() {
  return /** @type {!proto.openstorage.api.SeverityType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.SeverityType} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 alert_type = 3;
 * @return {number}
 */
proto.openstorage.api.Alert.prototype.getAlertType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setAlertType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.openstorage.api.Alert.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Alert.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Alert} returns this
*/
proto.openstorage.api.Alert.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Alert.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string resource_id = 6;
 * @return {string}
 */
proto.openstorage.api.Alert.prototype.getResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ResourceType resource = 7;
 * @return {!proto.openstorage.api.ResourceType}
 */
proto.openstorage.api.Alert.prototype.getResource = function() {
  return /** @type {!proto.openstorage.api.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.ResourceType} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setResource = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool cleared = 8;
 * @return {boolean}
 */
proto.openstorage.api.Alert.prototype.getCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setCleared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint64 ttl = 9;
 * @return {number}
 */
proto.openstorage.api.Alert.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string unique_tag = 10;
 * @return {string}
 */
proto.openstorage.api.Alert.prototype.getUniqueTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setUniqueTag = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 count = 11;
 * @return {number}
 */
proto.openstorage.api.Alert.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp first_seen = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Alert.prototype.getFirstSeen = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Alert} returns this
*/
proto.openstorage.api.Alert.prototype.setFirstSeen = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Alert} returns this
 */
proto.openstorage.api.Alert.prototype.clearFirstSeen = function() {
  return this.setFirstSeen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Alert.prototype.hasFirstSeen = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsTimeSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsTimeSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsTimeSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan}
 */
proto.openstorage.api.SdkAlertsTimeSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsTimeSpan;
  return proto.openstorage.api.SdkAlertsTimeSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsTimeSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan}
 */
proto.openstorage.api.SdkAlertsTimeSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsTimeSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsTimeSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsTimeSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan} returns this
*/
proto.openstorage.api.SdkAlertsTimeSpan.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan} returns this
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan} returns this
*/
proto.openstorage.api.SdkAlertsTimeSpan.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsTimeSpan} returns this
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsTimeSpan.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsCountSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsCountSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsCountSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    minCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsCountSpan}
 */
proto.openstorage.api.SdkAlertsCountSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsCountSpan;
  return proto.openstorage.api.SdkAlertsCountSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsCountSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsCountSpan}
 */
proto.openstorage.api.SdkAlertsCountSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsCountSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsCountSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsCountSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMaxCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 min_count = 1;
 * @return {number}
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.getMinCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkAlertsCountSpan} returns this
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.setMinCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max_count = 2;
 * @return {number}
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.getMaxCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkAlertsCountSpan} returns this
 */
proto.openstorage.api.SdkAlertsCountSpan.prototype.setMaxCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkAlertsOption.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkAlertsOption.OptCase = {
  OPT_NOT_SET: 0,
  MIN_SEVERITY_TYPE: 1,
  IS_CLEARED: 2,
  TIME_SPAN: 3,
  COUNT_SPAN: 4
};

/**
 * @return {proto.openstorage.api.SdkAlertsOption.OptCase}
 */
proto.openstorage.api.SdkAlertsOption.prototype.getOptCase = function() {
  return /** @type {proto.openstorage.api.SdkAlertsOption.OptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsOption.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    minSeverityType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isCleared: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    timeSpan: (f = msg.getTimeSpan()) && proto.openstorage.api.SdkAlertsTimeSpan.toObject(includeInstance, f),
    countSpan: (f = msg.getCountSpan()) && proto.openstorage.api.SdkAlertsCountSpan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsOption}
 */
proto.openstorage.api.SdkAlertsOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsOption;
  return proto.openstorage.api.SdkAlertsOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsOption}
 */
proto.openstorage.api.SdkAlertsOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.SeverityType} */ (reader.readEnum());
      msg.setMinSeverityType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCleared(value);
      break;
    case 3:
      var value = new proto.openstorage.api.SdkAlertsTimeSpan;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsTimeSpan.deserializeBinaryFromReader);
      msg.setTimeSpan(value);
      break;
    case 4:
      var value = new proto.openstorage.api.SdkAlertsCountSpan;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsCountSpan.deserializeBinaryFromReader);
      msg.setCountSpan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.openstorage.api.SeverityType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTimeSpan();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.SdkAlertsTimeSpan.serializeBinaryToWriter
    );
  }
  f = message.getCountSpan();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.SdkAlertsCountSpan.serializeBinaryToWriter
    );
  }
};


/**
 * optional SeverityType min_severity_type = 1;
 * @return {!proto.openstorage.api.SeverityType}
 */
proto.openstorage.api.SdkAlertsOption.prototype.getMinSeverityType = function() {
  return /** @type {!proto.openstorage.api.SeverityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.SeverityType} value
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.setMinSeverityType = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.clearMinSeverityType = function() {
  return jspb.Message.setOneofField(this, 1, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsOption.prototype.hasMinSeverityType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_cleared = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsOption.prototype.getIsCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.setIsCleared = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.clearIsCleared = function() {
  return jspb.Message.setOneofField(this, 2, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsOption.prototype.hasIsCleared = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SdkAlertsTimeSpan time_span = 3;
 * @return {?proto.openstorage.api.SdkAlertsTimeSpan}
 */
proto.openstorage.api.SdkAlertsOption.prototype.getTimeSpan = function() {
  return /** @type{?proto.openstorage.api.SdkAlertsTimeSpan} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAlertsTimeSpan, 3));
};


/**
 * @param {?proto.openstorage.api.SdkAlertsTimeSpan|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
*/
proto.openstorage.api.SdkAlertsOption.prototype.setTimeSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.clearTimeSpan = function() {
  return this.setTimeSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsOption.prototype.hasTimeSpan = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SdkAlertsCountSpan count_span = 4;
 * @return {?proto.openstorage.api.SdkAlertsCountSpan}
 */
proto.openstorage.api.SdkAlertsOption.prototype.getCountSpan = function() {
  return /** @type{?proto.openstorage.api.SdkAlertsCountSpan} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAlertsCountSpan, 4));
};


/**
 * @param {?proto.openstorage.api.SdkAlertsCountSpan|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
*/
proto.openstorage.api.SdkAlertsOption.prototype.setCountSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.openstorage.api.SdkAlertsOption.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsOption} returns this
 */
proto.openstorage.api.SdkAlertsOption.prototype.clearCountSpan = function() {
  return this.setCountSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsOption.prototype.hasCountSpan = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsResourceTypeQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsResourceTypeQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsResourceTypeQuery}
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsResourceTypeQuery;
  return proto.openstorage.api.SdkAlertsResourceTypeQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsResourceTypeQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsResourceTypeQuery}
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsResourceTypeQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsResourceTypeQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional ResourceType resource_type = 1;
 * @return {!proto.openstorage.api.ResourceType}
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.prototype.getResourceType = function() {
  return /** @type {!proto.openstorage.api.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ResourceType} value
 * @return {!proto.openstorage.api.SdkAlertsResourceTypeQuery} returns this
 */
proto.openstorage.api.SdkAlertsResourceTypeQuery.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsAlertTypeQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsAlertTypeQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    alertType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsAlertTypeQuery}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsAlertTypeQuery;
  return proto.openstorage.api.SdkAlertsAlertTypeQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsAlertTypeQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsAlertTypeQuery}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlertType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsAlertTypeQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsAlertTypeQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAlertType();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional ResourceType resource_type = 1;
 * @return {!proto.openstorage.api.ResourceType}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.getResourceType = function() {
  return /** @type {!proto.openstorage.api.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ResourceType} value
 * @return {!proto.openstorage.api.SdkAlertsAlertTypeQuery} returns this
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 alert_type = 2;
 * @return {number}
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.getAlertType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkAlertsAlertTypeQuery} returns this
 */
proto.openstorage.api.SdkAlertsAlertTypeQuery.prototype.setAlertType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsResourceIdQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsResourceIdQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    alertType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsResourceIdQuery}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsResourceIdQuery;
  return proto.openstorage.api.SdkAlertsResourceIdQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsResourceIdQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsResourceIdQuery}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAlertType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsResourceIdQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsResourceIdQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAlertType();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getResourceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ResourceType resource_type = 1;
 * @return {!proto.openstorage.api.ResourceType}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.getResourceType = function() {
  return /** @type {!proto.openstorage.api.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.ResourceType} value
 * @return {!proto.openstorage.api.SdkAlertsResourceIdQuery} returns this
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 alert_type = 2;
 * @return {number}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.getAlertType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkAlertsResourceIdQuery} returns this
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.setAlertType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string resource_id = 3;
 * @return {string}
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.getResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAlertsResourceIdQuery} returns this
 */
proto.openstorage.api.SdkAlertsResourceIdQuery.prototype.setResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkAlertsQuery.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkAlertsQuery.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkAlertsQuery.QueryCase = {
  QUERY_NOT_SET: 0,
  RESOURCE_TYPE_QUERY: 1,
  ALERT_TYPE_QUERY: 2,
  RESOURCE_ID_QUERY: 3
};

/**
 * @return {proto.openstorage.api.SdkAlertsQuery.QueryCase}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.getQueryCase = function() {
  return /** @type {proto.openstorage.api.SdkAlertsQuery.QueryCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkAlertsQuery.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceTypeQuery: (f = msg.getResourceTypeQuery()) && proto.openstorage.api.SdkAlertsResourceTypeQuery.toObject(includeInstance, f),
    alertTypeQuery: (f = msg.getAlertTypeQuery()) && proto.openstorage.api.SdkAlertsAlertTypeQuery.toObject(includeInstance, f),
    resourceIdQuery: (f = msg.getResourceIdQuery()) && proto.openstorage.api.SdkAlertsResourceIdQuery.toObject(includeInstance, f),
    optsList: jspb.Message.toObjectList(msg.getOptsList(),
    proto.openstorage.api.SdkAlertsOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsQuery}
 */
proto.openstorage.api.SdkAlertsQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsQuery;
  return proto.openstorage.api.SdkAlertsQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsQuery}
 */
proto.openstorage.api.SdkAlertsQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkAlertsResourceTypeQuery;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsResourceTypeQuery.deserializeBinaryFromReader);
      msg.setResourceTypeQuery(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkAlertsAlertTypeQuery;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsAlertTypeQuery.deserializeBinaryFromReader);
      msg.setAlertTypeQuery(value);
      break;
    case 3:
      var value = new proto.openstorage.api.SdkAlertsResourceIdQuery;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsResourceIdQuery.deserializeBinaryFromReader);
      msg.setResourceIdQuery(value);
      break;
    case 4:
      var value = new proto.openstorage.api.SdkAlertsOption;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsOption.deserializeBinaryFromReader);
      msg.addOpts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceTypeQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkAlertsResourceTypeQuery.serializeBinaryToWriter
    );
  }
  f = message.getAlertTypeQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.SdkAlertsAlertTypeQuery.serializeBinaryToWriter
    );
  }
  f = message.getResourceIdQuery();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.SdkAlertsResourceIdQuery.serializeBinaryToWriter
    );
  }
  f = message.getOptsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.openstorage.api.SdkAlertsOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkAlertsResourceTypeQuery resource_type_query = 1;
 * @return {?proto.openstorage.api.SdkAlertsResourceTypeQuery}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.getResourceTypeQuery = function() {
  return /** @type{?proto.openstorage.api.SdkAlertsResourceTypeQuery} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAlertsResourceTypeQuery, 1));
};


/**
 * @param {?proto.openstorage.api.SdkAlertsResourceTypeQuery|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
*/
proto.openstorage.api.SdkAlertsQuery.prototype.setResourceTypeQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openstorage.api.SdkAlertsQuery.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
 */
proto.openstorage.api.SdkAlertsQuery.prototype.clearResourceTypeQuery = function() {
  return this.setResourceTypeQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.hasResourceTypeQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SdkAlertsAlertTypeQuery alert_type_query = 2;
 * @return {?proto.openstorage.api.SdkAlertsAlertTypeQuery}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.getAlertTypeQuery = function() {
  return /** @type{?proto.openstorage.api.SdkAlertsAlertTypeQuery} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAlertsAlertTypeQuery, 2));
};


/**
 * @param {?proto.openstorage.api.SdkAlertsAlertTypeQuery|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
*/
proto.openstorage.api.SdkAlertsQuery.prototype.setAlertTypeQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openstorage.api.SdkAlertsQuery.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
 */
proto.openstorage.api.SdkAlertsQuery.prototype.clearAlertTypeQuery = function() {
  return this.setAlertTypeQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.hasAlertTypeQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SdkAlertsResourceIdQuery resource_id_query = 3;
 * @return {?proto.openstorage.api.SdkAlertsResourceIdQuery}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.getResourceIdQuery = function() {
  return /** @type{?proto.openstorage.api.SdkAlertsResourceIdQuery} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAlertsResourceIdQuery, 3));
};


/**
 * @param {?proto.openstorage.api.SdkAlertsResourceIdQuery|undefined} value
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
*/
proto.openstorage.api.SdkAlertsQuery.prototype.setResourceIdQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.openstorage.api.SdkAlertsQuery.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
 */
proto.openstorage.api.SdkAlertsQuery.prototype.clearResourceIdQuery = function() {
  return this.setResourceIdQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.hasResourceIdQuery = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated SdkAlertsOption opts = 4;
 * @return {!Array<!proto.openstorage.api.SdkAlertsOption>}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.getOptsList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkAlertsOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkAlertsOption, 4));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkAlertsOption>} value
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
*/
proto.openstorage.api.SdkAlertsQuery.prototype.setOptsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.openstorage.api.SdkAlertsOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkAlertsOption}
 */
proto.openstorage.api.SdkAlertsQuery.prototype.addOpts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.openstorage.api.SdkAlertsOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkAlertsQuery} returns this
 */
proto.openstorage.api.SdkAlertsQuery.prototype.clearOptsList = function() {
  return this.setOptsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.openstorage.api.SdkAlertsQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest;
  return proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkAlertsQuery;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkAlertsQuery.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkAlertsQuery queries = 1;
 * @return {!Array<!proto.openstorage.api.SdkAlertsQuery>}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkAlertsQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkAlertsQuery, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkAlertsQuery>} value
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkAlertsQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkAlertsQuery}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkAlertsQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersRequest.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    alertsList: jspb.Message.toObjectList(msg.getAlertsList(),
    proto.openstorage.api.Alert.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse;
  return proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Alert;
      reader.readMessage(value,proto.openstorage.api.Alert.deserializeBinaryFromReader);
      msg.addAlerts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlertsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.Alert.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Alert alerts = 1;
 * @return {!Array<!proto.openstorage.api.Alert>}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.getAlertsList = function() {
  return /** @type{!Array<!proto.openstorage.api.Alert>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.Alert, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.Alert>} value
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse} returns this
*/
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.setAlertsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.Alert=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.Alert}
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.addAlerts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.Alert, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkAlertsEnumerateWithFiltersResponse.prototype.clearAlertsList = function() {
  return this.setAlertsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkAlertsDeleteRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.openstorage.api.SdkAlertsQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsDeleteRequest}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsDeleteRequest;
  return proto.openstorage.api.SdkAlertsDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsDeleteRequest}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkAlertsQuery;
      reader.readMessage(value,proto.openstorage.api.SdkAlertsQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkAlertsQuery.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkAlertsQuery queries = 1;
 * @return {!Array<!proto.openstorage.api.SdkAlertsQuery>}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkAlertsQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkAlertsQuery, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkAlertsQuery>} value
 * @return {!proto.openstorage.api.SdkAlertsDeleteRequest} returns this
*/
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkAlertsQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkAlertsQuery}
 */
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkAlertsQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkAlertsDeleteRequest} returns this
 */
proto.openstorage.api.SdkAlertsDeleteRequest.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAlertsDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAlertsDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAlertsDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAlertsDeleteResponse}
 */
proto.openstorage.api.SdkAlertsDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAlertsDeleteResponse;
  return proto.openstorage.api.SdkAlertsDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAlertsDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAlertsDeleteResponse}
 */
proto.openstorage.api.SdkAlertsDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAlertsDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAlertsDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAlertsDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAlertsDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.Alerts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Alerts.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Alerts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Alerts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Alerts.toObject = function(includeInstance, msg) {
  var f, obj = {
    alertList: jspb.Message.toObjectList(msg.getAlertList(),
    proto.openstorage.api.Alert.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Alerts}
 */
proto.openstorage.api.Alerts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Alerts;
  return proto.openstorage.api.Alerts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Alerts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Alerts}
 */
proto.openstorage.api.Alerts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Alert;
      reader.readMessage(value,proto.openstorage.api.Alert.deserializeBinaryFromReader);
      msg.addAlert(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Alerts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Alerts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Alerts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Alerts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlertList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.Alert.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Alert alert = 1;
 * @return {!Array<!proto.openstorage.api.Alert>}
 */
proto.openstorage.api.Alerts.prototype.getAlertList = function() {
  return /** @type{!Array<!proto.openstorage.api.Alert>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.Alert, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.Alert>} value
 * @return {!proto.openstorage.api.Alerts} returns this
*/
proto.openstorage.api.Alerts.prototype.setAlertList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.Alert=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.Alert}
 */
proto.openstorage.api.Alerts.prototype.addAlert = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.Alert, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Alerts} returns this
 */
proto.openstorage.api.Alerts.prototype.clearAlertList = function() {
  return this.setAlertList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ObjectstoreInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ObjectstoreInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ObjectstoreInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ObjectstoreInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    action: jspb.Message.getFieldWithDefault(msg, 5, 0),
    accessKey: jspb.Message.getFieldWithDefault(msg, 6, ""),
    secretKey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    endpointsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    currentEndpoint: jspb.Message.getFieldWithDefault(msg, 9, ""),
    accessPort: jspb.Message.getFieldWithDefault(msg, 10, 0),
    region: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ObjectstoreInfo}
 */
proto.openstorage.api.ObjectstoreInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ObjectstoreInfo;
  return proto.openstorage.api.ObjectstoreInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ObjectstoreInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ObjectstoreInfo}
 */
proto.openstorage.api.ObjectstoreInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAction(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessKey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretKey(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addEndpoints(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentEndpoint(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccessPort(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ObjectstoreInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ObjectstoreInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ObjectstoreInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAction();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAccessKey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSecretKey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getCurrentEndpoint();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAccessPort();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string volume_id = 2;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool enabled = 3;
 * @return {boolean}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 action = 5;
 * @return {number}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getAction = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setAction = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string access_key = 6;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getAccessKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setAccessKey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string secret_key = 7;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string endpoints = 8;
 * @return {!Array<string>}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getEndpointsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setEndpointsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.addEndpoints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.clearEndpointsList = function() {
  return this.setEndpointsList([]);
};


/**
 * optional string current_endpoint = 9;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getCurrentEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setCurrentEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 access_port = 10;
 * @return {number}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getAccessPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setAccessPort = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string region = 11;
 * @return {string}
 */
proto.openstorage.api.ObjectstoreInfo.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ObjectstoreInfo} returns this
 */
proto.openstorage.api.ObjectstoreInfo.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locator: (f = msg.getLocator()) && proto.openstorage.api.VolumeLocator.toObject(includeInstance, f),
    source: (f = msg.getSource()) && proto.openstorage.api.Source.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.openstorage.api.VolumeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeCreateRequest}
 */
proto.openstorage.api.VolumeCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeCreateRequest;
  return proto.openstorage.api.VolumeCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeCreateRequest}
 */
proto.openstorage.api.VolumeCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeLocator;
      reader.readMessage(value,proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 2:
      var value = new proto.openstorage.api.Source;
      reader.readMessage(value,proto.openstorage.api.Source.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 3:
      var value = new proto.openstorage.api.VolumeSpec;
      reader.readMessage(value,proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.VolumeLocator.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.Source.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.VolumeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional VolumeLocator locator = 1;
 * @return {?proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.getLocator = function() {
  return /** @type{?proto.openstorage.api.VolumeLocator} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeLocator, 1));
};


/**
 * @param {?proto.openstorage.api.VolumeLocator|undefined} value
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
*/
proto.openstorage.api.VolumeCreateRequest.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
 */
proto.openstorage.api.VolumeCreateRequest.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Source source = 2;
 * @return {?proto.openstorage.api.Source}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.getSource = function() {
  return /** @type{?proto.openstorage.api.Source} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Source, 2));
};


/**
 * @param {?proto.openstorage.api.Source|undefined} value
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
*/
proto.openstorage.api.VolumeCreateRequest.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
 */
proto.openstorage.api.VolumeCreateRequest.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VolumeSpec spec = 3;
 * @return {?proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.VolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpec, 3));
};


/**
 * @param {?proto.openstorage.api.VolumeSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
*/
proto.openstorage.api.VolumeCreateRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeCreateRequest} returns this
 */
proto.openstorage.api.VolumeCreateRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeCreateRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeResponse}
 */
proto.openstorage.api.VolumeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeResponse;
  return proto.openstorage.api.VolumeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeResponse}
 */
proto.openstorage.api.VolumeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeResponse} returns this
 */
proto.openstorage.api.VolumeResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeResponse: (f = msg.getVolumeResponse()) && proto.openstorage.api.VolumeResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeCreateResponse}
 */
proto.openstorage.api.VolumeCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeCreateResponse;
  return proto.openstorage.api.VolumeCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeCreateResponse}
 */
proto.openstorage.api.VolumeCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeResponse;
      reader.readMessage(value,proto.openstorage.api.VolumeResponse.deserializeBinaryFromReader);
      msg.setVolumeResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeCreateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeCreateResponse} returns this
 */
proto.openstorage.api.VolumeCreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional VolumeResponse volume_response = 2;
 * @return {?proto.openstorage.api.VolumeResponse}
 */
proto.openstorage.api.VolumeCreateResponse.prototype.getVolumeResponse = function() {
  return /** @type{?proto.openstorage.api.VolumeResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeResponse, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeResponse|undefined} value
 * @return {!proto.openstorage.api.VolumeCreateResponse} returns this
*/
proto.openstorage.api.VolumeCreateResponse.prototype.setVolumeResponse = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeCreateResponse} returns this
 */
proto.openstorage.api.VolumeCreateResponse.prototype.clearVolumeResponse = function() {
  return this.setVolumeResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeCreateResponse.prototype.hasVolumeResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeStateAction.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeStateAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeStateAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeStateAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    attach: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mountPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    devicePath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeStateAction}
 */
proto.openstorage.api.VolumeStateAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeStateAction;
  return proto.openstorage.api.VolumeStateAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeStateAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeStateAction}
 */
proto.openstorage.api.VolumeStateAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.VolumeActionParam} */ (reader.readEnum());
      msg.setAttach(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.VolumeActionParam} */ (reader.readEnum());
      msg.setMount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicePath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeStateAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeStateAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeStateAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeStateAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttach();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMount();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDevicePath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional VolumeActionParam attach = 1;
 * @return {!proto.openstorage.api.VolumeActionParam}
 */
proto.openstorage.api.VolumeStateAction.prototype.getAttach = function() {
  return /** @type {!proto.openstorage.api.VolumeActionParam} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeActionParam} value
 * @return {!proto.openstorage.api.VolumeStateAction} returns this
 */
proto.openstorage.api.VolumeStateAction.prototype.setAttach = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional VolumeActionParam mount = 2;
 * @return {!proto.openstorage.api.VolumeActionParam}
 */
proto.openstorage.api.VolumeStateAction.prototype.getMount = function() {
  return /** @type {!proto.openstorage.api.VolumeActionParam} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.VolumeActionParam} value
 * @return {!proto.openstorage.api.VolumeStateAction} returns this
 */
proto.openstorage.api.VolumeStateAction.prototype.setMount = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string mount_path = 3;
 * @return {string}
 */
proto.openstorage.api.VolumeStateAction.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeStateAction} returns this
 */
proto.openstorage.api.VolumeStateAction.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device_path = 4;
 * @return {string}
 */
proto.openstorage.api.VolumeStateAction.prototype.getDevicePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeStateAction} returns this
 */
proto.openstorage.api.VolumeStateAction.prototype.setDevicePath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locator: (f = msg.getLocator()) && proto.openstorage.api.VolumeLocator.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.openstorage.api.VolumeSpec.toObject(includeInstance, f),
    action: (f = msg.getAction()) && proto.openstorage.api.VolumeStateAction.toObject(includeInstance, f),
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeSetRequest}
 */
proto.openstorage.api.VolumeSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeSetRequest;
  return proto.openstorage.api.VolumeSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeSetRequest}
 */
proto.openstorage.api.VolumeSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeLocator;
      reader.readMessage(value,proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeSpec;
      reader.readMessage(value,proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.openstorage.api.VolumeStateAction;
      reader.readMessage(value,proto.openstorage.api.VolumeStateAction.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 4:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.VolumeLocator.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeSpec.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.VolumeStateAction.serializeBinaryToWriter
    );
  }
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional VolumeLocator locator = 1;
 * @return {?proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.VolumeSetRequest.prototype.getLocator = function() {
  return /** @type{?proto.openstorage.api.VolumeLocator} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeLocator, 1));
};


/**
 * @param {?proto.openstorage.api.VolumeLocator|undefined} value
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
*/
proto.openstorage.api.VolumeSetRequest.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
 */
proto.openstorage.api.VolumeSetRequest.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSetRequest.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VolumeSpec spec = 2;
 * @return {?proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.VolumeSetRequest.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.VolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpec, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
*/
proto.openstorage.api.VolumeSetRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
 */
proto.openstorage.api.VolumeSetRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSetRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VolumeStateAction action = 3;
 * @return {?proto.openstorage.api.VolumeStateAction}
 */
proto.openstorage.api.VolumeSetRequest.prototype.getAction = function() {
  return /** @type{?proto.openstorage.api.VolumeStateAction} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeStateAction, 3));
};


/**
 * @param {?proto.openstorage.api.VolumeStateAction|undefined} value
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
*/
proto.openstorage.api.VolumeSetRequest.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
 */
proto.openstorage.api.VolumeSetRequest.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSetRequest.prototype.hasAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> options = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeSetRequest.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeSetRequest} returns this
 */
proto.openstorage.api.VolumeSetRequest.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = msg.getVolume()) && proto.openstorage.api.Volume.toObject(includeInstance, f),
    volumeResponse: (f = msg.getVolumeResponse()) && proto.openstorage.api.VolumeResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeSetResponse}
 */
proto.openstorage.api.VolumeSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeSetResponse;
  return proto.openstorage.api.VolumeSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeSetResponse}
 */
proto.openstorage.api.VolumeSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Volume;
      reader.readMessage(value,proto.openstorage.api.Volume.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeResponse;
      reader.readMessage(value,proto.openstorage.api.VolumeResponse.deserializeBinaryFromReader);
      msg.setVolumeResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Volume.serializeBinaryToWriter
    );
  }
  f = message.getVolumeResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional Volume volume = 1;
 * @return {?proto.openstorage.api.Volume}
 */
proto.openstorage.api.VolumeSetResponse.prototype.getVolume = function() {
  return /** @type{?proto.openstorage.api.Volume} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Volume, 1));
};


/**
 * @param {?proto.openstorage.api.Volume|undefined} value
 * @return {!proto.openstorage.api.VolumeSetResponse} returns this
*/
proto.openstorage.api.VolumeSetResponse.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSetResponse} returns this
 */
proto.openstorage.api.VolumeSetResponse.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSetResponse.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VolumeResponse volume_response = 2;
 * @return {?proto.openstorage.api.VolumeResponse}
 */
proto.openstorage.api.VolumeSetResponse.prototype.getVolumeResponse = function() {
  return /** @type{?proto.openstorage.api.VolumeResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeResponse, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeResponse|undefined} value
 * @return {!proto.openstorage.api.VolumeSetResponse} returns this
*/
proto.openstorage.api.VolumeSetResponse.prototype.setVolumeResponse = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeSetResponse} returns this
 */
proto.openstorage.api.VolumeSetResponse.prototype.clearVolumeResponse = function() {
  return this.setVolumeResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeSetResponse.prototype.hasVolumeResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SnapCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SnapCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SnapCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SnapCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locator: (f = msg.getLocator()) && proto.openstorage.api.VolumeLocator.toObject(includeInstance, f),
    readonly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    noRetry: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SnapCreateRequest}
 */
proto.openstorage.api.SnapCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SnapCreateRequest;
  return proto.openstorage.api.SnapCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SnapCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SnapCreateRequest}
 */
proto.openstorage.api.SnapCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeLocator;
      reader.readMessage(value,proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadonly(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoRetry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SnapCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SnapCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SnapCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SnapCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeLocator.serializeBinaryToWriter
    );
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNoRetry();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SnapCreateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SnapCreateRequest} returns this
 */
proto.openstorage.api.SnapCreateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional VolumeLocator locator = 2;
 * @return {?proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.SnapCreateRequest.prototype.getLocator = function() {
  return /** @type{?proto.openstorage.api.VolumeLocator} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeLocator, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeLocator|undefined} value
 * @return {!proto.openstorage.api.SnapCreateRequest} returns this
*/
proto.openstorage.api.SnapCreateRequest.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SnapCreateRequest} returns this
 */
proto.openstorage.api.SnapCreateRequest.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SnapCreateRequest.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool readonly = 3;
 * @return {boolean}
 */
proto.openstorage.api.SnapCreateRequest.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SnapCreateRequest} returns this
 */
proto.openstorage.api.SnapCreateRequest.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool no_retry = 4;
 * @return {boolean}
 */
proto.openstorage.api.SnapCreateRequest.prototype.getNoRetry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SnapCreateRequest} returns this
 */
proto.openstorage.api.SnapCreateRequest.prototype.setNoRetry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SnapCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SnapCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SnapCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SnapCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeCreateResponse: (f = msg.getVolumeCreateResponse()) && proto.openstorage.api.VolumeCreateResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SnapCreateResponse}
 */
proto.openstorage.api.SnapCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SnapCreateResponse;
  return proto.openstorage.api.SnapCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SnapCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SnapCreateResponse}
 */
proto.openstorage.api.SnapCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeCreateResponse;
      reader.readMessage(value,proto.openstorage.api.VolumeCreateResponse.deserializeBinaryFromReader);
      msg.setVolumeCreateResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SnapCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SnapCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SnapCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SnapCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeCreateResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.VolumeCreateResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional VolumeCreateResponse volume_create_response = 1;
 * @return {?proto.openstorage.api.VolumeCreateResponse}
 */
proto.openstorage.api.SnapCreateResponse.prototype.getVolumeCreateResponse = function() {
  return /** @type{?proto.openstorage.api.VolumeCreateResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeCreateResponse, 1));
};


/**
 * @param {?proto.openstorage.api.VolumeCreateResponse|undefined} value
 * @return {!proto.openstorage.api.SnapCreateResponse} returns this
*/
proto.openstorage.api.SnapCreateResponse.prototype.setVolumeCreateResponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SnapCreateResponse} returns this
 */
proto.openstorage.api.SnapCreateResponse.prototype.clearVolumeCreateResponse = function() {
  return this.setVolumeCreateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SnapCreateResponse.prototype.hasVolumeCreateResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storage: (f = msg.getStorage()) && proto.openstorage.api.VolumeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeInfo}
 */
proto.openstorage.api.VolumeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeInfo;
  return proto.openstorage.api.VolumeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeInfo}
 */
proto.openstorage.api.VolumeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = new proto.openstorage.api.VolumeSpec;
      reader.readMessage(value,proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader);
      msg.setStorage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStorage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.VolumeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeInfo.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeInfo} returns this
 */
proto.openstorage.api.VolumeInfo.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.openstorage.api.VolumeInfo.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeInfo} returns this
 */
proto.openstorage.api.VolumeInfo.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional VolumeSpec storage = 3;
 * @return {?proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.VolumeInfo.prototype.getStorage = function() {
  return /** @type{?proto.openstorage.api.VolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpec, 3));
};


/**
 * @param {?proto.openstorage.api.VolumeSpec|undefined} value
 * @return {!proto.openstorage.api.VolumeInfo} returns this
*/
proto.openstorage.api.VolumeInfo.prototype.setStorage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.VolumeInfo} returns this
 */
proto.openstorage.api.VolumeInfo.prototype.clearStorage = function() {
  return this.setStorage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.VolumeInfo.prototype.hasStorage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeConsumer.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeConsumer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeConsumer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeConsumer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ownerName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerType: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeConsumer}
 */
proto.openstorage.api.VolumeConsumer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeConsumer;
  return proto.openstorage.api.VolumeConsumer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeConsumer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeConsumer}
 */
proto.openstorage.api.VolumeConsumer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeConsumer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeConsumer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeConsumer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeConsumer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwnerName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string node_id = 4;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string owner_name = 5;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_type = 6;
 * @return {string}
 */
proto.openstorage.api.VolumeConsumer.prototype.getOwnerType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeConsumer} returns this
 */
proto.openstorage.api.VolumeConsumer.prototype.setOwnerType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srvCmd: jspb.Message.getFieldWithDefault(msg, 1, ""),
    srvCmdParamsMap: (f = msg.getSrvCmdParamsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeServiceRequest}
 */
proto.openstorage.api.VolumeServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeServiceRequest;
  return proto.openstorage.api.VolumeServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeServiceRequest}
 */
proto.openstorage.api.VolumeServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrvCmd(value);
      break;
    case 2:
      var value = msg.getSrvCmdParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrvCmd();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrvCmdParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string srv_cmd = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeServiceRequest.prototype.getSrvCmd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeServiceRequest} returns this
 */
proto.openstorage.api.VolumeServiceRequest.prototype.setSrvCmd = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> srv_cmd_params = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeServiceRequest.prototype.getSrvCmdParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeServiceRequest} returns this
 */
proto.openstorage.api.VolumeServiceRequest.prototype.clearSrvCmdParamsMap = function() {
  this.getSrvCmdParamsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeServiceInstanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeServiceInstanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceInstanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statusMap: (f = msg.getStatusMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeServiceInstanceResponse}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeServiceInstanceResponse;
  return proto.openstorage.api.VolumeServiceInstanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeServiceInstanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeServiceInstanceResponse}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 2:
      var value = msg.getStatusMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeServiceInstanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeServiceInstanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceInstanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatusMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumeServiceInstanceResponse} returns this
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> status = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.getStatusMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.VolumeServiceInstanceResponse} returns this
 */
proto.openstorage.api.VolumeServiceInstanceResponse.prototype.clearStatusMap = function() {
  this.getStatusMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumeServiceResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumeServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumeServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumeServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volSrvRspObjCnt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    volSrvRspList: jspb.Message.toObjectList(msg.getVolSrvRspList(),
    proto.openstorage.api.VolumeServiceInstanceResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumeServiceResponse}
 */
proto.openstorage.api.VolumeServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumeServiceResponse;
  return proto.openstorage.api.VolumeServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumeServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumeServiceResponse}
 */
proto.openstorage.api.VolumeServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolSrvRspObjCnt(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeServiceInstanceResponse;
      reader.readMessage(value,proto.openstorage.api.VolumeServiceInstanceResponse.deserializeBinaryFromReader);
      msg.addVolSrvRsp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumeServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumeServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumeServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumeServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolSrvRspObjCnt();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVolSrvRspList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.VolumeServiceInstanceResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 vol_srv_rsp_obj_cnt = 1;
 * @return {number}
 */
proto.openstorage.api.VolumeServiceResponse.prototype.getVolSrvRspObjCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumeServiceResponse} returns this
 */
proto.openstorage.api.VolumeServiceResponse.prototype.setVolSrvRspObjCnt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated VolumeServiceInstanceResponse vol_srv_rsp = 2;
 * @return {!Array<!proto.openstorage.api.VolumeServiceInstanceResponse>}
 */
proto.openstorage.api.VolumeServiceResponse.prototype.getVolSrvRspList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumeServiceInstanceResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumeServiceInstanceResponse, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumeServiceInstanceResponse>} value
 * @return {!proto.openstorage.api.VolumeServiceResponse} returns this
*/
proto.openstorage.api.VolumeServiceResponse.prototype.setVolSrvRspList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.VolumeServiceInstanceResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumeServiceInstanceResponse}
 */
proto.openstorage.api.VolumeServiceResponse.prototype.addVolSrvRsp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.VolumeServiceInstanceResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumeServiceResponse} returns this
 */
proto.openstorage.api.VolumeServiceResponse.prototype.clearVolSrvRspList = function() {
  return this.setVolSrvRspList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.GraphDriverChanges.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.GraphDriverChanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.GraphDriverChanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GraphDriverChanges.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.GraphDriverChanges}
 */
proto.openstorage.api.GraphDriverChanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.GraphDriverChanges;
  return proto.openstorage.api.GraphDriverChanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.GraphDriverChanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.GraphDriverChanges}
 */
proto.openstorage.api.GraphDriverChanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.GraphDriverChangeType} */ (reader.readEnum());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.GraphDriverChanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.GraphDriverChanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.GraphDriverChanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GraphDriverChanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.openstorage.api.GraphDriverChanges.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.GraphDriverChanges} returns this
 */
proto.openstorage.api.GraphDriverChanges.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GraphDriverChangeType kind = 2;
 * @return {!proto.openstorage.api.GraphDriverChangeType}
 */
proto.openstorage.api.GraphDriverChanges.prototype.getKind = function() {
  return /** @type {!proto.openstorage.api.GraphDriverChangeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.GraphDriverChangeType} value
 * @return {!proto.openstorage.api.GraphDriverChanges} returns this
 */
proto.openstorage.api.GraphDriverChanges.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterResponse}
 */
proto.openstorage.api.ClusterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterResponse;
  return proto.openstorage.api.ClusterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterResponse}
 */
proto.openstorage.api.ClusterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterResponse} returns this
 */
proto.openstorage.api.ClusterResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ActiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ActiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ActiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ActiveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqestkvMap: (f = msg.getReqestkvMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ActiveRequest}
 */
proto.openstorage.api.ActiveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ActiveRequest;
  return proto.openstorage.api.ActiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ActiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ActiveRequest}
 */
proto.openstorage.api.ActiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getReqestkvMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ActiveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ActiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ActiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ActiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqestkvMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<int64, string> ReqestKV = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.openstorage.api.ActiveRequest.prototype.getReqestkvMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.ActiveRequest} returns this
 */
proto.openstorage.api.ActiveRequest.prototype.clearReqestkvMap = function() {
  this.getReqestkvMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ActiveRequests.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ActiveRequests.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ActiveRequests.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ActiveRequests} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ActiveRequests.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    activerequestList: jspb.Message.toObjectList(msg.getActiverequestList(),
    proto.openstorage.api.ActiveRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ActiveRequests}
 */
proto.openstorage.api.ActiveRequests.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ActiveRequests;
  return proto.openstorage.api.ActiveRequests.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ActiveRequests} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ActiveRequests}
 */
proto.openstorage.api.ActiveRequests.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestcount(value);
      break;
    case 2:
      var value = new proto.openstorage.api.ActiveRequest;
      reader.readMessage(value,proto.openstorage.api.ActiveRequest.deserializeBinaryFromReader);
      msg.addActiverequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ActiveRequests.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ActiveRequests.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ActiveRequests} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ActiveRequests.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestcount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getActiverequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.ActiveRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 RequestCount = 1;
 * @return {number}
 */
proto.openstorage.api.ActiveRequests.prototype.getRequestcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ActiveRequests} returns this
 */
proto.openstorage.api.ActiveRequests.prototype.setRequestcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ActiveRequest ActiveRequest = 2;
 * @return {!Array<!proto.openstorage.api.ActiveRequest>}
 */
proto.openstorage.api.ActiveRequests.prototype.getActiverequestList = function() {
  return /** @type{!Array<!proto.openstorage.api.ActiveRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.ActiveRequest, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.ActiveRequest>} value
 * @return {!proto.openstorage.api.ActiveRequests} returns this
*/
proto.openstorage.api.ActiveRequests.prototype.setActiverequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.ActiveRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ActiveRequest}
 */
proto.openstorage.api.ActiveRequests.prototype.addActiverequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.ActiveRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ActiveRequests} returns this
 */
proto.openstorage.api.ActiveRequests.prototype.clearActiverequestList = function() {
  return this.setActiverequestList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.GroupSnapCreateRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.GroupSnapCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.GroupSnapCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GroupSnapCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    deleteOnFailure: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.GroupSnapCreateRequest}
 */
proto.openstorage.api.GroupSnapCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.GroupSnapCreateRequest;
  return proto.openstorage.api.GroupSnapCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.GroupSnapCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.GroupSnapCreateRequest}
 */
proto.openstorage.api.GroupSnapCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteOnFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.GroupSnapCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.GroupSnapCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GroupSnapCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getDeleteOnFailure();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> Labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * repeated string volume_ids = 3;
 * @return {!Array<string>}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};


/**
 * optional bool delete_on_failure = 4;
 * @return {boolean}
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.getDeleteOnFailure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.GroupSnapCreateRequest} returns this
 */
proto.openstorage.api.GroupSnapCreateRequest.prototype.setDeleteOnFailure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.GroupSnapCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.GroupSnapCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GroupSnapCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshotsMap: (f = msg.getSnapshotsMap()) ? f.toObject(includeInstance, proto.openstorage.api.SnapCreateResponse.toObject) : [],
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.GroupSnapCreateResponse}
 */
proto.openstorage.api.GroupSnapCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.GroupSnapCreateResponse;
  return proto.openstorage.api.GroupSnapCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.GroupSnapCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.GroupSnapCreateResponse}
 */
proto.openstorage.api.GroupSnapCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getSnapshotsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.SnapCreateResponse.deserializeBinaryFromReader, "", new proto.openstorage.api.SnapCreateResponse());
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.GroupSnapCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.GroupSnapCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.GroupSnapCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshotsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.SnapCreateResponse.serializeBinaryToWriter);
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * map<string, SnapCreateResponse> snapshots = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.SnapCreateResponse>}
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.getSnapshotsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.SnapCreateResponse>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.openstorage.api.SnapCreateResponse));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.GroupSnapCreateResponse} returns this
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.clearSnapshotsMap = function() {
  this.getSnapshotsMap().clear();
  return this;};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.GroupSnapCreateResponse} returns this
 */
proto.openstorage.api.GroupSnapCreateResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.StorageNode.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageNode.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cpu: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    memTotal: jspb.Message.getFieldWithDefault(msg, 3, 0),
    memUsed: jspb.Message.getFieldWithDefault(msg, 4, 0),
    memFree: jspb.Message.getFieldWithDefault(msg, 5, 0),
    avgLoad: jspb.Message.getFieldWithDefault(msg, 6, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    disksMap: (f = msg.getDisksMap()) ? f.toObject(includeInstance, proto.openstorage.api.StorageResource.toObject) : [],
    poolsList: jspb.Message.toObjectList(msg.getPoolsList(),
    proto.openstorage.api.StoragePool.toObject, includeInstance),
    mgmtIp: jspb.Message.getFieldWithDefault(msg, 11, ""),
    dataIp: jspb.Message.getFieldWithDefault(msg, 12, ""),
    hostname: jspb.Message.getFieldWithDefault(msg, 15, ""),
    nodeLabelsMap: (f = msg.getNodeLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    schedulerNodeName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    hwtype: jspb.Message.getFieldWithDefault(msg, 18, 0),
    securityStatus: jspb.Message.getFieldWithDefault(msg, 19, 0),
    schedulerTopology: (f = msg.getSchedulerTopology()) && proto.openstorage.api.SchedulerTopology.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageNode}
 */
proto.openstorage.api.StorageNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageNode;
  return proto.openstorage.api.StorageNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageNode}
 */
proto.openstorage.api.StorageNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCpu(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemTotal(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemUsed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemFree(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvgLoad(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = msg.getDisksMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.StorageResource.deserializeBinaryFromReader, "", new proto.openstorage.api.StorageResource());
         });
      break;
    case 10:
      var value = new proto.openstorage.api.StoragePool;
      reader.readMessage(value,proto.openstorage.api.StoragePool.deserializeBinaryFromReader);
      msg.addPools(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMgmtIp(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataIp(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 16:
      var value = msg.getNodeLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedulerNodeName(value);
      break;
    case 18:
      var value = /** @type {!proto.openstorage.api.HardwareType} */ (reader.readEnum());
      msg.setHwtype(value);
      break;
    case 19:
      var value = /** @type {!proto.openstorage.api.StorageNode.SecurityStatus} */ (reader.readEnum());
      msg.setSecurityStatus(value);
      break;
    case 20:
      var value = new proto.openstorage.api.SchedulerTopology;
      reader.readMessage(value,proto.openstorage.api.SchedulerTopology.deserializeBinaryFromReader);
      msg.setSchedulerTopology(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCpu();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMemTotal();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMemUsed();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getMemFree();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAvgLoad();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getDisksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.StorageResource.serializeBinaryToWriter);
  }
  f = message.getPoolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.openstorage.api.StoragePool.serializeBinaryToWriter
    );
  }
  f = message.getMgmtIp();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDataIp();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getNodeLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSchedulerNodeName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getHwtype();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = message.getSecurityStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = message.getSchedulerTopology();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.openstorage.api.SchedulerTopology.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.StorageNode.SecurityStatus = {
  UNSPECIFIED: 0,
  UNSECURED: 1,
  SECURED: 2,
  SECURED_ALLOW_SECURITY_REMOVAL: 3
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.StorageNode.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double cpu = 2;
 * @return {number}
 */
proto.openstorage.api.StorageNode.prototype.getCpu = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setCpu = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint64 mem_total = 3;
 * @return {number}
 */
proto.openstorage.api.StorageNode.prototype.getMemTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setMemTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 mem_used = 4;
 * @return {number}
 */
proto.openstorage.api.StorageNode.prototype.getMemUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setMemUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 mem_free = 5;
 * @return {number}
 */
proto.openstorage.api.StorageNode.prototype.getMemFree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setMemFree = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 avg_load = 6;
 * @return {number}
 */
proto.openstorage.api.StorageNode.prototype.getAvgLoad = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setAvgLoad = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Status status = 7;
 * @return {!proto.openstorage.api.Status}
 */
proto.openstorage.api.StorageNode.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.Status} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.Status} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * map<string, StorageResource> disks = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.StorageResource>}
 */
proto.openstorage.api.StorageNode.prototype.getDisksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.StorageResource>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      proto.openstorage.api.StorageResource));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.clearDisksMap = function() {
  this.getDisksMap().clear();
  return this;};


/**
 * repeated StoragePool pools = 10;
 * @return {!Array<!proto.openstorage.api.StoragePool>}
 */
proto.openstorage.api.StorageNode.prototype.getPoolsList = function() {
  return /** @type{!Array<!proto.openstorage.api.StoragePool>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StoragePool, 10));
};


/**
 * @param {!Array<!proto.openstorage.api.StoragePool>} value
 * @return {!proto.openstorage.api.StorageNode} returns this
*/
proto.openstorage.api.StorageNode.prototype.setPoolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.openstorage.api.StoragePool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StoragePool}
 */
proto.openstorage.api.StorageNode.prototype.addPools = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.openstorage.api.StoragePool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.clearPoolsList = function() {
  return this.setPoolsList([]);
};


/**
 * optional string mgmt_ip = 11;
 * @return {string}
 */
proto.openstorage.api.StorageNode.prototype.getMgmtIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setMgmtIp = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string data_ip = 12;
 * @return {string}
 */
proto.openstorage.api.StorageNode.prototype.getDataIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setDataIp = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string hostname = 15;
 * @return {string}
 */
proto.openstorage.api.StorageNode.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * map<string, string> node_labels = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.StorageNode.prototype.getNodeLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.clearNodeLabelsMap = function() {
  this.getNodeLabelsMap().clear();
  return this;};


/**
 * optional string scheduler_node_name = 17;
 * @return {string}
 */
proto.openstorage.api.StorageNode.prototype.getSchedulerNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setSchedulerNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional HardwareType HWType = 18;
 * @return {!proto.openstorage.api.HardwareType}
 */
proto.openstorage.api.StorageNode.prototype.getHwtype = function() {
  return /** @type {!proto.openstorage.api.HardwareType} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.openstorage.api.HardwareType} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setHwtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 18, value);
};


/**
 * optional SecurityStatus security_status = 19;
 * @return {!proto.openstorage.api.StorageNode.SecurityStatus}
 */
proto.openstorage.api.StorageNode.prototype.getSecurityStatus = function() {
  return /** @type {!proto.openstorage.api.StorageNode.SecurityStatus} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.openstorage.api.StorageNode.SecurityStatus} value
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.setSecurityStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional SchedulerTopology scheduler_topology = 20;
 * @return {?proto.openstorage.api.SchedulerTopology}
 */
proto.openstorage.api.StorageNode.prototype.getSchedulerTopology = function() {
  return /** @type{?proto.openstorage.api.SchedulerTopology} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SchedulerTopology, 20));
};


/**
 * @param {?proto.openstorage.api.SchedulerTopology|undefined} value
 * @return {!proto.openstorage.api.StorageNode} returns this
*/
proto.openstorage.api.StorageNode.prototype.setSchedulerTopology = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageNode} returns this
 */
proto.openstorage.api.StorageNode.prototype.clearSchedulerTopology = function() {
  return this.setSchedulerTopology(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageNode.prototype.hasSchedulerTopology = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageCluster.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageCluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageCluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageCluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageCluster}
 */
proto.openstorage.api.StorageCluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageCluster;
  return proto.openstorage.api.StorageCluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageCluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageCluster}
 */
proto.openstorage.api.StorageCluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageCluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageCluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageCluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageCluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.openstorage.api.Status}
 */
proto.openstorage.api.StorageCluster.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.Status} value
 * @return {!proto.openstorage.api.StorageCluster} returns this
 */
proto.openstorage.api.StorageCluster.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.openstorage.api.StorageCluster.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageCluster} returns this
 */
proto.openstorage.api.StorageCluster.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.openstorage.api.StorageCluster.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageCluster} returns this
 */
proto.openstorage.api.StorageCluster.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    region: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    anonymousbucketaccessmode: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketCreateRequest}
 */
proto.openstorage.api.BucketCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketCreateRequest;
  return proto.openstorage.api.BucketCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketCreateRequest}
 */
proto.openstorage.api.BucketCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = /** @type {!proto.openstorage.api.AnonymousBucketAccessMode} */ (reader.readEnum());
      msg.setAnonymousbucketaccessmode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnonymousbucketaccessmode();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.BucketCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketCreateRequest} returns this
 */
proto.openstorage.api.BucketCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region = 2;
 * @return {string}
 */
proto.openstorage.api.BucketCreateRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketCreateRequest} returns this
 */
proto.openstorage.api.BucketCreateRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.openstorage.api.BucketCreateRequest.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketCreateRequest} returns this
 */
proto.openstorage.api.BucketCreateRequest.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AnonymousBucketAccessMode anonymousBucketAccessMode = 4;
 * @return {!proto.openstorage.api.AnonymousBucketAccessMode}
 */
proto.openstorage.api.BucketCreateRequest.prototype.getAnonymousbucketaccessmode = function() {
  return /** @type {!proto.openstorage.api.AnonymousBucketAccessMode} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.openstorage.api.AnonymousBucketAccessMode} value
 * @return {!proto.openstorage.api.BucketCreateRequest} returns this
 */
proto.openstorage.api.BucketCreateRequest.prototype.setAnonymousbucketaccessmode = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketCreateResponse}
 */
proto.openstorage.api.BucketCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketCreateResponse;
  return proto.openstorage.api.BucketCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketCreateResponse}
 */
proto.openstorage.api.BucketCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bucket_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketCreateResponse.prototype.getBucketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketCreateResponse} returns this
 */
proto.openstorage.api.BucketCreateResponse.prototype.setBucketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    region: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clearBucket: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketDeleteRequest}
 */
proto.openstorage.api.BucketDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketDeleteRequest;
  return proto.openstorage.api.BucketDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketDeleteRequest}
 */
proto.openstorage.api.BucketDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearBucket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClearBucket();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string bucket_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.getBucketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketDeleteRequest} returns this
 */
proto.openstorage.api.BucketDeleteRequest.prototype.setBucketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region = 2;
 * @return {string}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketDeleteRequest} returns this
 */
proto.openstorage.api.BucketDeleteRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketDeleteRequest} returns this
 */
proto.openstorage.api.BucketDeleteRequest.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool clear_bucket = 4;
 * @return {boolean}
 */
proto.openstorage.api.BucketDeleteRequest.prototype.getClearBucket = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.BucketDeleteRequest} returns this
 */
proto.openstorage.api.BucketDeleteRequest.prototype.setClearBucket = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketDeleteResponse}
 */
proto.openstorage.api.BucketDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketDeleteResponse;
  return proto.openstorage.api.BucketDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketDeleteResponse}
 */
proto.openstorage.api.BucketDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketGrantAccessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketGrantAccessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketGrantAccessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accessPolicy: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketGrantAccessRequest}
 */
proto.openstorage.api.BucketGrantAccessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketGrantAccessRequest;
  return proto.openstorage.api.BucketGrantAccessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketGrantAccessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketGrantAccessRequest}
 */
proto.openstorage.api.BucketGrantAccessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketGrantAccessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketGrantAccessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketGrantAccessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccessPolicy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bucket_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.getBucketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketGrantAccessRequest} returns this
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.setBucketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_name = 2;
 * @return {string}
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketGrantAccessRequest} returns this
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string access_policy = 3;
 * @return {string}
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.getAccessPolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketGrantAccessRequest} returns this
 */
proto.openstorage.api.BucketGrantAccessRequest.prototype.setAccessPolicy = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketGrantAccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketGrantAccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketGrantAccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentials: (f = msg.getCredentials()) && proto.openstorage.api.BucketAccessCredentials.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketGrantAccessResponse}
 */
proto.openstorage.api.BucketGrantAccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketGrantAccessResponse;
  return proto.openstorage.api.BucketGrantAccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketGrantAccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketGrantAccessResponse}
 */
proto.openstorage.api.BucketGrantAccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.BucketAccessCredentials;
      reader.readMessage(value,proto.openstorage.api.BucketAccessCredentials.deserializeBinaryFromReader);
      msg.setCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketGrantAccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketGrantAccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketGrantAccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentials();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.BucketAccessCredentials.serializeBinaryToWriter
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketGrantAccessResponse} returns this
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BucketAccessCredentials credentials = 2;
 * @return {?proto.openstorage.api.BucketAccessCredentials}
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.getCredentials = function() {
  return /** @type{?proto.openstorage.api.BucketAccessCredentials} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.BucketAccessCredentials, 2));
};


/**
 * @param {?proto.openstorage.api.BucketAccessCredentials|undefined} value
 * @return {!proto.openstorage.api.BucketGrantAccessResponse} returns this
*/
proto.openstorage.api.BucketGrantAccessResponse.prototype.setCredentials = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.BucketGrantAccessResponse} returns this
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.clearCredentials = function() {
  return this.setCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.BucketGrantAccessResponse.prototype.hasCredentials = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketRevokeAccessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketRevokeAccessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketRevokeAccessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketRevokeAccessRequest}
 */
proto.openstorage.api.BucketRevokeAccessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketRevokeAccessRequest;
  return proto.openstorage.api.BucketRevokeAccessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketRevokeAccessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketRevokeAccessRequest}
 */
proto.openstorage.api.BucketRevokeAccessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketRevokeAccessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketRevokeAccessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketRevokeAccessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bucket_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.getBucketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketRevokeAccessRequest} returns this
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.setBucketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketRevokeAccessRequest} returns this
 */
proto.openstorage.api.BucketRevokeAccessRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketRevokeAccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketRevokeAccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketRevokeAccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketRevokeAccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketRevokeAccessResponse}
 */
proto.openstorage.api.BucketRevokeAccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketRevokeAccessResponse;
  return proto.openstorage.api.BucketRevokeAccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketRevokeAccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketRevokeAccessResponse}
 */
proto.openstorage.api.BucketRevokeAccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketRevokeAccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketRevokeAccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketRevokeAccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketRevokeAccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.BucketAccessCredentials.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.BucketAccessCredentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.BucketAccessCredentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketAccessCredentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessKeyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secretAccessKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.BucketAccessCredentials}
 */
proto.openstorage.api.BucketAccessCredentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.BucketAccessCredentials;
  return proto.openstorage.api.BucketAccessCredentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.BucketAccessCredentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.BucketAccessCredentials}
 */
proto.openstorage.api.BucketAccessCredentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessKeyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretAccessKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.BucketAccessCredentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.BucketAccessCredentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.BucketAccessCredentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.BucketAccessCredentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessKeyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecretAccessKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string access_key_id = 1;
 * @return {string}
 */
proto.openstorage.api.BucketAccessCredentials.prototype.getAccessKeyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketAccessCredentials} returns this
 */
proto.openstorage.api.BucketAccessCredentials.prototype.setAccessKeyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret_access_key = 2;
 * @return {string}
 */
proto.openstorage.api.BucketAccessCredentials.prototype.getSecretAccessKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.BucketAccessCredentials} returns this
 */
proto.openstorage.api.BucketAccessCredentials.prototype.setSecretAccessKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePolicy: (f = msg.getStoragePolicy()) && proto.openstorage.api.SdkStoragePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyCreateRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader);
      msg.setStoragePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkStoragePolicy storage_policy = 1;
 * @return {?proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.getStoragePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkStoragePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkStoragePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkStoragePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest} returns this
*/
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateRequest} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.clearStoragePolicy = function() {
  return this.setStoragePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateRequest.prototype.hasStoragePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyCreateResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyCreateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePoliciesList: jspb.Message.toObjectList(msg.getStoragePoliciesList(),
    proto.openstorage.api.SdkStoragePolicy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader);
      msg.addStoragePolicies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkStoragePolicy storage_policies = 1;
 * @return {!Array<!proto.openstorage.api.SdkStoragePolicy>}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.getStoragePoliciesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkStoragePolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkStoragePolicy, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkStoragePolicy>} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse} returns this
*/
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.setStoragePoliciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkStoragePolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.addStoragePolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkStoragePolicy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyEnumerateResponse.prototype.clearStoragePoliciesList = function() {
  return this.setStoragePoliciesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyInspectRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectRequest} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePolicy: (f = msg.getStoragePolicy()) && proto.openstorage.api.SdkStoragePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyInspectResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader);
      msg.setStoragePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkStoragePolicy storage_policy = 1;
 * @return {?proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.getStoragePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkStoragePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkStoragePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkStoragePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse} returns this
*/
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyInspectResponse} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.clearStoragePolicy = function() {
  return this.setStoragePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkOpenStoragePolicyInspectResponse.prototype.hasStoragePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePolicy: (f = msg.getStoragePolicy()) && proto.openstorage.api.SdkStoragePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader);
      msg.setStoragePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkStoragePolicy storage_policy = 1;
 * @return {?proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.getStoragePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkStoragePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkStoragePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkStoragePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest} returns this
*/
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.clearStoragePolicy = function() {
  return this.setStoragePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateRequest.prototype.hasStoragePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest;
  return proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse;
  return proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicySetDefaultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyReleaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest;
  return proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePolicy: (f = msg.getStoragePolicy()) && proto.openstorage.api.SdkStoragePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse;
  return proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkStoragePolicy.deserializeBinaryFromReader);
      msg.setStoragePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkStoragePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkStoragePolicy storage_policy = 1;
 * @return {?proto.openstorage.api.SdkStoragePolicy}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.getStoragePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkStoragePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkStoragePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkStoragePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse} returns this
*/
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse} returns this
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.clearStoragePolicy = function() {
  return this.setStoragePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkOpenStoragePolicyDefaultInspectResponse.prototype.hasStoragePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedulePolicy: (f = msg.getSchedulePolicy()) && proto.openstorage.api.SdkSchedulePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyCreateRequest;
  return proto.openstorage.api.SdkSchedulePolicyCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkSchedulePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader);
      msg.setSchedulePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedulePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkSchedulePolicy schedule_policy = 1;
 * @return {?proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.getSchedulePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateRequest} returns this
*/
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.setSchedulePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateRequest} returns this
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.clearSchedulePolicy = function() {
  return this.setSchedulePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyCreateRequest.prototype.hasSchedulePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyCreateResponse;
  return proto.openstorage.api.SdkSchedulePolicyCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyCreateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedulePolicy: (f = msg.getSchedulePolicy()) && proto.openstorage.api.SdkSchedulePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyUpdateRequest;
  return proto.openstorage.api.SdkSchedulePolicyUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkSchedulePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader);
      msg.setSchedulePolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedulePolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkSchedulePolicy schedule_policy = 1;
 * @return {?proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.getSchedulePolicy = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest} returns this
*/
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.setSchedulePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateRequest} returns this
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.clearSchedulePolicy = function() {
  return this.setSchedulePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateRequest.prototype.hasSchedulePolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyUpdateResponse;
  return proto.openstorage.api.SdkSchedulePolicyUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyUpdateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyEnumerateRequest;
  return proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateRequest}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    policiesList: jspb.Message.toObjectList(msg.getPoliciesList(),
    proto.openstorage.api.SdkSchedulePolicy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyEnumerateResponse;
  return proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkSchedulePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader);
      msg.addPolicies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkSchedulePolicy policies = 1;
 * @return {!Array<!proto.openstorage.api.SdkSchedulePolicy>}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.getPoliciesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkSchedulePolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkSchedulePolicy, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkSchedulePolicy>} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse} returns this
*/
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.setPoliciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkSchedulePolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.addPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkSchedulePolicy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkSchedulePolicyEnumerateResponse} returns this
 */
proto.openstorage.api.SdkSchedulePolicyEnumerateResponse.prototype.clearPoliciesList = function() {
  return this.setPoliciesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectRequest}
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyInspectRequest;
  return proto.openstorage.api.SdkSchedulePolicyInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectRequest}
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectRequest} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInspectRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    policy: (f = msg.getPolicy()) && proto.openstorage.api.SdkSchedulePolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectResponse}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyInspectResponse;
  return proto.openstorage.api.SdkSchedulePolicyInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectResponse}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkSchedulePolicy;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader);
      msg.setPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkSchedulePolicy policy = 1;
 * @return {?proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.getPolicy = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicy, 1));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicy|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectResponse} returns this
*/
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.setPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInspectResponse} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.clearPolicy = function() {
  return this.setPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyInspectResponse.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyDeleteRequest;
  return proto.openstorage.api.SdkSchedulePolicyDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyDeleteRequest} returns this
 */
proto.openstorage.api.SdkSchedulePolicyDeleteRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyDeleteResponse}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyDeleteResponse;
  return proto.openstorage.api.SdkSchedulePolicyDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyDeleteResponse}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyIntervalDaily.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.toObject = function(includeInstance, msg) {
  var f, obj = {
    hour: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minute: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyIntervalDaily;
  return proto.openstorage.api.SdkSchedulePolicyIntervalDaily.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHour(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyIntervalDaily.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHour();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinute();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 hour = 1;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.setHour = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 minute = 2;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalDaily} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalDaily.prototype.setMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hour: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minute: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyIntervalWeekly;
  return proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.SdkTimeWeekday} */ (reader.readEnum());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHour(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHour();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMinute();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional SdkTimeWeekday day = 1;
 * @return {!proto.openstorage.api.SdkTimeWeekday}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.getDay = function() {
  return /** @type {!proto.openstorage.api.SdkTimeWeekday} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.SdkTimeWeekday} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.setDay = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 hour = 2;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.setHour = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 minute = 3;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.prototype.setMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hour: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minute: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyIntervalMonthly;
  return proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHour(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHour();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMinute();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 day = 1;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 hour = 2;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.setHour = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 minute = 3;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.prototype.setMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.toObject = function(includeInstance, msg) {
  var f, obj = {
    seconds: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic;
  return proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic} returns this
 */
proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.prototype.setSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_ = [[200,201,202,203]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.PeriodTypeCase = {
  PERIOD_TYPE_NOT_SET: 0,
  DAILY: 200,
  WEEKLY: 201,
  MONTHLY: 202,
  PERIODIC: 203
};

/**
 * @return {proto.openstorage.api.SdkSchedulePolicyInterval.PeriodTypeCase}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getPeriodTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkSchedulePolicyInterval.PeriodTypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicyInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicyInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    retain: jspb.Message.getFieldWithDefault(msg, 1, 0),
    daily: (f = msg.getDaily()) && proto.openstorage.api.SdkSchedulePolicyIntervalDaily.toObject(includeInstance, f),
    weekly: (f = msg.getWeekly()) && proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.toObject(includeInstance, f),
    monthly: (f = msg.getMonthly()) && proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.toObject(includeInstance, f),
    periodic: (f = msg.getPeriodic()) && proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicyInterval;
  return proto.openstorage.api.SdkSchedulePolicyInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRetain(value);
      break;
    case 200:
      var value = new proto.openstorage.api.SdkSchedulePolicyIntervalDaily;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyIntervalDaily.deserializeBinaryFromReader);
      msg.setDaily(value);
      break;
    case 201:
      var value = new proto.openstorage.api.SdkSchedulePolicyIntervalWeekly;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.deserializeBinaryFromReader);
      msg.setWeekly(value);
      break;
    case 202:
      var value = new proto.openstorage.api.SdkSchedulePolicyIntervalMonthly;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.deserializeBinaryFromReader);
      msg.setMonthly(value);
      break;
    case 203:
      var value = new proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.deserializeBinaryFromReader);
      msg.setPeriodic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicyInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicyInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicyInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetain();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDaily();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      proto.openstorage.api.SdkSchedulePolicyIntervalDaily.serializeBinaryToWriter
    );
  }
  f = message.getWeekly();
  if (f != null) {
    writer.writeMessage(
      201,
      f,
      proto.openstorage.api.SdkSchedulePolicyIntervalWeekly.serializeBinaryToWriter
    );
  }
  f = message.getMonthly();
  if (f != null) {
    writer.writeMessage(
      202,
      f,
      proto.openstorage.api.SdkSchedulePolicyIntervalMonthly.serializeBinaryToWriter
    );
  }
  f = message.getPeriodic();
  if (f != null) {
    writer.writeMessage(
      203,
      f,
      proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 retain = 1;
 * @return {number}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getRetain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.setRetain = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional SdkSchedulePolicyIntervalDaily daily = 200;
 * @return {?proto.openstorage.api.SdkSchedulePolicyIntervalDaily}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getDaily = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicyIntervalDaily} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicyIntervalDaily, 200));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicyIntervalDaily|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
*/
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.setDaily = function(value) {
  return jspb.Message.setOneofWrapperField(this, 200, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.clearDaily = function() {
  return this.setDaily(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.hasDaily = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional SdkSchedulePolicyIntervalWeekly weekly = 201;
 * @return {?proto.openstorage.api.SdkSchedulePolicyIntervalWeekly}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getWeekly = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicyIntervalWeekly} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicyIntervalWeekly, 201));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicyIntervalWeekly|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
*/
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.setWeekly = function(value) {
  return jspb.Message.setOneofWrapperField(this, 201, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.clearWeekly = function() {
  return this.setWeekly(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.hasWeekly = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional SdkSchedulePolicyIntervalMonthly monthly = 202;
 * @return {?proto.openstorage.api.SdkSchedulePolicyIntervalMonthly}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getMonthly = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicyIntervalMonthly} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicyIntervalMonthly, 202));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicyIntervalMonthly|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
*/
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.setMonthly = function(value) {
  return jspb.Message.setOneofWrapperField(this, 202, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.clearMonthly = function() {
  return this.setMonthly(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.hasMonthly = function() {
  return jspb.Message.getField(this, 202) != null;
};


/**
 * optional SdkSchedulePolicyIntervalPeriodic periodic = 203;
 * @return {?proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.getPeriodic = function() {
  return /** @type{?proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic, 203));
};


/**
 * @param {?proto.openstorage.api.SdkSchedulePolicyIntervalPeriodic|undefined} value
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
*/
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.setPeriodic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 203, proto.openstorage.api.SdkSchedulePolicyInterval.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval} returns this
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.clearPeriodic = function() {
  return this.setPeriodic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkSchedulePolicyInterval.prototype.hasPeriodic = function() {
  return jspb.Message.getField(this, 203) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkSchedulePolicy.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkSchedulePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkSchedulePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schedulesList: jspb.Message.toObjectList(msg.getSchedulesList(),
    proto.openstorage.api.SdkSchedulePolicyInterval.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkSchedulePolicy;
  return proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkSchedulePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkSchedulePolicy}
 */
proto.openstorage.api.SdkSchedulePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkSchedulePolicyInterval;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyInterval.deserializeBinaryFromReader);
      msg.addSchedules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkSchedulePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkSchedulePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchedulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.SdkSchedulePolicyInterval.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkSchedulePolicy} returns this
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SdkSchedulePolicyInterval schedules = 2;
 * @return {!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>}
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.getSchedulesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkSchedulePolicyInterval, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>} value
 * @return {!proto.openstorage.api.SdkSchedulePolicy} returns this
*/
proto.openstorage.api.SdkSchedulePolicy.prototype.setSchedulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.SdkSchedulePolicyInterval=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval}
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.addSchedules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.SdkSchedulePolicyInterval, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkSchedulePolicy} returns this
 */
proto.openstorage.api.SdkSchedulePolicy.prototype.clearSchedulesList = function() {
  return this.setSchedulesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_ = [[200,201,202,203]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCredentialCreateRequest.CredentialTypeCase = {
  CREDENTIAL_TYPE_NOT_SET: 0,
  AWS_CREDENTIAL: 200,
  AZURE_CREDENTIAL: 201,
  GOOGLE_CREDENTIAL: 202,
  NFS_CREDENTIAL: 203
};

/**
 * @return {proto.openstorage.api.SdkCredentialCreateRequest.CredentialTypeCase}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getCredentialTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkCredentialCreateRequest.CredentialTypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucket: jspb.Message.getFieldWithDefault(msg, 2, ""),
    encryptionKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    useProxy: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    iamPolicy: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    s3StorageClass: jspb.Message.getFieldWithDefault(msg, 7, ""),
    awsCredential: (f = msg.getAwsCredential()) && proto.openstorage.api.SdkAwsCredentialRequest.toObject(includeInstance, f),
    azureCredential: (f = msg.getAzureCredential()) && proto.openstorage.api.SdkAzureCredentialRequest.toObject(includeInstance, f),
    googleCredential: (f = msg.getGoogleCredential()) && proto.openstorage.api.SdkGoogleCredentialRequest.toObject(includeInstance, f),
    nfsCredential: (f = msg.getNfsCredential()) && proto.openstorage.api.SdkNfsCredentialRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialCreateRequest;
  return proto.openstorage.api.SdkCredentialCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptionKey(value);
      break;
    case 4:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseProxy(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIamPolicy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3StorageClass(value);
      break;
    case 200:
      var value = new proto.openstorage.api.SdkAwsCredentialRequest;
      reader.readMessage(value,proto.openstorage.api.SdkAwsCredentialRequest.deserializeBinaryFromReader);
      msg.setAwsCredential(value);
      break;
    case 201:
      var value = new proto.openstorage.api.SdkAzureCredentialRequest;
      reader.readMessage(value,proto.openstorage.api.SdkAzureCredentialRequest.deserializeBinaryFromReader);
      msg.setAzureCredential(value);
      break;
    case 202:
      var value = new proto.openstorage.api.SdkGoogleCredentialRequest;
      reader.readMessage(value,proto.openstorage.api.SdkGoogleCredentialRequest.deserializeBinaryFromReader);
      msg.setGoogleCredential(value);
      break;
    case 203:
      var value = new proto.openstorage.api.SdkNfsCredentialRequest;
      reader.readMessage(value,proto.openstorage.api.SdkNfsCredentialRequest.deserializeBinaryFromReader);
      msg.setNfsCredential(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncryptionKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getUseProxy();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIamPolicy();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getS3StorageClass();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAwsCredential();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      proto.openstorage.api.SdkAwsCredentialRequest.serializeBinaryToWriter
    );
  }
  f = message.getAzureCredential();
  if (f != null) {
    writer.writeMessage(
      201,
      f,
      proto.openstorage.api.SdkAzureCredentialRequest.serializeBinaryToWriter
    );
  }
  f = message.getGoogleCredential();
  if (f != null) {
    writer.writeMessage(
      202,
      f,
      proto.openstorage.api.SdkGoogleCredentialRequest.serializeBinaryToWriter
    );
  }
  f = message.getNfsCredential();
  if (f != null) {
    writer.writeMessage(
      203,
      f,
      proto.openstorage.api.SdkNfsCredentialRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bucket = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setBucket = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string encryption_key = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getEncryptionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setEncryptionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Ownership ownership = 4;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 4));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
*/
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool use_proxy = 5;
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getUseProxy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setUseProxy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool iam_policy = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getIamPolicy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setIamPolicy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string s3_storage_class = 7;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getS3StorageClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setS3StorageClass = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional SdkAwsCredentialRequest aws_credential = 200;
 * @return {?proto.openstorage.api.SdkAwsCredentialRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getAwsCredential = function() {
  return /** @type{?proto.openstorage.api.SdkAwsCredentialRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAwsCredentialRequest, 200));
};


/**
 * @param {?proto.openstorage.api.SdkAwsCredentialRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
*/
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setAwsCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 200, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.clearAwsCredential = function() {
  return this.setAwsCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.hasAwsCredential = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional SdkAzureCredentialRequest azure_credential = 201;
 * @return {?proto.openstorage.api.SdkAzureCredentialRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getAzureCredential = function() {
  return /** @type{?proto.openstorage.api.SdkAzureCredentialRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAzureCredentialRequest, 201));
};


/**
 * @param {?proto.openstorage.api.SdkAzureCredentialRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
*/
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setAzureCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 201, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.clearAzureCredential = function() {
  return this.setAzureCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.hasAzureCredential = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional SdkGoogleCredentialRequest google_credential = 202;
 * @return {?proto.openstorage.api.SdkGoogleCredentialRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getGoogleCredential = function() {
  return /** @type{?proto.openstorage.api.SdkGoogleCredentialRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkGoogleCredentialRequest, 202));
};


/**
 * @param {?proto.openstorage.api.SdkGoogleCredentialRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
*/
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setGoogleCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 202, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.clearGoogleCredential = function() {
  return this.setGoogleCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.hasGoogleCredential = function() {
  return jspb.Message.getField(this, 202) != null;
};


/**
 * optional SdkNfsCredentialRequest nfs_credential = 203;
 * @return {?proto.openstorage.api.SdkNfsCredentialRequest}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.getNfsCredential = function() {
  return /** @type{?proto.openstorage.api.SdkNfsCredentialRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkNfsCredentialRequest, 203));
};


/**
 * @param {?proto.openstorage.api.SdkNfsCredentialRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
*/
proto.openstorage.api.SdkCredentialCreateRequest.prototype.setNfsCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 203, proto.openstorage.api.SdkCredentialCreateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialCreateRequest} returns this
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.clearNfsCredential = function() {
  return this.setNfsCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialCreateRequest.prototype.hasNfsCredential = function() {
  return jspb.Message.getField(this, 203) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialCreateResponse}
 */
proto.openstorage.api.SdkCredentialCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialCreateResponse;
  return proto.openstorage.api.SdkCredentialCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialCreateResponse}
 */
proto.openstorage.api.SdkCredentialCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialCreateResponse.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialCreateResponse} returns this
 */
proto.openstorage.api.SdkCredentialCreateResponse.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updateReq: (f = msg.getUpdateReq()) && proto.openstorage.api.SdkCredentialCreateRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialUpdateRequest}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialUpdateRequest;
  return proto.openstorage.api.SdkCredentialUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialUpdateRequest}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkCredentialCreateRequest;
      reader.readMessage(value,proto.openstorage.api.SdkCredentialCreateRequest.deserializeBinaryFromReader);
      msg.setUpdateReq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdateReq();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.SdkCredentialCreateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialUpdateRequest} returns this
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SdkCredentialCreateRequest update_req = 2;
 * @return {?proto.openstorage.api.SdkCredentialCreateRequest}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.getUpdateReq = function() {
  return /** @type{?proto.openstorage.api.SdkCredentialCreateRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCredentialCreateRequest, 2));
};


/**
 * @param {?proto.openstorage.api.SdkCredentialCreateRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialUpdateRequest} returns this
*/
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.setUpdateReq = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialUpdateRequest} returns this
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.clearUpdateReq = function() {
  return this.setUpdateReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialUpdateRequest.prototype.hasUpdateReq = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialUpdateResponse}
 */
proto.openstorage.api.SdkCredentialUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialUpdateResponse;
  return proto.openstorage.api.SdkCredentialUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialUpdateResponse}
 */
proto.openstorage.api.SdkCredentialUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAwsCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAwsCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAwsCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secretKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    disableSsl: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    disablePathStyle: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest}
 */
proto.openstorage.api.SdkAwsCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAwsCredentialRequest;
  return proto.openstorage.api.SdkAwsCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAwsCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest}
 */
proto.openstorage.api.SdkAwsCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableSsl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisablePathStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAwsCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAwsCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAwsCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecretKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisableSsl();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDisablePathStyle();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string access_key = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getAccessKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setAccessKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret_key = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool disable_ssl = 5;
 * @return {boolean}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getDisableSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setDisableSsl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool disable_path_style = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.getDisablePathStyle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkAwsCredentialRequest} returns this
 */
proto.openstorage.api.SdkAwsCredentialRequest.prototype.setDisablePathStyle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAzureCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAzureCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAzureCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAzureCredentialRequest}
 */
proto.openstorage.api.SdkAzureCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAzureCredentialRequest;
  return proto.openstorage.api.SdkAzureCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAzureCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAzureCredentialRequest}
 */
proto.openstorage.api.SdkAzureCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAzureCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAzureCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAzureCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAzureCredentialRequest} returns this
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_key = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.getAccountKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAzureCredentialRequest} returns this
 */
proto.openstorage.api.SdkAzureCredentialRequest.prototype.setAccountKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGoogleCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGoogleCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGoogleCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jsonKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGoogleCredentialRequest}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGoogleCredentialRequest;
  return proto.openstorage.api.SdkGoogleCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGoogleCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGoogleCredentialRequest}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGoogleCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGoogleCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGoogleCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJsonKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkGoogleCredentialRequest} returns this
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string json_key = 2;
 * @return {string}
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.getJsonKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkGoogleCredentialRequest} returns this
 */
proto.openstorage.api.SdkGoogleCredentialRequest.prototype.setJsonKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNfsCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNfsCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNfsCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    server: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mountOpts: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timeoutSeconds: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest}
 */
proto.openstorage.api.SdkNfsCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNfsCredentialRequest;
  return proto.openstorage.api.SdkNfsCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNfsCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest}
 */
proto.openstorage.api.SdkNfsCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountOpts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeoutSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNfsCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNfsCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNfsCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMountOpts();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimeoutSeconds();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string server = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.getServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest} returns this
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.setServer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sub_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.getSubPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest} returns this
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.setSubPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mount_opts = 3;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.getMountOpts = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest} returns this
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.setMountOpts = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 timeout_seconds = 4;
 * @return {number}
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.getTimeoutSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkNfsCredentialRequest} returns this
 */
proto.openstorage.api.SdkNfsCredentialRequest.prototype.setTimeoutSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAwsCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAwsCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAwsCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    disableSsl: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    disablePathStyle: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    s3StorageClass: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse}
 */
proto.openstorage.api.SdkAwsCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAwsCredentialResponse;
  return proto.openstorage.api.SdkAwsCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAwsCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse}
 */
proto.openstorage.api.SdkAwsCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableSsl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisablePathStyle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3StorageClass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAwsCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAwsCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAwsCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisableSsl();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDisablePathStyle();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getS3StorageClass();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string access_key = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getAccessKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setAccessKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool disable_ssl = 5;
 * @return {boolean}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getDisableSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setDisableSsl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool disable_path_style = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getDisablePathStyle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setDisablePathStyle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string s3_storage_class = 7;
 * @return {string}
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.getS3StorageClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAwsCredentialResponse} returns this
 */
proto.openstorage.api.SdkAwsCredentialResponse.prototype.setS3StorageClass = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAzureCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAzureCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAzureCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAzureCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAzureCredentialResponse}
 */
proto.openstorage.api.SdkAzureCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAzureCredentialResponse;
  return proto.openstorage.api.SdkAzureCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAzureCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAzureCredentialResponse}
 */
proto.openstorage.api.SdkAzureCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAzureCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAzureCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAzureCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAzureCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account_name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAzureCredentialResponse.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAzureCredentialResponse} returns this
 */
proto.openstorage.api.SdkAzureCredentialResponse.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGoogleCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGoogleCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGoogleCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGoogleCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGoogleCredentialResponse}
 */
proto.openstorage.api.SdkGoogleCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGoogleCredentialResponse;
  return proto.openstorage.api.SdkGoogleCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGoogleCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGoogleCredentialResponse}
 */
proto.openstorage.api.SdkGoogleCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGoogleCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGoogleCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGoogleCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGoogleCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkGoogleCredentialResponse.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkGoogleCredentialResponse} returns this
 */
proto.openstorage.api.SdkGoogleCredentialResponse.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNfsCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNfsCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNfsCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    server: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mountOpts: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timeoutSeconds: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse}
 */
proto.openstorage.api.SdkNfsCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNfsCredentialResponse;
  return proto.openstorage.api.SdkNfsCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNfsCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse}
 */
proto.openstorage.api.SdkNfsCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountOpts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeoutSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNfsCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNfsCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNfsCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMountOpts();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimeoutSeconds();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string server = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.getServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse} returns this
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.setServer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sub_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.getSubPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse} returns this
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.setSubPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mount_opts = 3;
 * @return {string}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.getMountOpts = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse} returns this
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.setMountOpts = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 timeout_seconds = 4;
 * @return {number}
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.getTimeoutSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkNfsCredentialResponse} returns this
 */
proto.openstorage.api.SdkNfsCredentialResponse.prototype.setTimeoutSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialEnumerateRequest}
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialEnumerateRequest;
  return proto.openstorage.api.SdkCredentialEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialEnumerateRequest}
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialEnumerateResponse}
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialEnumerateResponse;
  return proto.openstorage.api.SdkCredentialEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialEnumerateResponse}
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCredentialIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string credential_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.getCredentialIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkCredentialEnumerateResponse} returns this
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.setCredentialIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCredentialEnumerateResponse} returns this
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.addCredentialIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCredentialEnumerateResponse} returns this
 */
proto.openstorage.api.SdkCredentialEnumerateResponse.prototype.clearCredentialIdsList = function() {
  return this.setCredentialIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialInspectRequest}
 */
proto.openstorage.api.SdkCredentialInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialInspectRequest;
  return proto.openstorage.api.SdkCredentialInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialInspectRequest}
 */
proto.openstorage.api.SdkCredentialInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialInspectRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialInspectRequest} returns this
 */
proto.openstorage.api.SdkCredentialInspectRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_ = [[200,201,202,203]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCredentialInspectResponse.CredentialTypeCase = {
  CREDENTIAL_TYPE_NOT_SET: 0,
  AWS_CREDENTIAL: 200,
  AZURE_CREDENTIAL: 201,
  GOOGLE_CREDENTIAL: 202,
  NFS_CREDENTIAL: 203
};

/**
 * @return {proto.openstorage.api.SdkCredentialInspectResponse.CredentialTypeCase}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getCredentialTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkCredentialInspectResponse.CredentialTypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bucket: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    useProxy: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    iamPolicy: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    awsCredential: (f = msg.getAwsCredential()) && proto.openstorage.api.SdkAwsCredentialResponse.toObject(includeInstance, f),
    azureCredential: (f = msg.getAzureCredential()) && proto.openstorage.api.SdkAzureCredentialResponse.toObject(includeInstance, f),
    googleCredential: (f = msg.getGoogleCredential()) && proto.openstorage.api.SdkGoogleCredentialResponse.toObject(includeInstance, f),
    nfsCredential: (f = msg.getNfsCredential()) && proto.openstorage.api.SdkNfsCredentialResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialInspectResponse;
  return proto.openstorage.api.SdkCredentialInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 4:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseProxy(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIamPolicy(value);
      break;
    case 200:
      var value = new proto.openstorage.api.SdkAwsCredentialResponse;
      reader.readMessage(value,proto.openstorage.api.SdkAwsCredentialResponse.deserializeBinaryFromReader);
      msg.setAwsCredential(value);
      break;
    case 201:
      var value = new proto.openstorage.api.SdkAzureCredentialResponse;
      reader.readMessage(value,proto.openstorage.api.SdkAzureCredentialResponse.deserializeBinaryFromReader);
      msg.setAzureCredential(value);
      break;
    case 202:
      var value = new proto.openstorage.api.SdkGoogleCredentialResponse;
      reader.readMessage(value,proto.openstorage.api.SdkGoogleCredentialResponse.deserializeBinaryFromReader);
      msg.setGoogleCredential(value);
      break;
    case 203:
      var value = new proto.openstorage.api.SdkNfsCredentialResponse;
      reader.readMessage(value,proto.openstorage.api.SdkNfsCredentialResponse.deserializeBinaryFromReader);
      msg.setNfsCredential(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getUseProxy();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIamPolicy();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAwsCredential();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      proto.openstorage.api.SdkAwsCredentialResponse.serializeBinaryToWriter
    );
  }
  f = message.getAzureCredential();
  if (f != null) {
    writer.writeMessage(
      201,
      f,
      proto.openstorage.api.SdkAzureCredentialResponse.serializeBinaryToWriter
    );
  }
  f = message.getGoogleCredential();
  if (f != null) {
    writer.writeMessage(
      202,
      f,
      proto.openstorage.api.SdkGoogleCredentialResponse.serializeBinaryToWriter
    );
  }
  f = message.getNfsCredential();
  if (f != null) {
    writer.writeMessage(
      203,
      f,
      proto.openstorage.api.SdkNfsCredentialResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bucket = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setBucket = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Ownership ownership = 4;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 4));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
*/
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool use_proxy = 5;
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getUseProxy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setUseProxy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool iam_policy = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getIamPolicy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setIamPolicy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional SdkAwsCredentialResponse aws_credential = 200;
 * @return {?proto.openstorage.api.SdkAwsCredentialResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getAwsCredential = function() {
  return /** @type{?proto.openstorage.api.SdkAwsCredentialResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAwsCredentialResponse, 200));
};


/**
 * @param {?proto.openstorage.api.SdkAwsCredentialResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
*/
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setAwsCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 200, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.clearAwsCredential = function() {
  return this.setAwsCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.hasAwsCredential = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional SdkAzureCredentialResponse azure_credential = 201;
 * @return {?proto.openstorage.api.SdkAzureCredentialResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getAzureCredential = function() {
  return /** @type{?proto.openstorage.api.SdkAzureCredentialResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkAzureCredentialResponse, 201));
};


/**
 * @param {?proto.openstorage.api.SdkAzureCredentialResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
*/
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setAzureCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 201, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.clearAzureCredential = function() {
  return this.setAzureCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.hasAzureCredential = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional SdkGoogleCredentialResponse google_credential = 202;
 * @return {?proto.openstorage.api.SdkGoogleCredentialResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getGoogleCredential = function() {
  return /** @type{?proto.openstorage.api.SdkGoogleCredentialResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkGoogleCredentialResponse, 202));
};


/**
 * @param {?proto.openstorage.api.SdkGoogleCredentialResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
*/
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setGoogleCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 202, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.clearGoogleCredential = function() {
  return this.setGoogleCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.hasGoogleCredential = function() {
  return jspb.Message.getField(this, 202) != null;
};


/**
 * optional SdkNfsCredentialResponse nfs_credential = 203;
 * @return {?proto.openstorage.api.SdkNfsCredentialResponse}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.getNfsCredential = function() {
  return /** @type{?proto.openstorage.api.SdkNfsCredentialResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkNfsCredentialResponse, 203));
};


/**
 * @param {?proto.openstorage.api.SdkNfsCredentialResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
*/
proto.openstorage.api.SdkCredentialInspectResponse.prototype.setNfsCredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 203, proto.openstorage.api.SdkCredentialInspectResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCredentialInspectResponse} returns this
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.clearNfsCredential = function() {
  return this.setNfsCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCredentialInspectResponse.prototype.hasNfsCredential = function() {
  return jspb.Message.getField(this, 203) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialDeleteRequest}
 */
proto.openstorage.api.SdkCredentialDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialDeleteRequest;
  return proto.openstorage.api.SdkCredentialDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialDeleteRequest}
 */
proto.openstorage.api.SdkCredentialDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialDeleteRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialDeleteRequest} returns this
 */
proto.openstorage.api.SdkCredentialDeleteRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialDeleteResponse}
 */
proto.openstorage.api.SdkCredentialDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialDeleteResponse;
  return proto.openstorage.api.SdkCredentialDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialDeleteResponse}
 */
proto.openstorage.api.SdkCredentialDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialValidateRequest}
 */
proto.openstorage.api.SdkCredentialValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialValidateRequest;
  return proto.openstorage.api.SdkCredentialValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialValidateRequest}
 */
proto.openstorage.api.SdkCredentialValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialValidateRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialValidateRequest} returns this
 */
proto.openstorage.api.SdkCredentialValidateRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialValidateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialValidateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialValidateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialValidateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialValidateResponse}
 */
proto.openstorage.api.SdkCredentialValidateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialValidateResponse;
  return proto.openstorage.api.SdkCredentialValidateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialValidateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialValidateResponse}
 */
proto.openstorage.api.SdkCredentialValidateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialValidateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialValidateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialValidateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialValidateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialDeleteReferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialDeleteReferencesRequest;
  return proto.openstorage.api.SdkCredentialDeleteReferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialDeleteReferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string credential_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCredentialDeleteReferencesRequest} returns this
 */
proto.openstorage.api.SdkCredentialDeleteReferencesRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCredentialDeleteReferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCredentialDeleteReferencesResponse}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCredentialDeleteReferencesResponse;
  return proto.openstorage.api.SdkCredentialDeleteReferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCredentialDeleteReferencesResponse}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCredentialDeleteReferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCredentialDeleteReferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCredentialDeleteReferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeAttachOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeAttachOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secretKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secretContext: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fastpath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions}
 */
proto.openstorage.api.SdkVolumeAttachOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeAttachOptions;
  return proto.openstorage.api.SdkVolumeAttachOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeAttachOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions}
 */
proto.openstorage.api.SdkVolumeAttachOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretContext(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFastpath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeAttachOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeAttachOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecretKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecretContext();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFastpath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string secret_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.getSecretName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions} returns this
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.setSecretName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secret_key = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.getSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions} returns this
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.setSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string secret_context = 3;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.getSecretContext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions} returns this
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.setSecretContext = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fastpath = 4;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.getFastpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachOptions} returns this
 */
proto.openstorage.api.SdkVolumeAttachOptions.prototype.setFastpath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeMountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeMountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeMountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mountPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.openstorage.api.SdkVolumeAttachOptions.toObject(includeInstance, f),
    driverOptionsMap: (f = msg.getDriverOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeMountRequest}
 */
proto.openstorage.api.SdkVolumeMountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeMountRequest;
  return proto.openstorage.api.SdkVolumeMountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeMountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeMountRequest}
 */
proto.openstorage.api.SdkVolumeMountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    case 3:
      var value = new proto.openstorage.api.SdkVolumeAttachOptions;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeAttachOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = msg.getDriverOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeMountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeMountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeMountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.SdkVolumeAttachOptions.serializeBinaryToWriter
    );
  }
  f = message.getDriverOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeMountRequest} returns this
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mount_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeMountRequest} returns this
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SdkVolumeAttachOptions options = 3;
 * @return {?proto.openstorage.api.SdkVolumeAttachOptions}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeAttachOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeAttachOptions, 3));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeAttachOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeMountRequest} returns this
*/
proto.openstorage.api.SdkVolumeMountRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeMountRequest} returns this
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> driver_options = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.getDriverOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeMountRequest} returns this
 */
proto.openstorage.api.SdkVolumeMountRequest.prototype.clearDriverOptionsMap = function() {
  this.getDriverOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeMountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeMountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeMountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeMountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeMountResponse}
 */
proto.openstorage.api.SdkVolumeMountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeMountResponse;
  return proto.openstorage.api.SdkVolumeMountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeMountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeMountResponse}
 */
proto.openstorage.api.SdkVolumeMountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeMountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeMountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeMountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeMountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeUnmountOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeUnmountOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    deleteMountPath: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    noDelayBeforeDeletingMountPath: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeUnmountOptions}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeUnmountOptions;
  return proto.openstorage.api.SdkVolumeUnmountOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeUnmountOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeUnmountOptions}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteMountPath(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoDelayBeforeDeletingMountPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeUnmountOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeUnmountOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeleteMountPath();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNoDelayBeforeDeletingMountPath();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool delete_mount_path = 1;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.getDeleteMountPath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeUnmountOptions} returns this
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.setDeleteMountPath = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool no_delay_before_deleting_mount_path = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.getNoDelayBeforeDeletingMountPath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeUnmountOptions} returns this
 */
proto.openstorage.api.SdkVolumeUnmountOptions.prototype.setNoDelayBeforeDeletingMountPath = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeUnmountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeUnmountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mountPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.openstorage.api.SdkVolumeUnmountOptions.toObject(includeInstance, f),
    driverOptionsMap: (f = msg.getDriverOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeUnmountRequest;
  return proto.openstorage.api.SdkVolumeUnmountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeUnmountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    case 3:
      var value = new proto.openstorage.api.SdkVolumeUnmountOptions;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeUnmountOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = msg.getDriverOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeUnmountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeUnmountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.SdkVolumeUnmountOptions.serializeBinaryToWriter
    );
  }
  f = message.getDriverOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest} returns this
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mount_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest} returns this
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SdkVolumeUnmountOptions options = 3;
 * @return {?proto.openstorage.api.SdkVolumeUnmountOptions}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeUnmountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeUnmountOptions, 3));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeUnmountOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest} returns this
*/
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest} returns this
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> driver_options = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.getDriverOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeUnmountRequest} returns this
 */
proto.openstorage.api.SdkVolumeUnmountRequest.prototype.clearDriverOptionsMap = function() {
  this.getDriverOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeUnmountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeUnmountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeUnmountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeUnmountResponse}
 */
proto.openstorage.api.SdkVolumeUnmountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeUnmountResponse;
  return proto.openstorage.api.SdkVolumeUnmountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeUnmountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeUnmountResponse}
 */
proto.openstorage.api.SdkVolumeUnmountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeUnmountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeUnmountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeUnmountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUnmountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeAttachRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeAttachRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.openstorage.api.SdkVolumeAttachOptions.toObject(includeInstance, f),
    driverOptionsMap: (f = msg.getDriverOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest}
 */
proto.openstorage.api.SdkVolumeAttachRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeAttachRequest;
  return proto.openstorage.api.SdkVolumeAttachRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeAttachRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest}
 */
proto.openstorage.api.SdkVolumeAttachRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkVolumeAttachOptions;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeAttachOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = msg.getDriverOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeAttachRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeAttachRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.SdkVolumeAttachOptions.serializeBinaryToWriter
    );
  }
  f = message.getDriverOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest} returns this
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SdkVolumeAttachOptions options = 2;
 * @return {?proto.openstorage.api.SdkVolumeAttachOptions}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeAttachOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeAttachOptions, 2));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeAttachOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest} returns this
*/
proto.openstorage.api.SdkVolumeAttachRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest} returns this
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> driver_options = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.getDriverOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeAttachRequest} returns this
 */
proto.openstorage.api.SdkVolumeAttachRequest.prototype.clearDriverOptionsMap = function() {
  this.getDriverOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeAttachResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeAttachResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeAttachResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicePath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeAttachResponse}
 */
proto.openstorage.api.SdkVolumeAttachResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeAttachResponse;
  return proto.openstorage.api.SdkVolumeAttachResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeAttachResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeAttachResponse}
 */
proto.openstorage.api.SdkVolumeAttachResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicePath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeAttachResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeAttachResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeAttachResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeAttachResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicePath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string device_path = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeAttachResponse.prototype.getDevicePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeAttachResponse} returns this
 */
proto.openstorage.api.SdkVolumeAttachResponse.prototype.setDevicePath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeDetachOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeDetachOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    force: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    unmountBeforeDetach: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    redirect: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeDetachOptions}
 */
proto.openstorage.api.SdkVolumeDetachOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeDetachOptions;
  return proto.openstorage.api.SdkVolumeDetachOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeDetachOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeDetachOptions}
 */
proto.openstorage.api.SdkVolumeDetachOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnmountBeforeDetach(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRedirect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeDetachOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeDetachOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForce();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUnmountBeforeDetach();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRedirect();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool force = 1;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeDetachOptions} returns this
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.setForce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool unmount_before_detach = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.getUnmountBeforeDetach = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeDetachOptions} returns this
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.setUnmountBeforeDetach = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool redirect = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.getRedirect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeDetachOptions} returns this
 */
proto.openstorage.api.SdkVolumeDetachOptions.prototype.setRedirect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeDetachRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeDetachRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.openstorage.api.SdkVolumeDetachOptions.toObject(includeInstance, f),
    driverOptionsMap: (f = msg.getDriverOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest}
 */
proto.openstorage.api.SdkVolumeDetachRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeDetachRequest;
  return proto.openstorage.api.SdkVolumeDetachRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeDetachRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest}
 */
proto.openstorage.api.SdkVolumeDetachRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkVolumeDetachOptions;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeDetachOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = msg.getDriverOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeDetachRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeDetachRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.SdkVolumeDetachOptions.serializeBinaryToWriter
    );
  }
  f = message.getDriverOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest} returns this
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SdkVolumeDetachOptions options = 2;
 * @return {?proto.openstorage.api.SdkVolumeDetachOptions}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeDetachOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeDetachOptions, 2));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeDetachOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest} returns this
*/
proto.openstorage.api.SdkVolumeDetachRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest} returns this
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> driver_options = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.getDriverOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeDetachRequest} returns this
 */
proto.openstorage.api.SdkVolumeDetachRequest.prototype.clearDriverOptionsMap = function() {
  this.getDriverOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeDetachResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeDetachResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeDetachResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeDetachResponse}
 */
proto.openstorage.api.SdkVolumeDetachResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeDetachResponse;
  return proto.openstorage.api.SdkVolumeDetachResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeDetachResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeDetachResponse}
 */
proto.openstorage.api.SdkVolumeDetachResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeDetachResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeDetachResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeDetachResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDetachResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spec: (f = msg.getSpec()) && proto.openstorage.api.VolumeSpec.toObject(includeInstance, f),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest}
 */
proto.openstorage.api.SdkVolumeCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCreateRequest;
  return proto.openstorage.api.SdkVolumeCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest}
 */
proto.openstorage.api.SdkVolumeCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeSpec;
      reader.readMessage(value,proto.openstorage.api.VolumeSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeSpec.serializeBinaryToWriter
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional VolumeSpec spec = 2;
 * @return {?proto.openstorage.api.VolumeSpec}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.VolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpec, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeSpec|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest} returns this
*/
proto.openstorage.api.SdkVolumeCreateRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeCreateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCreateResponse}
 */
proto.openstorage.api.SdkVolumeCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCreateResponse;
  return proto.openstorage.api.SdkVolumeCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCreateResponse}
 */
proto.openstorage.api.SdkVolumeCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCreateResponse.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCreateResponse} returns this
 */
proto.openstorage.api.SdkVolumeCreateResponse.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCloneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCloneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCloneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    additionalLabelsMap: (f = msg.getAdditionalLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCloneRequest}
 */
proto.openstorage.api.SdkVolumeCloneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCloneRequest;
  return proto.openstorage.api.SdkVolumeCloneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCloneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCloneRequest}
 */
proto.openstorage.api.SdkVolumeCloneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 3:
      var value = msg.getAdditionalLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCloneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCloneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCloneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdditionalLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCloneRequest} returns this
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCloneRequest} returns this
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> additional_labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.getAdditionalLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeCloneRequest} returns this
 */
proto.openstorage.api.SdkVolumeCloneRequest.prototype.clearAdditionalLabelsMap = function() {
  this.getAdditionalLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCloneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCloneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCloneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCloneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCloneResponse}
 */
proto.openstorage.api.SdkVolumeCloneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCloneResponse;
  return proto.openstorage.api.SdkVolumeCloneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCloneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCloneResponse}
 */
proto.openstorage.api.SdkVolumeCloneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCloneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCloneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCloneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCloneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCloneResponse.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCloneResponse} returns this
 */
proto.openstorage.api.SdkVolumeCloneResponse.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeDeleteRequest}
 */
proto.openstorage.api.SdkVolumeDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeDeleteRequest;
  return proto.openstorage.api.SdkVolumeDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeDeleteRequest}
 */
proto.openstorage.api.SdkVolumeDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeDeleteRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeDeleteRequest} returns this
 */
proto.openstorage.api.SdkVolumeDeleteRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeDeleteResponse}
 */
proto.openstorage.api.SdkVolumeDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeDeleteResponse;
  return proto.openstorage.api.SdkVolumeDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeDeleteResponse}
 */
proto.openstorage.api.SdkVolumeDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.openstorage.api.VolumeInspectOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeInspectRequest}
 */
proto.openstorage.api.SdkVolumeInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeInspectRequest;
  return proto.openstorage.api.SdkVolumeInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeInspectRequest}
 */
proto.openstorage.api.SdkVolumeInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.VolumeInspectOptions;
      reader.readMessage(value,proto.openstorage.api.VolumeInspectOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.VolumeInspectOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeInspectRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional VolumeInspectOptions options = 2;
 * @return {?proto.openstorage.api.VolumeInspectOptions}
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.VolumeInspectOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeInspectOptions, 2));
};


/**
 * @param {?proto.openstorage.api.VolumeInspectOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeInspectRequest} returns this
*/
proto.openstorage.api.SdkVolumeInspectRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeInspectRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeInspectRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = msg.getVolume()) && proto.openstorage.api.Volume.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse}
 */
proto.openstorage.api.SdkVolumeInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeInspectResponse;
  return proto.openstorage.api.SdkVolumeInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse}
 */
proto.openstorage.api.SdkVolumeInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Volume;
      reader.readMessage(value,proto.openstorage.api.Volume.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Volume.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Volume volume = 1;
 * @return {?proto.openstorage.api.Volume}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.getVolume = function() {
  return /** @type{?proto.openstorage.api.Volume} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Volume, 1));
};


/**
 * @param {?proto.openstorage.api.Volume|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse} returns this
*/
proto.openstorage.api.SdkVolumeInspectResponse.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse} returns this
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse} returns this
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse} returns this
 */
proto.openstorage.api.SdkVolumeInspectResponse.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    options: (f = msg.getOptions()) && proto.openstorage.api.VolumeInspectOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeInspectWithFiltersRequest;
  return proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 5:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 6:
      var value = new proto.openstorage.api.VolumeInspectOptions;
      reader.readMessage(value,proto.openstorage.api.VolumeInspectOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.openstorage.api.VolumeInspectOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional Ownership ownership = 4;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 4));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Group group = 5;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 5));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VolumeInspectOptions options = 6;
 * @return {?proto.openstorage.api.VolumeInspectOptions}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.getOptions = function() {
  return /** @type{?proto.openstorage.api.VolumeInspectOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeInspectOptions, 6));
};


/**
 * @param {?proto.openstorage.api.VolumeInspectOptions|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumesList: jspb.Message.toObjectList(msg.getVolumesList(),
    proto.openstorage.api.SdkVolumeInspectResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeInspectWithFiltersResponse;
  return proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkVolumeInspectResponse;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeInspectResponse.deserializeBinaryFromReader);
      msg.addVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkVolumeInspectResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkVolumeInspectResponse volumes = 1;
 * @return {!Array<!proto.openstorage.api.SdkVolumeInspectResponse>}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.getVolumesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkVolumeInspectResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkVolumeInspectResponse, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkVolumeInspectResponse>} value
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse} returns this
*/
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.setVolumesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkVolumeInspectResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeInspectResponse}
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.addVolumes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkVolumeInspectResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeInspectWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeInspectWithFiltersResponse.prototype.clearVolumesList = function() {
  return this.setVolumesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    spec: (f = msg.getSpec()) && proto.openstorage.api.VolumeSpecUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeUpdateRequest;
  return proto.openstorage.api.SdkVolumeUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = new proto.openstorage.api.VolumeSpecUpdate;
      reader.readMessage(value,proto.openstorage.api.VolumeSpecUpdate.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.VolumeSpecUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional VolumeSpecUpdate spec = 4;
 * @return {?proto.openstorage.api.VolumeSpecUpdate}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.VolumeSpecUpdate} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeSpecUpdate, 4));
};


/**
 * @param {?proto.openstorage.api.VolumeSpecUpdate|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest} returns this
*/
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeUpdateRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeUpdateResponse}
 */
proto.openstorage.api.SdkVolumeUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeUpdateResponse;
  return proto.openstorage.api.SdkVolumeUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeUpdateResponse}
 */
proto.openstorage.api.SdkVolumeUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    notCumulative: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeStatsRequest}
 */
proto.openstorage.api.SdkVolumeStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeStatsRequest;
  return proto.openstorage.api.SdkVolumeStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeStatsRequest}
 */
proto.openstorage.api.SdkVolumeStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotCumulative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNotCumulative();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeStatsRequest} returns this
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool not_cumulative = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.getNotCumulative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkVolumeStatsRequest} returns this
 */
proto.openstorage.api.SdkVolumeStatsRequest.prototype.setNotCumulative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stats: (f = msg.getStats()) && proto.openstorage.api.Stats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeStatsResponse}
 */
proto.openstorage.api.SdkVolumeStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeStatsResponse;
  return proto.openstorage.api.SdkVolumeStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeStatsResponse}
 */
proto.openstorage.api.SdkVolumeStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Stats;
      reader.readMessage(value,proto.openstorage.api.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Stats.serializeBinaryToWriter
    );
  }
};


/**
 * optional Stats stats = 1;
 * @return {?proto.openstorage.api.Stats}
 */
proto.openstorage.api.SdkVolumeStatsResponse.prototype.getStats = function() {
  return /** @type{?proto.openstorage.api.Stats} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Stats, 1));
};


/**
 * @param {?proto.openstorage.api.Stats|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeStatsResponse} returns this
*/
proto.openstorage.api.SdkVolumeStatsResponse.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeStatsResponse} returns this
 */
proto.openstorage.api.SdkVolumeStatsResponse.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeStatsResponse.prototype.hasStats = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCapacityUsageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageRequest}
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCapacityUsageRequest;
  return proto.openstorage.api.SdkVolumeCapacityUsageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageRequest}
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCapacityUsageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageRequest} returns this
 */
proto.openstorage.api.SdkVolumeCapacityUsageRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCapacityUsageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    capacityUsageInfo: (f = msg.getCapacityUsageInfo()) && proto.openstorage.api.CapacityUsageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageResponse}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCapacityUsageResponse;
  return proto.openstorage.api.SdkVolumeCapacityUsageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageResponse}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CapacityUsageInfo;
      reader.readMessage(value,proto.openstorage.api.CapacityUsageInfo.deserializeBinaryFromReader);
      msg.setCapacityUsageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCapacityUsageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCapacityUsageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapacityUsageInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CapacityUsageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CapacityUsageInfo capacity_usage_info = 1;
 * @return {?proto.openstorage.api.CapacityUsageInfo}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.getCapacityUsageInfo = function() {
  return /** @type{?proto.openstorage.api.CapacityUsageInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CapacityUsageInfo, 1));
};


/**
 * @param {?proto.openstorage.api.CapacityUsageInfo|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageResponse} returns this
*/
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.setCapacityUsageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeCapacityUsageResponse} returns this
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.clearCapacityUsageInfo = function() {
  return this.setCapacityUsageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeCapacityUsageResponse.prototype.hasCapacityUsageInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateRequest}
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeEnumerateRequest;
  return proto.openstorage.api.SdkVolumeEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateRequest}
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateResponse}
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeEnumerateResponse;
  return proto.openstorage.api.SdkVolumeEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateResponse}
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string volume_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkVolumeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateResponse.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest;
  return proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 5:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional Ownership ownership = 4;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 4));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Group group = 5;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 5));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
*/
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse;
  return proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string volume_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeEnumerateWithFiltersResponse.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotCreateRequest;
  return proto.openstorage.api.SdkVolumeSnapshotCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotCreateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshotId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotCreateResponse;
  return proto.openstorage.api.SdkVolumeSnapshotCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshotId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string snapshot_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.prototype.getSnapshotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotCreateResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotCreateResponse.prototype.setSnapshotId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    snapshotId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotRestoreRequest;
  return proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshotId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSnapshotId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string snapshot_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.getSnapshotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreRequest.prototype.setSnapshotId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotRestoreResponse;
  return proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotRestoreResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotRestoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotRestoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest;
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeSnapshotIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse;
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeSnapshotIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeSnapshotIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string volume_snapshot_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.getVolumeSnapshotIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.setVolumeSnapshotIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.addVolumeSnapshotIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateResponse.prototype.clearVolumeSnapshotIdsList = function() {
  return this.setVolumeSnapshotIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest;
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeSnapshotIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse;
  return proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeSnapshotIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeSnapshotIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string volume_snapshot_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.getVolumeSnapshotIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.setVolumeSnapshotIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.addVolumeSnapshotIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotEnumerateWithFiltersResponse.prototype.clearVolumeSnapshotIdsList = function() {
  return this.setVolumeSnapshotIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    snapshotScheduleNamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest;
  return proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSnapshotScheduleNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSnapshotScheduleNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string snapshot_schedule_names = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.getSnapshotScheduleNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.setSnapshotScheduleNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.addSnapshotScheduleNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest} returns this
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateRequest.prototype.clearSnapshotScheduleNamesList = function() {
  return this.setSnapshotScheduleNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse;
  return proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeSnapshotScheduleUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkWatchRequest.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkWatchRequest.EventTypeCase = {
  EVENT_TYPE_NOT_SET: 0,
  VOLUME_EVENT: 1
};

/**
 * @return {proto.openstorage.api.SdkWatchRequest.EventTypeCase}
 */
proto.openstorage.api.SdkWatchRequest.prototype.getEventTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkWatchRequest.EventTypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkWatchRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkWatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkWatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkWatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkWatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeEvent: (f = msg.getVolumeEvent()) && proto.openstorage.api.SdkVolumeWatchRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkWatchRequest}
 */
proto.openstorage.api.SdkWatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkWatchRequest;
  return proto.openstorage.api.SdkWatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkWatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkWatchRequest}
 */
proto.openstorage.api.SdkWatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkVolumeWatchRequest;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeWatchRequest.deserializeBinaryFromReader);
      msg.setVolumeEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkWatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkWatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkWatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkWatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkVolumeWatchRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkVolumeWatchRequest volume_event = 1;
 * @return {?proto.openstorage.api.SdkVolumeWatchRequest}
 */
proto.openstorage.api.SdkWatchRequest.prototype.getVolumeEvent = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeWatchRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeWatchRequest, 1));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeWatchRequest|undefined} value
 * @return {!proto.openstorage.api.SdkWatchRequest} returns this
*/
proto.openstorage.api.SdkWatchRequest.prototype.setVolumeEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openstorage.api.SdkWatchRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkWatchRequest} returns this
 */
proto.openstorage.api.SdkWatchRequest.prototype.clearVolumeEvent = function() {
  return this.setVolumeEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkWatchRequest.prototype.hasVolumeEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkWatchResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkWatchResponse.EventTypeCase = {
  EVENT_TYPE_NOT_SET: 0,
  VOLUME_EVENT: 1
};

/**
 * @return {proto.openstorage.api.SdkWatchResponse.EventTypeCase}
 */
proto.openstorage.api.SdkWatchResponse.prototype.getEventTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkWatchResponse.EventTypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkWatchResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkWatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkWatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkWatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkWatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeEvent: (f = msg.getVolumeEvent()) && proto.openstorage.api.SdkVolumeWatchResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkWatchResponse}
 */
proto.openstorage.api.SdkWatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkWatchResponse;
  return proto.openstorage.api.SdkWatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkWatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkWatchResponse}
 */
proto.openstorage.api.SdkWatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkVolumeWatchResponse;
      reader.readMessage(value,proto.openstorage.api.SdkVolumeWatchResponse.deserializeBinaryFromReader);
      msg.setVolumeEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkWatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkWatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkWatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkWatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkVolumeWatchResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkVolumeWatchResponse volume_event = 1;
 * @return {?proto.openstorage.api.SdkVolumeWatchResponse}
 */
proto.openstorage.api.SdkWatchResponse.prototype.getVolumeEvent = function() {
  return /** @type{?proto.openstorage.api.SdkVolumeWatchResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVolumeWatchResponse, 1));
};


/**
 * @param {?proto.openstorage.api.SdkVolumeWatchResponse|undefined} value
 * @return {!proto.openstorage.api.SdkWatchResponse} returns this
*/
proto.openstorage.api.SdkWatchResponse.prototype.setVolumeEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openstorage.api.SdkWatchResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkWatchResponse} returns this
 */
proto.openstorage.api.SdkWatchResponse.prototype.clearVolumeEvent = function() {
  return this.setVolumeEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkWatchResponse.prototype.hasVolumeEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeWatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeWatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeWatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeWatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeWatchRequest}
 */
proto.openstorage.api.SdkVolumeWatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeWatchRequest;
  return proto.openstorage.api.SdkVolumeWatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeWatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeWatchRequest}
 */
proto.openstorage.api.SdkVolumeWatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeWatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeWatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeWatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeWatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> labels = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkVolumeWatchRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkVolumeWatchRequest} returns this
 */
proto.openstorage.api.SdkVolumeWatchRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeWatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeWatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeWatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = msg.getVolume()) && proto.openstorage.api.Volume.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeWatchResponse}
 */
proto.openstorage.api.SdkVolumeWatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeWatchResponse;
  return proto.openstorage.api.SdkVolumeWatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeWatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeWatchResponse}
 */
proto.openstorage.api.SdkVolumeWatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Volume;
      reader.readMessage(value,proto.openstorage.api.Volume.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeWatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeWatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeWatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Volume.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Volume volume = 1;
 * @return {?proto.openstorage.api.Volume}
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.getVolume = function() {
  return /** @type{?proto.openstorage.api.Volume} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Volume, 1));
};


/**
 * @param {?proto.openstorage.api.Volume|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeWatchResponse} returns this
*/
proto.openstorage.api.SdkVolumeWatchResponse.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeWatchResponse} returns this
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeWatchResponse} returns this
 */
proto.openstorage.api.SdkVolumeWatchResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest;
  return proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest} returns this
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeUsageInfo: (f = msg.getVolumeUsageInfo()) && proto.openstorage.api.VolumeUsageByNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse;
  return proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeUsageByNode;
      reader.readMessage(value,proto.openstorage.api.VolumeUsageByNode.deserializeBinaryFromReader);
      msg.setVolumeUsageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeUsageInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.VolumeUsageByNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional VolumeUsageByNode volume_usage_info = 1;
 * @return {?proto.openstorage.api.VolumeUsageByNode}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.getVolumeUsageInfo = function() {
  return /** @type{?proto.openstorage.api.VolumeUsageByNode} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeUsageByNode, 1));
};


/**
 * @param {?proto.openstorage.api.VolumeUsageByNode|undefined} value
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse} returns this
*/
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.setVolumeUsageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse} returns this
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.clearVolumeUsageInfo = function() {
  return this.setVolumeUsageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkNodeVolumeUsageByNodeResponse.prototype.hasVolumeUsageInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest;
  return proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest} returns this
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.openstorage.api.RelaxedReclaimPurge.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse;
  return proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.RelaxedReclaimPurge;
      reader.readMessage(value,proto.openstorage.api.RelaxedReclaimPurge.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.RelaxedReclaimPurge.serializeBinaryToWriter
    );
  }
};


/**
 * optional RelaxedReclaimPurge status = 1;
 * @return {?proto.openstorage.api.RelaxedReclaimPurge}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.getStatus = function() {
  return /** @type{?proto.openstorage.api.RelaxedReclaimPurge} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.RelaxedReclaimPurge, 1));
};


/**
 * @param {?proto.openstorage.api.RelaxedReclaimPurge|undefined} value
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse} returns this
*/
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse} returns this
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkNodeRelaxedReclaimPurgeResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainsEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateRequest}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainsEnumerateRequest;
  return proto.openstorage.api.SdkClusterDomainsEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateRequest}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainsEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainsEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainsEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterDomainNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainsEnumerateResponse;
  return proto.openstorage.api.SdkClusterDomainsEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addClusterDomainNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainsEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterDomainNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string cluster_domain_names = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.getClusterDomainNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} returns this
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.setClusterDomainNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} returns this
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.addClusterDomainNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkClusterDomainsEnumerateResponse} returns this
 */
proto.openstorage.api.SdkClusterDomainsEnumerateResponse.prototype.clearClusterDomainNamesList = function() {
  return this.setClusterDomainNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterDomainName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainInspectRequest}
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainInspectRequest;
  return proto.openstorage.api.SdkClusterDomainInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainInspectRequest}
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterDomainName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterDomainName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cluster_domain_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.prototype.getClusterDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterDomainInspectRequest} returns this
 */
proto.openstorage.api.SdkClusterDomainInspectRequest.prototype.setClusterDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterDomainName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainInspectResponse}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainInspectResponse;
  return proto.openstorage.api.SdkClusterDomainInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainInspectResponse}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterDomainName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterDomainName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string cluster_domain_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.getClusterDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterDomainInspectResponse} returns this
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.setClusterDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_active = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkClusterDomainInspectResponse} returns this
 */
proto.openstorage.api.SdkClusterDomainInspectResponse.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainActivateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainActivateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterDomainName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainActivateRequest}
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainActivateRequest;
  return proto.openstorage.api.SdkClusterDomainActivateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainActivateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainActivateRequest}
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterDomainName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainActivateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainActivateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterDomainName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cluster_domain_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.prototype.getClusterDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterDomainActivateRequest} returns this
 */
proto.openstorage.api.SdkClusterDomainActivateRequest.prototype.setClusterDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainActivateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainActivateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainActivateResponse}
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainActivateResponse;
  return proto.openstorage.api.SdkClusterDomainActivateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainActivateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainActivateResponse}
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainActivateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainActivateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainActivateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainDeactivateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterDomainName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainDeactivateRequest}
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainDeactivateRequest;
  return proto.openstorage.api.SdkClusterDomainDeactivateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainDeactivateRequest}
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterDomainName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainDeactivateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterDomainName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cluster_domain_name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.prototype.getClusterDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterDomainDeactivateRequest} returns this
 */
proto.openstorage.api.SdkClusterDomainDeactivateRequest.prototype.setClusterDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterDomainDeactivateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterDomainDeactivateResponse}
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterDomainDeactivateResponse;
  return proto.openstorage.api.SdkClusterDomainDeactivateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterDomainDeactivateResponse}
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterDomainDeactivateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterDomainDeactivateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterDomainDeactivateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterInspectCurrentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentRequest}
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterInspectCurrentRequest;
  return proto.openstorage.api.SdkClusterInspectCurrentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentRequest}
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterInspectCurrentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterInspectCurrentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterInspectCurrentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cluster: (f = msg.getCluster()) && proto.openstorage.api.StorageCluster.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentResponse}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterInspectCurrentResponse;
  return proto.openstorage.api.SdkClusterInspectCurrentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentResponse}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageCluster;
      reader.readMessage(value,proto.openstorage.api.StorageCluster.deserializeBinaryFromReader);
      msg.setCluster(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterInspectCurrentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterInspectCurrentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCluster();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.StorageCluster.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageCluster cluster = 1;
 * @return {?proto.openstorage.api.StorageCluster}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.getCluster = function() {
  return /** @type{?proto.openstorage.api.StorageCluster} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageCluster, 1));
};


/**
 * @param {?proto.openstorage.api.StorageCluster|undefined} value
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentResponse} returns this
*/
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.setCluster = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterInspectCurrentResponse} returns this
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.clearCluster = function() {
  return this.setCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterInspectCurrentResponse.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeInspectRequest}
 */
proto.openstorage.api.SdkNodeInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeInspectRequest;
  return proto.openstorage.api.SdkNodeInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeInspectRequest}
 */
proto.openstorage.api.SdkNodeInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeInspectRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeInspectRequest} returns this
 */
proto.openstorage.api.SdkNodeInspectRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.Job.oneofGroups_ = [[400,401,402]];

/**
 * @enum {number}
 */
proto.openstorage.api.Job.JobCase = {
  JOB_NOT_SET: 0,
  DRAIN_ATTACHMENTS: 400,
  CLOUDDRIVE_TRANSFER: 401,
  COLLECT_DIAGS: 402
};

/**
 * @return {proto.openstorage.api.Job.JobCase}
 */
proto.openstorage.api.Job.prototype.getJobCase = function() {
  return /** @type {proto.openstorage.api.Job.JobCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.Job.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Job.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Job.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Job} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Job.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    drainAttachments: (f = msg.getDrainAttachments()) && proto.openstorage.api.NodeDrainAttachmentsJob.toObject(includeInstance, f),
    clouddriveTransfer: (f = msg.getClouddriveTransfer()) && proto.openstorage.api.CloudDriveTransferJob.toObject(includeInstance, f),
    collectDiags: (f = msg.getCollectDiags()) && proto.openstorage.api.CollectDiagsJob.toObject(includeInstance, f),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUpdateTime: (f = msg.getLastUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Job}
 */
proto.openstorage.api.Job.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Job;
  return proto.openstorage.api.Job.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Job} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Job}
 */
proto.openstorage.api.Job.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.Job.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.Job.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 400:
      var value = new proto.openstorage.api.NodeDrainAttachmentsJob;
      reader.readMessage(value,proto.openstorage.api.NodeDrainAttachmentsJob.deserializeBinaryFromReader);
      msg.setDrainAttachments(value);
      break;
    case 401:
      var value = new proto.openstorage.api.CloudDriveTransferJob;
      reader.readMessage(value,proto.openstorage.api.CloudDriveTransferJob.deserializeBinaryFromReader);
      msg.setClouddriveTransfer(value);
      break;
    case 402:
      var value = new proto.openstorage.api.CollectDiagsJob;
      reader.readMessage(value,proto.openstorage.api.CollectDiagsJob.deserializeBinaryFromReader);
      msg.setCollectDiags(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Job.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Job.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Job} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Job.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDrainAttachments();
  if (f != null) {
    writer.writeMessage(
      400,
      f,
      proto.openstorage.api.NodeDrainAttachmentsJob.serializeBinaryToWriter
    );
  }
  f = message.getClouddriveTransfer();
  if (f != null) {
    writer.writeMessage(
      401,
      f,
      proto.openstorage.api.CloudDriveTransferJob.serializeBinaryToWriter
    );
  }
  f = message.getCollectDiags();
  if (f != null) {
    writer.writeMessage(
      402,
      f,
      proto.openstorage.api.CollectDiagsJob.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.Job.Type = {
  UNSPECIFIED_TYPE: 0,
  NONE: 1,
  DRAIN_ATTACHMENTS: 2,
  CLOUD_DRIVE_TRANSFER: 3,
  COLLECT_DIAGS: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.Job.State = {
  UNSPECIFIED_STATE: 0,
  PENDING: 1,
  RUNNING: 2,
  DONE: 3,
  PAUSED: 4,
  CANCELLED: 5,
  FAILED: 6
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.Job.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.openstorage.api.Job.State}
 */
proto.openstorage.api.Job.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.Job.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.Job.State} value
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.openstorage.api.Job.Type}
 */
proto.openstorage.api.Job.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Job.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.Job.Type} value
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional NodeDrainAttachmentsJob drain_attachments = 400;
 * @return {?proto.openstorage.api.NodeDrainAttachmentsJob}
 */
proto.openstorage.api.Job.prototype.getDrainAttachments = function() {
  return /** @type{?proto.openstorage.api.NodeDrainAttachmentsJob} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.NodeDrainAttachmentsJob, 400));
};


/**
 * @param {?proto.openstorage.api.NodeDrainAttachmentsJob|undefined} value
 * @return {!proto.openstorage.api.Job} returns this
*/
proto.openstorage.api.Job.prototype.setDrainAttachments = function(value) {
  return jspb.Message.setOneofWrapperField(this, 400, proto.openstorage.api.Job.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.clearDrainAttachments = function() {
  return this.setDrainAttachments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Job.prototype.hasDrainAttachments = function() {
  return jspb.Message.getField(this, 400) != null;
};


/**
 * optional CloudDriveTransferJob clouddrive_transfer = 401;
 * @return {?proto.openstorage.api.CloudDriveTransferJob}
 */
proto.openstorage.api.Job.prototype.getClouddriveTransfer = function() {
  return /** @type{?proto.openstorage.api.CloudDriveTransferJob} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CloudDriveTransferJob, 401));
};


/**
 * @param {?proto.openstorage.api.CloudDriveTransferJob|undefined} value
 * @return {!proto.openstorage.api.Job} returns this
*/
proto.openstorage.api.Job.prototype.setClouddriveTransfer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 401, proto.openstorage.api.Job.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.clearClouddriveTransfer = function() {
  return this.setClouddriveTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Job.prototype.hasClouddriveTransfer = function() {
  return jspb.Message.getField(this, 401) != null;
};


/**
 * optional CollectDiagsJob collect_diags = 402;
 * @return {?proto.openstorage.api.CollectDiagsJob}
 */
proto.openstorage.api.Job.prototype.getCollectDiags = function() {
  return /** @type{?proto.openstorage.api.CollectDiagsJob} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CollectDiagsJob, 402));
};


/**
 * @param {?proto.openstorage.api.CollectDiagsJob|undefined} value
 * @return {!proto.openstorage.api.Job} returns this
*/
proto.openstorage.api.Job.prototype.setCollectDiags = function(value) {
  return jspb.Message.setOneofWrapperField(this, 402, proto.openstorage.api.Job.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.clearCollectDiags = function() {
  return this.setCollectDiags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Job.prototype.hasCollectDiags = function() {
  return jspb.Message.getField(this, 402) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Job.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Job} returns this
*/
proto.openstorage.api.Job.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Job.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_update_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Job.prototype.getLastUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Job} returns this
*/
proto.openstorage.api.Job.prototype.setLastUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Job} returns this
 */
proto.openstorage.api.Job.prototype.clearLastUpdateTime = function() {
  return this.setLastUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Job.prototype.hasLastUpdateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkJobResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkJobResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkJobResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkJobResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.openstorage.api.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkJobResponse}
 */
proto.openstorage.api.SdkJobResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkJobResponse;
  return proto.openstorage.api.SdkJobResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkJobResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkJobResponse}
 */
proto.openstorage.api.SdkJobResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Job;
      reader.readMessage(value,proto.openstorage.api.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkJobResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkJobResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkJobResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkJobResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job job = 1;
 * @return {?proto.openstorage.api.Job}
 */
proto.openstorage.api.SdkJobResponse.prototype.getJob = function() {
  return /** @type{?proto.openstorage.api.Job} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Job, 1));
};


/**
 * @param {?proto.openstorage.api.Job|undefined} value
 * @return {!proto.openstorage.api.SdkJobResponse} returns this
*/
proto.openstorage.api.SdkJobResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkJobResponse} returns this
 */
proto.openstorage.api.SdkJobResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkJobResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.NodeDrainAttachmentOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.NodeDrainAttachmentOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.NodeDrainAttachmentOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NodeDrainAttachmentOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.NodeDrainAttachmentOptions}
 */
proto.openstorage.api.NodeDrainAttachmentOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.NodeDrainAttachmentOptions;
  return proto.openstorage.api.NodeDrainAttachmentOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.NodeDrainAttachmentOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.NodeDrainAttachmentOptions}
 */
proto.openstorage.api.NodeDrainAttachmentOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.NodeDrainAttachmentOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.NodeDrainAttachmentOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.NodeDrainAttachmentOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NodeDrainAttachmentOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeDrainAttachmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selectorList: jspb.Message.toObjectList(msg.getSelectorList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance),
    onlySharedv4: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    issuer: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeDrainAttachmentsRequest;
  return proto.openstorage.api.SdkNodeDrainAttachmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addSelector(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlySharedv4(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeDrainAttachmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getOnlySharedv4();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated LabelSelectorRequirement selector = 2;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.getSelectorList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} returns this
*/
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.setSelectorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.addSelector = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.clearSelectorList = function() {
  return this.setSelectorList([]);
};


/**
 * optional bool only_sharedv4 = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.getOnlySharedv4 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.setOnlySharedv4 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string issuer = 4;
 * @return {string}
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeDrainAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeDrainAttachmentsRequest.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.NodeDrainAttachmentsJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.NodeDrainAttachmentsJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NodeDrainAttachmentsJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parameters: (f = msg.getParameters()) && proto.openstorage.api.SdkNodeDrainAttachmentsRequest.toObject(includeInstance, f),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUpdateTime: (f = msg.getLastUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.NodeDrainAttachmentsJob;
  return proto.openstorage.api.NodeDrainAttachmentsJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.NodeDrainAttachmentsJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 4:
      var value = new proto.openstorage.api.SdkNodeDrainAttachmentsRequest;
      reader.readMessage(value,proto.openstorage.api.SdkNodeDrainAttachmentsRequest.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.NodeDrainAttachmentsJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.NodeDrainAttachmentsJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.NodeDrainAttachmentsJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.SdkNodeDrainAttachmentsRequest.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Status = 2;
 * @return {string}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string issuer = 3;
 * @return {string}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SdkNodeDrainAttachmentsRequest parameters = 4;
 * @return {?proto.openstorage.api.SdkNodeDrainAttachmentsRequest}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getParameters = function() {
  return /** @type{?proto.openstorage.api.SdkNodeDrainAttachmentsRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkNodeDrainAttachmentsRequest, 4));
};


/**
 * @param {?proto.openstorage.api.SdkNodeDrainAttachmentsRequest|undefined} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
*/
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
*/
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_update_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.getLastUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
*/
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.setLastUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.NodeDrainAttachmentsJob} returns this
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.clearLastUpdateTime = function() {
  return this.setLastUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.NodeDrainAttachmentsJob.prototype.hasLastUpdateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudDriveTransferJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudDriveTransferJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudDriveTransferJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceDrivesetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationInstanceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudDriveTransferJob}
 */
proto.openstorage.api.CloudDriveTransferJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudDriveTransferJob;
  return proto.openstorage.api.CloudDriveTransferJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudDriveTransferJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudDriveTransferJob}
 */
proto.openstorage.api.CloudDriveTransferJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceDrivesetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationInstanceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudDriveTransferJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudDriveTransferJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudDriveTransferJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceDrivesetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationInstanceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string source_driveset_id = 1;
 * @return {string}
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.getSourceDrivesetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudDriveTransferJob} returns this
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.setSourceDrivesetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destination_instance_id = 2;
 * @return {string}
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.getDestinationInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudDriveTransferJob} returns this
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.setDestinationInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudDriveTransferJob} returns this
 */
proto.openstorage.api.CloudDriveTransferJob.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.CollectDiagsJob.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CollectDiagsJob.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CollectDiagsJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CollectDiagsJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CollectDiagsJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.openstorage.api.SdkDiagsCollectRequest.toObject(includeInstance, f),
    statusesList: jspb.Message.toObjectList(msg.getStatusesList(),
    proto.openstorage.api.DiagsCollectionStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CollectDiagsJob}
 */
proto.openstorage.api.CollectDiagsJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CollectDiagsJob;
  return proto.openstorage.api.CollectDiagsJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CollectDiagsJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CollectDiagsJob}
 */
proto.openstorage.api.CollectDiagsJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkDiagsCollectRequest;
      reader.readMessage(value,proto.openstorage.api.SdkDiagsCollectRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.openstorage.api.DiagsCollectionStatus;
      reader.readMessage(value,proto.openstorage.api.DiagsCollectionStatus.deserializeBinaryFromReader);
      msg.addStatuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CollectDiagsJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CollectDiagsJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CollectDiagsJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CollectDiagsJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkDiagsCollectRequest.serializeBinaryToWriter
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.DiagsCollectionStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkDiagsCollectRequest request = 1;
 * @return {?proto.openstorage.api.SdkDiagsCollectRequest}
 */
proto.openstorage.api.CollectDiagsJob.prototype.getRequest = function() {
  return /** @type{?proto.openstorage.api.SdkDiagsCollectRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkDiagsCollectRequest, 1));
};


/**
 * @param {?proto.openstorage.api.SdkDiagsCollectRequest|undefined} value
 * @return {!proto.openstorage.api.CollectDiagsJob} returns this
*/
proto.openstorage.api.CollectDiagsJob.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CollectDiagsJob} returns this
 */
proto.openstorage.api.CollectDiagsJob.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CollectDiagsJob.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DiagsCollectionStatus statuses = 2;
 * @return {!Array<!proto.openstorage.api.DiagsCollectionStatus>}
 */
proto.openstorage.api.CollectDiagsJob.prototype.getStatusesList = function() {
  return /** @type{!Array<!proto.openstorage.api.DiagsCollectionStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.DiagsCollectionStatus, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.DiagsCollectionStatus>} value
 * @return {!proto.openstorage.api.CollectDiagsJob} returns this
*/
proto.openstorage.api.CollectDiagsJob.prototype.setStatusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.DiagsCollectionStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.DiagsCollectionStatus}
 */
proto.openstorage.api.CollectDiagsJob.prototype.addStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.DiagsCollectionStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.CollectDiagsJob} returns this
 */
proto.openstorage.api.CollectDiagsJob.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.DiagsCollectionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.DiagsCollectionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsCollectionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.DiagsCollectionStatus}
 */
proto.openstorage.api.DiagsCollectionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.DiagsCollectionStatus;
  return proto.openstorage.api.DiagsCollectionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.DiagsCollectionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.DiagsCollectionStatus}
 */
proto.openstorage.api.DiagsCollectionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.DiagsCollectionStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.DiagsCollectionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.DiagsCollectionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsCollectionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.DiagsCollectionStatus.State = {
  UNSPECIFIED: 0,
  PENDING: 1,
  RUNNING: 2,
  DONE: 3,
  FAILED: 4
};

/**
 * optional string node = 1;
 * @return {string}
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.getNode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.DiagsCollectionStatus} returns this
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.setNode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.openstorage.api.DiagsCollectionStatus.State}
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.DiagsCollectionStatus.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.DiagsCollectionStatus.State} value
 * @return {!proto.openstorage.api.DiagsCollectionStatus} returns this
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.DiagsCollectionStatus} returns this
 */
proto.openstorage.api.DiagsCollectionStatus.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkDiagsCollectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkDiagsCollectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkDiagsCollectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.openstorage.api.DiagsNodeSelector.toObject(includeInstance, f),
    volume: (f = msg.getVolume()) && proto.openstorage.api.DiagsVolumeSelector.toObject(includeInstance, f),
    profileOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    issuer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timeoutMins: jspb.Message.getFieldWithDefault(msg, 5, 0),
    live: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    filename: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest}
 */
proto.openstorage.api.SdkDiagsCollectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkDiagsCollectRequest;
  return proto.openstorage.api.SdkDiagsCollectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkDiagsCollectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest}
 */
proto.openstorage.api.SdkDiagsCollectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.DiagsNodeSelector;
      reader.readMessage(value,proto.openstorage.api.DiagsNodeSelector.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = new proto.openstorage.api.DiagsVolumeSelector;
      reader.readMessage(value,proto.openstorage.api.DiagsVolumeSelector.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProfileOnly(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeoutMins(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLive(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkDiagsCollectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkDiagsCollectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkDiagsCollectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.DiagsNodeSelector.serializeBinaryToWriter
    );
  }
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.DiagsVolumeSelector.serializeBinaryToWriter
    );
  }
  f = message.getProfileOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimeoutMins();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getLive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional DiagsNodeSelector node = 1;
 * @return {?proto.openstorage.api.DiagsNodeSelector}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getNode = function() {
  return /** @type{?proto.openstorage.api.DiagsNodeSelector} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.DiagsNodeSelector, 1));
};


/**
 * @param {?proto.openstorage.api.DiagsNodeSelector|undefined} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
*/
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DiagsVolumeSelector volume = 2;
 * @return {?proto.openstorage.api.DiagsVolumeSelector}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getVolume = function() {
  return /** @type{?proto.openstorage.api.DiagsVolumeSelector} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.DiagsVolumeSelector, 2));
};


/**
 * @param {?proto.openstorage.api.DiagsVolumeSelector|undefined} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
*/
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool profile_only = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getProfileOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setProfileOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string issuer = 4;
 * @return {string}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timeout_mins = 5;
 * @return {number}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getTimeoutMins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setTimeoutMins = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool live = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getLive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setLive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string filename = 7;
 * @return {string}
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkDiagsCollectRequest} returns this
 */
proto.openstorage.api.SdkDiagsCollectRequest.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkDiagsCollectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkDiagsCollectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkDiagsCollectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkDiagsCollectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.openstorage.api.Job.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkDiagsCollectResponse}
 */
proto.openstorage.api.SdkDiagsCollectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkDiagsCollectResponse;
  return proto.openstorage.api.SdkDiagsCollectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkDiagsCollectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkDiagsCollectResponse}
 */
proto.openstorage.api.SdkDiagsCollectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Job;
      reader.readMessage(value,proto.openstorage.api.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkDiagsCollectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkDiagsCollectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkDiagsCollectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkDiagsCollectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Job.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job job = 1;
 * @return {?proto.openstorage.api.Job}
 */
proto.openstorage.api.SdkDiagsCollectResponse.prototype.getJob = function() {
  return /** @type{?proto.openstorage.api.Job} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Job, 1));
};


/**
 * @param {?proto.openstorage.api.Job|undefined} value
 * @return {!proto.openstorage.api.SdkDiagsCollectResponse} returns this
*/
proto.openstorage.api.SdkDiagsCollectResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkDiagsCollectResponse} returns this
 */
proto.openstorage.api.SdkDiagsCollectResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkDiagsCollectResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.DiagsNodeSelector.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.DiagsNodeSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.DiagsNodeSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsNodeSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeLabelSelectorList: jspb.Message.toObjectList(msg.getNodeLabelSelectorList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance),
    nodeIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    all: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.DiagsNodeSelector}
 */
proto.openstorage.api.DiagsNodeSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.DiagsNodeSelector;
  return proto.openstorage.api.DiagsNodeSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.DiagsNodeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.DiagsNodeSelector}
 */
proto.openstorage.api.DiagsNodeSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addNodeLabelSelector(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeIds(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.DiagsNodeSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.DiagsNodeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsNodeSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeLabelSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getNodeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAll();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated LabelSelectorRequirement node_label_selector = 1;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.getNodeLabelSelectorList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
*/
proto.openstorage.api.DiagsNodeSelector.prototype.setNodeLabelSelectorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.addNodeLabelSelector = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
 */
proto.openstorage.api.DiagsNodeSelector.prototype.clearNodeLabelSelectorList = function() {
  return this.setNodeLabelSelectorList([]);
};


/**
 * repeated string node_ids = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.getNodeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
 */
proto.openstorage.api.DiagsNodeSelector.prototype.setNodeIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
 */
proto.openstorage.api.DiagsNodeSelector.prototype.addNodeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
 */
proto.openstorage.api.DiagsNodeSelector.prototype.clearNodeIdsList = function() {
  return this.setNodeIdsList([]);
};


/**
 * optional bool all = 3;
 * @return {boolean}
 */
proto.openstorage.api.DiagsNodeSelector.prototype.getAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.DiagsNodeSelector} returns this
 */
proto.openstorage.api.DiagsNodeSelector.prototype.setAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.DiagsVolumeSelector.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.DiagsVolumeSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.DiagsVolumeSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsVolumeSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeLabelSelectorList: jspb.Message.toObjectList(msg.getVolumeLabelSelectorList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance),
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.DiagsVolumeSelector}
 */
proto.openstorage.api.DiagsVolumeSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.DiagsVolumeSelector;
  return proto.openstorage.api.DiagsVolumeSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.DiagsVolumeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.DiagsVolumeSelector}
 */
proto.openstorage.api.DiagsVolumeSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addVolumeLabelSelector(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.DiagsVolumeSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.DiagsVolumeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DiagsVolumeSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeLabelSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated LabelSelectorRequirement volume_label_selector = 1;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.getVolumeLabelSelectorList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.DiagsVolumeSelector} returns this
*/
proto.openstorage.api.DiagsVolumeSelector.prototype.setVolumeLabelSelectorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.addVolumeLabelSelector = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.DiagsVolumeSelector} returns this
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.clearVolumeLabelSelectorList = function() {
  return this.setVolumeLabelSelectorList([]);
};


/**
 * repeated string volume_ids = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.DiagsVolumeSelector} returns this
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.DiagsVolumeSelector} returns this
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.DiagsVolumeSelector} returns this
 */
proto.openstorage.api.DiagsVolumeSelector.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkEnumerateJobsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkEnumerateJobsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkEnumerateJobsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateJobsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkEnumerateJobsRequest}
 */
proto.openstorage.api.SdkEnumerateJobsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkEnumerateJobsRequest;
  return proto.openstorage.api.SdkEnumerateJobsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkEnumerateJobsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkEnumerateJobsRequest}
 */
proto.openstorage.api.SdkEnumerateJobsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.Job.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkEnumerateJobsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkEnumerateJobsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkEnumerateJobsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateJobsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Job.Type type = 1;
 * @return {!proto.openstorage.api.Job.Type}
 */
proto.openstorage.api.SdkEnumerateJobsRequest.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Job.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.Job.Type} value
 * @return {!proto.openstorage.api.SdkEnumerateJobsRequest} returns this
 */
proto.openstorage.api.SdkEnumerateJobsRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkEnumerateJobsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkEnumerateJobsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkEnumerateJobsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateJobsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobsList: jspb.Message.toObjectList(msg.getJobsList(),
    proto.openstorage.api.Job.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkEnumerateJobsResponse}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkEnumerateJobsResponse;
  return proto.openstorage.api.SdkEnumerateJobsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkEnumerateJobsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkEnumerateJobsResponse}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Job;
      reader.readMessage(value,proto.openstorage.api.Job.deserializeBinaryFromReader);
      msg.addJobs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkEnumerateJobsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkEnumerateJobsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateJobsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.Job.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Job jobs = 1;
 * @return {!Array<!proto.openstorage.api.Job>}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.getJobsList = function() {
  return /** @type{!Array<!proto.openstorage.api.Job>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.Job, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.Job>} value
 * @return {!proto.openstorage.api.SdkEnumerateJobsResponse} returns this
*/
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.setJobsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.Job=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.Job}
 */
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.addJobs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.Job, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkEnumerateJobsResponse} returns this
 */
proto.openstorage.api.SdkEnumerateJobsResponse.prototype.clearJobsList = function() {
  return this.setJobsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkUpdateJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkUpdateJobRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkUpdateJobRequest}
 */
proto.openstorage.api.SdkUpdateJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkUpdateJobRequest;
  return proto.openstorage.api.SdkUpdateJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkUpdateJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkUpdateJobRequest}
 */
proto.openstorage.api.SdkUpdateJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.Job.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.Job.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkUpdateJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkUpdateJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkUpdateJobRequest} returns this
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Job.Type type = 2;
 * @return {!proto.openstorage.api.Job.Type}
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Job.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.Job.Type} value
 * @return {!proto.openstorage.api.SdkUpdateJobRequest} returns this
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Job.State state = 3;
 * @return {!proto.openstorage.api.Job.State}
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.Job.State} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.Job.State} value
 * @return {!proto.openstorage.api.SdkUpdateJobRequest} returns this
 */
proto.openstorage.api.SdkUpdateJobRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkUpdateJobResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkUpdateJobResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkUpdateJobResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateJobResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkUpdateJobResponse}
 */
proto.openstorage.api.SdkUpdateJobResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkUpdateJobResponse;
  return proto.openstorage.api.SdkUpdateJobResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkUpdateJobResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkUpdateJobResponse}
 */
proto.openstorage.api.SdkUpdateJobResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkUpdateJobResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkUpdateJobResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkUpdateJobResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateJobResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGetJobStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGetJobStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetJobStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGetJobStatusRequest}
 */
proto.openstorage.api.SdkGetJobStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGetJobStatusRequest;
  return proto.openstorage.api.SdkGetJobStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGetJobStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGetJobStatusRequest}
 */
proto.openstorage.api.SdkGetJobStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.Job.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGetJobStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGetJobStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetJobStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkGetJobStatusRequest} returns this
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Job.Type type = 2;
 * @return {!proto.openstorage.api.Job.Type}
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.Job.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.Job.Type} value
 * @return {!proto.openstorage.api.SdkGetJobStatusRequest} returns this
 */
proto.openstorage.api.SdkGetJobStatusRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.JobAudit.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.JobAudit.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.JobAudit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.JobAudit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobAudit.toObject = function(includeInstance, msg) {
  var f, obj = {
    summaryList: jspb.Message.toObjectList(msg.getSummaryList(),
    proto.openstorage.api.JobWorkSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.JobAudit}
 */
proto.openstorage.api.JobAudit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.JobAudit;
  return proto.openstorage.api.JobAudit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.JobAudit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.JobAudit}
 */
proto.openstorage.api.JobAudit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.JobWorkSummary;
      reader.readMessage(value,proto.openstorage.api.JobWorkSummary.deserializeBinaryFromReader);
      msg.addSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.JobAudit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.JobAudit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.JobAudit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobAudit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.JobWorkSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JobWorkSummary summary = 1;
 * @return {!Array<!proto.openstorage.api.JobWorkSummary>}
 */
proto.openstorage.api.JobAudit.prototype.getSummaryList = function() {
  return /** @type{!Array<!proto.openstorage.api.JobWorkSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.JobWorkSummary, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.JobWorkSummary>} value
 * @return {!proto.openstorage.api.JobAudit} returns this
*/
proto.openstorage.api.JobAudit.prototype.setSummaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.JobWorkSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.JobWorkSummary}
 */
proto.openstorage.api.JobAudit.prototype.addSummary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.JobWorkSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.JobAudit} returns this
 */
proto.openstorage.api.JobAudit.prototype.clearSummaryList = function() {
  return this.setSummaryList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.JobWorkSummary.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.openstorage.api.JobWorkSummary.SummaryCase = {
  SUMMARY_NOT_SET: 0,
  DRAIN_ATTACHMENTS_SUMMARY: 3
};

/**
 * @return {proto.openstorage.api.JobWorkSummary.SummaryCase}
 */
proto.openstorage.api.JobWorkSummary.prototype.getSummaryCase = function() {
  return /** @type {proto.openstorage.api.JobWorkSummary.SummaryCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.JobWorkSummary.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.JobWorkSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.JobWorkSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.JobWorkSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobWorkSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    drainAttachmentsSummary: (f = msg.getDrainAttachmentsSummary()) && proto.openstorage.api.DrainAttachmentsSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.JobWorkSummary}
 */
proto.openstorage.api.JobWorkSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.JobWorkSummary;
  return proto.openstorage.api.JobWorkSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.JobWorkSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.JobWorkSummary}
 */
proto.openstorage.api.JobWorkSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.openstorage.api.DrainAttachmentsSummary;
      reader.readMessage(value,proto.openstorage.api.DrainAttachmentsSummary.deserializeBinaryFromReader);
      msg.setDrainAttachmentsSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.JobWorkSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.JobWorkSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.JobWorkSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobWorkSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDrainAttachmentsSummary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.openstorage.api.DrainAttachmentsSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional DrainAttachmentsSummary drain_attachments_summary = 3;
 * @return {?proto.openstorage.api.DrainAttachmentsSummary}
 */
proto.openstorage.api.JobWorkSummary.prototype.getDrainAttachmentsSummary = function() {
  return /** @type{?proto.openstorage.api.DrainAttachmentsSummary} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.DrainAttachmentsSummary, 3));
};


/**
 * @param {?proto.openstorage.api.DrainAttachmentsSummary|undefined} value
 * @return {!proto.openstorage.api.JobWorkSummary} returns this
*/
proto.openstorage.api.JobWorkSummary.prototype.setDrainAttachmentsSummary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.openstorage.api.JobWorkSummary.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.JobWorkSummary} returns this
 */
proto.openstorage.api.JobWorkSummary.prototype.clearDrainAttachmentsSummary = function() {
  return this.setDrainAttachmentsSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.JobWorkSummary.prototype.hasDrainAttachmentsSummary = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.JobSummary.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.JobSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.JobSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.JobSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalRuntimeSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    workSummariesList: jspb.Message.toObjectList(msg.getWorkSummariesList(),
    proto.openstorage.api.JobWorkSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.JobSummary}
 */
proto.openstorage.api.JobSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.JobSummary;
  return proto.openstorage.api.JobSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.JobSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.JobSummary}
 */
proto.openstorage.api.JobSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalRuntimeSeconds(value);
      break;
    case 3:
      var value = new proto.openstorage.api.JobWorkSummary;
      reader.readMessage(value,proto.openstorage.api.JobWorkSummary.deserializeBinaryFromReader);
      msg.addWorkSummaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.JobSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.JobSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.JobSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.JobSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalRuntimeSeconds();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getWorkSummariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.JobWorkSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.JobSummary.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.JobSummary} returns this
 */
proto.openstorage.api.JobSummary.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 total_runtime_seconds = 2;
 * @return {number}
 */
proto.openstorage.api.JobSummary.prototype.getTotalRuntimeSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.JobSummary} returns this
 */
proto.openstorage.api.JobSummary.prototype.setTotalRuntimeSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated JobWorkSummary work_summaries = 3;
 * @return {!Array<!proto.openstorage.api.JobWorkSummary>}
 */
proto.openstorage.api.JobSummary.prototype.getWorkSummariesList = function() {
  return /** @type{!Array<!proto.openstorage.api.JobWorkSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.JobWorkSummary, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.JobWorkSummary>} value
 * @return {!proto.openstorage.api.JobSummary} returns this
*/
proto.openstorage.api.JobSummary.prototype.setWorkSummariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.JobWorkSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.JobWorkSummary}
 */
proto.openstorage.api.JobSummary.prototype.addWorkSummaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.JobWorkSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.JobSummary} returns this
 */
proto.openstorage.api.JobSummary.prototype.clearWorkSummariesList = function() {
  return this.setWorkSummariesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGetJobStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGetJobStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetJobStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.openstorage.api.Job.toObject(includeInstance, f),
    summary: (f = msg.getSummary()) && proto.openstorage.api.JobSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse}
 */
proto.openstorage.api.SdkGetJobStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGetJobStatusResponse;
  return proto.openstorage.api.SdkGetJobStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGetJobStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse}
 */
proto.openstorage.api.SdkGetJobStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Job;
      reader.readMessage(value,proto.openstorage.api.Job.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    case 2:
      var value = new proto.openstorage.api.JobSummary;
      reader.readMessage(value,proto.openstorage.api.JobSummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGetJobStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGetJobStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetJobStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Job.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.JobSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional Job job = 1;
 * @return {?proto.openstorage.api.Job}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.getJob = function() {
  return /** @type{?proto.openstorage.api.Job} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Job, 1));
};


/**
 * @param {?proto.openstorage.api.Job|undefined} value
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse} returns this
*/
proto.openstorage.api.SdkGetJobStatusResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse} returns this
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JobSummary summary = 2;
 * @return {?proto.openstorage.api.JobSummary}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.getSummary = function() {
  return /** @type{?proto.openstorage.api.JobSummary} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.JobSummary, 2));
};


/**
 * @param {?proto.openstorage.api.JobSummary|undefined} value
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse} returns this
*/
proto.openstorage.api.SdkGetJobStatusResponse.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkGetJobStatusResponse} returns this
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkGetJobStatusResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.DrainAttachmentsSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.DrainAttachmentsSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DrainAttachmentsSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    numVolumesTotal: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numVolumesDone: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numVolumesPending: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.DrainAttachmentsSummary}
 */
proto.openstorage.api.DrainAttachmentsSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.DrainAttachmentsSummary;
  return proto.openstorage.api.DrainAttachmentsSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.DrainAttachmentsSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.DrainAttachmentsSummary}
 */
proto.openstorage.api.DrainAttachmentsSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumVolumesTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumVolumesDone(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumVolumesPending(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.DrainAttachmentsSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.DrainAttachmentsSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.DrainAttachmentsSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumVolumesTotal();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getNumVolumesDone();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getNumVolumesPending();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 num_volumes_total = 2;
 * @return {number}
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.getNumVolumesTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.DrainAttachmentsSummary} returns this
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.setNumVolumesTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 num_volumes_done = 3;
 * @return {number}
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.getNumVolumesDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.DrainAttachmentsSummary} returns this
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.setNumVolumesDone = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 num_volumes_pending = 4;
 * @return {number}
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.getNumVolumesPending = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.DrainAttachmentsSummary} returns this
 */
proto.openstorage.api.DrainAttachmentsSummary.prototype.setNumVolumesPending = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeCordonAttachmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeCordonAttachmentsRequest;
  return proto.openstorage.api.SdkNodeCordonAttachmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeCordonAttachmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeCordonAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeCordonAttachmentsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeCordonAttachmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeCordonAttachmentsResponse}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeCordonAttachmentsResponse;
  return proto.openstorage.api.SdkNodeCordonAttachmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeCordonAttachmentsResponse}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeCordonAttachmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeCordonAttachmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeCordonAttachmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeUncordonAttachmentsRequest;
  return proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkNodeUncordonAttachmentsRequest} returns this
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeUncordonAttachmentsResponse}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeUncordonAttachmentsResponse;
  return proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeUncordonAttachmentsResponse}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeUncordonAttachmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeUncordonAttachmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_ = [[200,201]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.ResizeFactorCase = {
  RESIZE_FACTOR_NOT_SET: 0,
  SIZE: 200,
  PERCENTAGE: 201
};

/**
 * @return {proto.openstorage.api.SdkStoragePoolResizeRequest.ResizeFactorCase}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getResizeFactorCase = function() {
  return /** @type {proto.openstorage.api.SdkStoragePoolResizeRequest.ResizeFactorCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStoragePoolResizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStoragePoolResizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 200, 0),
    percentage: jspb.Message.getFieldWithDefault(msg, 201, 0),
    operationType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    skipWaitForCleanVolumes: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStoragePoolResizeRequest;
  return proto.openstorage.api.SdkStoragePoolResizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStoragePoolResizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 200:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 201:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPercentage(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.SdkStoragePool.ResizeOperationType} */ (reader.readEnum());
      msg.setOperationType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipWaitForCleanVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStoragePoolResizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStoragePoolResizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 200));
  if (f != null) {
    writer.writeUint64(
      200,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 201));
  if (f != null) {
    writer.writeUint64(
      201,
      f
    );
  }
  f = message.getOperationType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSkipWaitForCleanVolumes();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 size = 200;
 * @return {number}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 200, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.setSize = function(value) {
  return jspb.Message.setOneofField(this, 200, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.clearSize = function() {
  return jspb.Message.setOneofField(this, 200, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.hasSize = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional uint64 percentage = 201;
 * @return {number}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 201, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.setPercentage = function(value) {
  return jspb.Message.setOneofField(this, 201, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.clearPercentage = function() {
  return jspb.Message.setOneofField(this, 201, proto.openstorage.api.SdkStoragePoolResizeRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional SdkStoragePool.ResizeOperationType operation_type = 3;
 * @return {!proto.openstorage.api.SdkStoragePool.ResizeOperationType}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getOperationType = function() {
  return /** @type {!proto.openstorage.api.SdkStoragePool.ResizeOperationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.SdkStoragePool.ResizeOperationType} value
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.setOperationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool skip_wait_for_clean_volumes = 4;
 * @return {boolean}
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.getSkipWaitForCleanVolumes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkStoragePoolResizeRequest} returns this
 */
proto.openstorage.api.SdkStoragePoolResizeRequest.prototype.setSkipWaitForCleanVolumes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageRebalanceTriggerThreshold.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    metric: jspb.Message.getFieldWithDefault(msg, 2, 0),
    overLoadTriggerThreshold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    underLoadTriggerThreshold: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageRebalanceTriggerThreshold;
  return proto.openstorage.api.StorageRebalanceTriggerThreshold.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric} */ (reader.readEnum());
      msg.setMetric(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOverLoadTriggerThreshold(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnderLoadTriggerThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageRebalanceTriggerThreshold.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMetric();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOverLoadTriggerThreshold();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getUnderLoadTriggerThreshold();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.Type = {
  ABSOLUTE_PERCENT: 0,
  DELTA_MEAN_PERCENT: 1
};

/**
 * @enum {number}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric = {
  PROVISION_SPACE: 0,
  USED_SPACE: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Type}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Type} value
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold} returns this
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Metric metric = 2;
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.getMetric = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold.Metric} value
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold} returns this
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.setMetric = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 over_load_trigger_threshold = 3;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.getOverLoadTriggerThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold} returns this
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.setOverLoadTriggerThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 under_load_trigger_threshold = 4;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.getUnderLoadTriggerThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold} returns this
 */
proto.openstorage.api.StorageRebalanceTriggerThreshold.prototype.setUnderLoadTriggerThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkStorageRebalanceRequest.repeatedFields_ = [1,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStorageRebalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStorageRebalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStorageRebalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerThresholdsList: jspb.Message.toObjectList(msg.getTriggerThresholdsList(),
    proto.openstorage.api.StorageRebalanceTriggerThreshold.toObject, includeInstance),
    trialRun: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    sourcePoolSelectorList: jspb.Message.toObjectList(msg.getSourcePoolSelectorList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance),
    targetPoolSelectorList: jspb.Message.toObjectList(msg.getTargetPoolSelectorList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance),
    maxDurationMinutes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    removeRepl1Snapshots: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    mode: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStorageRebalanceRequest;
  return proto.openstorage.api.SdkStorageRebalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStorageRebalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageRebalanceTriggerThreshold;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceTriggerThreshold.deserializeBinaryFromReader);
      msg.addTriggerThresholds(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrialRun(value);
      break;
    case 3:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addSourcePoolSelector(value);
      break;
    case 4:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addTargetPoolSelector(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxDurationMinutes(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveRepl1Snapshots(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.SdkStorageRebalanceRequest.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStorageRebalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStorageRebalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStorageRebalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerThresholdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.StorageRebalanceTriggerThreshold.serializeBinaryToWriter
    );
  }
  f = message.getTrialRun();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSourcePoolSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getTargetPoolSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getMaxDurationMinutes();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getRemoveRepl1Snapshots();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.Mode = {
  STORAGE_REBALANCE: 0,
  VOLUME_PLACEMENT_FIX: 1
};

/**
 * repeated StorageRebalanceTriggerThreshold trigger_thresholds = 1;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceTriggerThreshold>}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getTriggerThresholdsList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceTriggerThreshold>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceTriggerThreshold, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceTriggerThreshold>} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
*/
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setTriggerThresholdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceTriggerThreshold=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceTriggerThreshold}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.addTriggerThresholds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.StorageRebalanceTriggerThreshold, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.clearTriggerThresholdsList = function() {
  return this.setTriggerThresholdsList([]);
};


/**
 * optional bool trial_run = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getTrialRun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setTrialRun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated LabelSelectorRequirement source_pool_selector = 3;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getSourcePoolSelectorList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
*/
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setSourcePoolSelectorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.addSourcePoolSelector = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.clearSourcePoolSelectorList = function() {
  return this.setSourcePoolSelectorList([]);
};


/**
 * repeated LabelSelectorRequirement target_pool_selector = 4;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getTargetPoolSelectorList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 4));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
*/
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setTargetPoolSelectorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.addTargetPoolSelector = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.clearTargetPoolSelectorList = function() {
  return this.setTargetPoolSelectorList([]);
};


/**
 * optional uint64 max_duration_minutes = 5;
 * @return {number}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getMaxDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setMaxDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool remove_repl_1_snapshots = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getRemoveRepl1Snapshots = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setRemoveRepl1Snapshots = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional Mode mode = 7;
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest.Mode}
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.getMode = function() {
  return /** @type {!proto.openstorage.api.SdkStorageRebalanceRequest.Mode} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.SdkStorageRebalanceRequest.Mode} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceRequest} returns this
 */
proto.openstorage.api.SdkStorageRebalanceRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkStorageRebalanceResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStorageRebalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStorageRebalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStorageRebalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.openstorage.api.StorageRebalanceJob.toObject(includeInstance, f),
    summary: (f = msg.getSummary()) && proto.openstorage.api.StorageRebalanceSummary.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.openstorage.api.StorageRebalanceAudit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStorageRebalanceResponse;
  return proto.openstorage.api.SdkStorageRebalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStorageRebalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageRebalanceJob;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceJob.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    case 2:
      var value = new proto.openstorage.api.StorageRebalanceSummary;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceSummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 3:
      var value = new proto.openstorage.api.StorageRebalanceAudit;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceAudit.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStorageRebalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStorageRebalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStorageRebalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.StorageRebalanceJob.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.StorageRebalanceSummary.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.StorageRebalanceAudit.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageRebalanceJob job = 1;
 * @return {?proto.openstorage.api.StorageRebalanceJob}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.getJob = function() {
  return /** @type{?proto.openstorage.api.StorageRebalanceJob} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageRebalanceJob, 1));
};


/**
 * @param {?proto.openstorage.api.StorageRebalanceJob|undefined} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
*/
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StorageRebalanceSummary summary = 2;
 * @return {?proto.openstorage.api.StorageRebalanceSummary}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.getSummary = function() {
  return /** @type{?proto.openstorage.api.StorageRebalanceSummary} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageRebalanceSummary, 2));
};


/**
 * @param {?proto.openstorage.api.StorageRebalanceSummary|undefined} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
*/
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated StorageRebalanceAudit actions = 3;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceAudit>}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceAudit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceAudit, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceAudit>} value
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
*/
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceAudit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceAudit}
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.StorageRebalanceAudit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkStorageRebalanceResponse} returns this
 */
proto.openstorage.api.SdkStorageRebalanceResponse.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageRebalanceJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageRebalanceJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    parameters: (f = msg.getParameters()) && proto.openstorage.api.SdkStorageRebalanceRequest.toObject(includeInstance, f),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastUpdateTime: (f = msg.getLastUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageRebalanceJob}
 */
proto.openstorage.api.StorageRebalanceJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageRebalanceJob;
  return proto.openstorage.api.StorageRebalanceJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageRebalanceJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageRebalanceJob}
 */
proto.openstorage.api.StorageRebalanceJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.openstorage.api.SdkStorageRebalanceRequest;
      reader.readMessage(value,proto.openstorage.api.SdkStorageRebalanceRequest.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageRebalanceJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageRebalanceJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.openstorage.api.SdkStorageRebalanceRequest.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageRebalanceJobState state = 3;
 * @return {!proto.openstorage.api.StorageRebalanceJobState}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceJobState} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional SdkStorageRebalanceRequest parameters = 4;
 * @return {?proto.openstorage.api.SdkStorageRebalanceRequest}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getParameters = function() {
  return /** @type{?proto.openstorage.api.SdkStorageRebalanceRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkStorageRebalanceRequest, 4));
};


/**
 * @param {?proto.openstorage.api.SdkStorageRebalanceRequest|undefined} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
*/
proto.openstorage.api.StorageRebalanceJob.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
*/
proto.openstorage.api.StorageRebalanceJob.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_update_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.getLastUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
*/
proto.openstorage.api.StorageRebalanceJob.prototype.setLastUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageRebalanceJob} returns this
 */
proto.openstorage.api.StorageRebalanceJob.prototype.clearLastUpdateTime = function() {
  return this.setLastUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageRebalanceJob.prototype.hasLastUpdateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.StorageRebalanceSummary.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageRebalanceSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageRebalanceSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalRunTimeSeconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    workSummaryList: jspb.Message.toObjectList(msg.getWorkSummaryList(),
    proto.openstorage.api.StorageRebalanceWorkSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageRebalanceSummary}
 */
proto.openstorage.api.StorageRebalanceSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageRebalanceSummary;
  return proto.openstorage.api.StorageRebalanceSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageRebalanceSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageRebalanceSummary}
 */
proto.openstorage.api.StorageRebalanceSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalRunTimeSeconds(value);
      break;
    case 2:
      var value = new proto.openstorage.api.StorageRebalanceWorkSummary;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceWorkSummary.deserializeBinaryFromReader);
      msg.addWorkSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageRebalanceSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageRebalanceSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalRunTimeSeconds();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getWorkSummaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.StorageRebalanceWorkSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 total_run_time_seconds = 1;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.getTotalRunTimeSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceSummary} returns this
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.setTotalRunTimeSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated StorageRebalanceWorkSummary work_summary = 2;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>}
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.getWorkSummaryList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceWorkSummary, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>} value
 * @return {!proto.openstorage.api.StorageRebalanceSummary} returns this
*/
proto.openstorage.api.StorageRebalanceSummary.prototype.setWorkSummaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary}
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.addWorkSummary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.StorageRebalanceWorkSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.StorageRebalanceSummary} returns this
 */
proto.openstorage.api.StorageRebalanceSummary.prototype.clearWorkSummaryList = function() {
  return this.setWorkSummaryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageRebalanceWorkSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceWorkSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    done: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pending: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageRebalanceWorkSummary;
  return proto.openstorage.api.StorageRebalanceWorkSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceWorkSummary.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDone(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPending(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageRebalanceWorkSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceWorkSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDone();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPending();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.Type = {
  UNBALANCEDPOOLS: 0,
  UNBALANCEDVOLUMES: 1,
  UNBALANCEDPROVISIONEDSPACEBYTES: 2,
  UNBALANCEDUSEDSPACEBYTES: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary.Type}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceWorkSummary.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary.Type} value
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary} returns this
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 done = 2;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.getDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary} returns this
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.setDone = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 pending = 3;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.getPending = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary} returns this
 */
proto.openstorage.api.StorageRebalanceWorkSummary.prototype.setPending = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.StorageRebalanceAudit.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageRebalanceAudit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageRebalanceAudit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceAudit.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    action: jspb.Message.getFieldWithDefault(msg, 3, 0),
    node: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pool: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    workSummaryList: jspb.Message.toObjectList(msg.getWorkSummaryList(),
    proto.openstorage.api.StorageRebalanceWorkSummary.toObject, includeInstance),
    replicationSetId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    state: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageRebalanceAudit}
 */
proto.openstorage.api.StorageRebalanceAudit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageRebalanceAudit;
  return proto.openstorage.api.StorageRebalanceAudit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageRebalanceAudit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageRebalanceAudit}
 */
proto.openstorage.api.StorageRebalanceAudit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPool(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 8:
      var value = new proto.openstorage.api.StorageRebalanceWorkSummary;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceWorkSummary.deserializeBinaryFromReader);
      msg.addWorkSummary(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReplicationSetId(value);
      break;
    case 10:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageRebalanceAudit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageRebalanceAudit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageRebalanceAudit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPool();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getWorkSummaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.openstorage.api.StorageRebalanceWorkSummary.serializeBinaryToWriter
    );
  }
  f = message.getReplicationSetId();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction = {
  ADD_REPLICA: 0,
  REMOVE_REPLICA: 1
};

/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageRebalanceAction action = 3;
 * @return {!proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getAction = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceAudit.StorageRebalanceAction} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string node = 4;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getNode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setNode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pool = 5;
 * @return {string}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getPool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setPool = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
*/
proto.openstorage.api.StorageRebalanceAudit.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
*/
proto.openstorage.api.StorageRebalanceAudit.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated StorageRebalanceWorkSummary work_summary = 8;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getWorkSummaryList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceWorkSummary, 8));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceWorkSummary>} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
*/
proto.openstorage.api.StorageRebalanceAudit.prototype.setWorkSummaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceWorkSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceWorkSummary}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.addWorkSummary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.openstorage.api.StorageRebalanceWorkSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.clearWorkSummaryList = function() {
  return this.setWorkSummaryList([]);
};


/**
 * optional uint64 replication_set_id = 9;
 * @return {number}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getReplicationSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setReplicationSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional StorageRebalanceJobState state = 10;
 * @return {!proto.openstorage.api.StorageRebalanceJobState}
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceJobState} value
 * @return {!proto.openstorage.api.StorageRebalanceAudit} returns this
 */
proto.openstorage.api.StorageRebalanceAudit.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkUpdateRebalanceJobRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobRequest}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkUpdateRebalanceJobRequest;
  return proto.openstorage.api.SdkUpdateRebalanceJobRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobRequest}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkUpdateRebalanceJobRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobRequest} returns this
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StorageRebalanceJobState state = 2;
 * @return {!proto.openstorage.api.StorageRebalanceJobState}
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.getState = function() {
  return /** @type {!proto.openstorage.api.StorageRebalanceJobState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceJobState} value
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobRequest} returns this
 */
proto.openstorage.api.SdkUpdateRebalanceJobRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkUpdateRebalanceJobResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobResponse}
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkUpdateRebalanceJobResponse;
  return proto.openstorage.api.SdkUpdateRebalanceJobResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkUpdateRebalanceJobResponse}
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkUpdateRebalanceJobResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkUpdateRebalanceJobResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkUpdateRebalanceJobResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGetRebalanceJobStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGetRebalanceJobStatusRequest;
  return proto.openstorage.api.SdkGetRebalanceJobStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGetRebalanceJobStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusRequest} returns this
 */
proto.openstorage.api.SdkGetRebalanceJobStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkGetRebalanceJobStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: (f = msg.getJob()) && proto.openstorage.api.StorageRebalanceJob.toObject(includeInstance, f),
    summary: (f = msg.getSummary()) && proto.openstorage.api.StorageRebalanceSummary.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.openstorage.api.StorageRebalanceAudit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkGetRebalanceJobStatusResponse;
  return proto.openstorage.api.SdkGetRebalanceJobStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageRebalanceJob;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceJob.deserializeBinaryFromReader);
      msg.setJob(value);
      break;
    case 2:
      var value = new proto.openstorage.api.StorageRebalanceSummary;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceSummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 3:
      var value = new proto.openstorage.api.StorageRebalanceAudit;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceAudit.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkGetRebalanceJobStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.StorageRebalanceJob.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.StorageRebalanceSummary.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.StorageRebalanceAudit.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageRebalanceJob job = 1;
 * @return {?proto.openstorage.api.StorageRebalanceJob}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.getJob = function() {
  return /** @type{?proto.openstorage.api.StorageRebalanceJob} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageRebalanceJob, 1));
};


/**
 * @param {?proto.openstorage.api.StorageRebalanceJob|undefined} value
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
*/
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.setJob = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.clearJob = function() {
  return this.setJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.hasJob = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StorageRebalanceSummary summary = 2;
 * @return {?proto.openstorage.api.StorageRebalanceSummary}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.getSummary = function() {
  return /** @type{?proto.openstorage.api.StorageRebalanceSummary} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageRebalanceSummary, 2));
};


/**
 * @param {?proto.openstorage.api.StorageRebalanceSummary|undefined} value
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
*/
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated StorageRebalanceAudit actions = 3;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceAudit>}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceAudit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceAudit, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceAudit>} value
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
*/
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceAudit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceAudit}
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.StorageRebalanceAudit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkGetRebalanceJobStatusResponse} returns this
 */
proto.openstorage.api.SdkGetRebalanceJobStatusResponse.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsRequest}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkEnumerateRebalanceJobsRequest;
  return proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsRequest}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobsList: jspb.Message.toObjectList(msg.getJobsList(),
    proto.openstorage.api.StorageRebalanceJob.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkEnumerateRebalanceJobsResponse;
  return proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageRebalanceJob;
      reader.readMessage(value,proto.openstorage.api.StorageRebalanceJob.deserializeBinaryFromReader);
      msg.addJobs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.StorageRebalanceJob.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StorageRebalanceJob jobs = 1;
 * @return {!Array<!proto.openstorage.api.StorageRebalanceJob>}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.getJobsList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageRebalanceJob>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageRebalanceJob, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageRebalanceJob>} value
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse} returns this
*/
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.setJobsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.StorageRebalanceJob=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageRebalanceJob}
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.addJobs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.StorageRebalanceJob, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkEnumerateRebalanceJobsResponse} returns this
 */
proto.openstorage.api.SdkEnumerateRebalanceJobsResponse.prototype.clearJobsList = function() {
  return this.setJobsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStoragePool.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStoragePool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStoragePool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePool.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStoragePool}
 */
proto.openstorage.api.SdkStoragePool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStoragePool;
  return proto.openstorage.api.SdkStoragePool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStoragePool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStoragePool}
 */
proto.openstorage.api.SdkStoragePool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStoragePool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStoragePool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStoragePool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.SdkStoragePool.OperationStatus = {
  OPERATION_PENDING: 0,
  OPERATION_IN_PROGRESS: 1,
  OPERATION_SUCCESSFUL: 2,
  OPERATION_FAILED: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkStoragePool.OperationType = {
  OPERATION_RESIZE: 0
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkStoragePool.ResizeOperationType = {
  RESIZE_TYPE_AUTO: 0,
  RESIZE_TYPE_ADD_DISK: 1,
  RESIZE_TYPE_RESIZE_DISK: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkStoragePoolResizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkStoragePoolResizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeResponse}
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkStoragePoolResizeResponse;
  return proto.openstorage.api.SdkStoragePoolResizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkStoragePoolResizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkStoragePoolResizeResponse}
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkStoragePoolResizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkStoragePoolResizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkStoragePoolResizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.openstorage.api.StorageNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeInspectResponse}
 */
proto.openstorage.api.SdkNodeInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeInspectResponse;
  return proto.openstorage.api.SdkNodeInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeInspectResponse}
 */
proto.openstorage.api.SdkNodeInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageNode;
      reader.readMessage(value,proto.openstorage.api.StorageNode.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.StorageNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageNode node = 1;
 * @return {?proto.openstorage.api.StorageNode}
 */
proto.openstorage.api.SdkNodeInspectResponse.prototype.getNode = function() {
  return /** @type{?proto.openstorage.api.StorageNode} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageNode, 1));
};


/**
 * @param {?proto.openstorage.api.StorageNode|undefined} value
 * @return {!proto.openstorage.api.SdkNodeInspectResponse} returns this
*/
proto.openstorage.api.SdkNodeInspectResponse.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkNodeInspectResponse} returns this
 */
proto.openstorage.api.SdkNodeInspectResponse.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkNodeInspectResponse.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeInspectCurrentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentRequest}
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeInspectCurrentRequest;
  return proto.openstorage.api.SdkNodeInspectCurrentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentRequest}
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeInspectCurrentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectCurrentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeInspectCurrentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.openstorage.api.StorageNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentResponse}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeInspectCurrentResponse;
  return proto.openstorage.api.SdkNodeInspectCurrentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentResponse}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageNode;
      reader.readMessage(value,proto.openstorage.api.StorageNode.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeInspectCurrentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeInspectCurrentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.StorageNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageNode node = 1;
 * @return {?proto.openstorage.api.StorageNode}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.getNode = function() {
  return /** @type{?proto.openstorage.api.StorageNode} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageNode, 1));
};


/**
 * @param {?proto.openstorage.api.StorageNode|undefined} value
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentResponse} returns this
*/
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkNodeInspectCurrentResponse} returns this
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkNodeInspectCurrentResponse.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeEnumerateRequest}
 */
proto.openstorage.api.SdkNodeEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeEnumerateRequest;
  return proto.openstorage.api.SdkNodeEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeEnumerateRequest}
 */
proto.openstorage.api.SdkNodeEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkNodeEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeEnumerateResponse}
 */
proto.openstorage.api.SdkNodeEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeEnumerateResponse;
  return proto.openstorage.api.SdkNodeEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeEnumerateResponse}
 */
proto.openstorage.api.SdkNodeEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string node_ids = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.getNodeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkNodeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.setNodeIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkNodeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.addNodeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkNodeEnumerateResponse} returns this
 */
proto.openstorage.api.SdkNodeEnumerateResponse.prototype.clearNodeIdsList = function() {
  return this.setNodeIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest;
  return proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.openstorage.api.StorageNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse;
  return proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.StorageNode;
      reader.readMessage(value,proto.openstorage.api.StorageNode.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.StorageNode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StorageNode nodes = 1;
 * @return {!Array<!proto.openstorage.api.StorageNode>}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.openstorage.api.StorageNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.StorageNode, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.StorageNode>} value
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse} returns this
*/
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.StorageNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.StorageNode}
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.StorageNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkNodeEnumerateWithFiltersResponse.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectstoreId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreInspectRequest}
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreInspectRequest;
  return proto.openstorage.api.SdkObjectstoreInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreInspectRequest}
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectstoreId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectstoreId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string objectstore_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.prototype.getObjectstoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkObjectstoreInspectRequest} returns this
 */
proto.openstorage.api.SdkObjectstoreInspectRequest.prototype.setObjectstoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectstoreStatus: (f = msg.getObjectstoreStatus()) && proto.openstorage.api.ObjectstoreInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreInspectResponse}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreInspectResponse;
  return proto.openstorage.api.SdkObjectstoreInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreInspectResponse}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ObjectstoreInfo;
      reader.readMessage(value,proto.openstorage.api.ObjectstoreInfo.deserializeBinaryFromReader);
      msg.setObjectstoreStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectstoreStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ObjectstoreInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectstoreInfo objectstore_status = 1;
 * @return {?proto.openstorage.api.ObjectstoreInfo}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.getObjectstoreStatus = function() {
  return /** @type{?proto.openstorage.api.ObjectstoreInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ObjectstoreInfo, 1));
};


/**
 * @param {?proto.openstorage.api.ObjectstoreInfo|undefined} value
 * @return {!proto.openstorage.api.SdkObjectstoreInspectResponse} returns this
*/
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.setObjectstoreStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkObjectstoreInspectResponse} returns this
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.clearObjectstoreStatus = function() {
  return this.setObjectstoreStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkObjectstoreInspectResponse.prototype.hasObjectstoreStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreCreateRequest}
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreCreateRequest;
  return proto.openstorage.api.SdkObjectstoreCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreCreateRequest}
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkObjectstoreCreateRequest} returns this
 */
proto.openstorage.api.SdkObjectstoreCreateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectstoreStatus: (f = msg.getObjectstoreStatus()) && proto.openstorage.api.ObjectstoreInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreCreateResponse}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreCreateResponse;
  return proto.openstorage.api.SdkObjectstoreCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreCreateResponse}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ObjectstoreInfo;
      reader.readMessage(value,proto.openstorage.api.ObjectstoreInfo.deserializeBinaryFromReader);
      msg.setObjectstoreStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectstoreStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ObjectstoreInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectstoreInfo objectstore_status = 1;
 * @return {?proto.openstorage.api.ObjectstoreInfo}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.getObjectstoreStatus = function() {
  return /** @type{?proto.openstorage.api.ObjectstoreInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ObjectstoreInfo, 1));
};


/**
 * @param {?proto.openstorage.api.ObjectstoreInfo|undefined} value
 * @return {!proto.openstorage.api.SdkObjectstoreCreateResponse} returns this
*/
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.setObjectstoreStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkObjectstoreCreateResponse} returns this
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.clearObjectstoreStatus = function() {
  return this.setObjectstoreStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkObjectstoreCreateResponse.prototype.hasObjectstoreStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectstoreId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreDeleteRequest}
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreDeleteRequest;
  return proto.openstorage.api.SdkObjectstoreDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreDeleteRequest}
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectstoreId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectstoreId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string objectstore_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.prototype.getObjectstoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkObjectstoreDeleteRequest} returns this
 */
proto.openstorage.api.SdkObjectstoreDeleteRequest.prototype.setObjectstoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreDeleteResponse}
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreDeleteResponse;
  return proto.openstorage.api.SdkObjectstoreDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreDeleteResponse}
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectstoreId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateRequest}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreUpdateRequest;
  return proto.openstorage.api.SdkObjectstoreUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateRequest}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectstoreId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectstoreId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string objectstore_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.getObjectstoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateRequest} returns this
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.setObjectstoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool enable = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateRequest} returns this
 */
proto.openstorage.api.SdkObjectstoreUpdateRequest.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkObjectstoreUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateResponse}
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkObjectstoreUpdateResponse;
  return proto.openstorage.api.SdkObjectstoreUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkObjectstoreUpdateResponse}
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkObjectstoreUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkObjectstoreUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkObjectstoreUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    full: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    taskId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    fullBackupFrequency: jspb.Message.getFieldWithDefault(msg, 6, 0),
    deleteLocal: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    nearSyncMigrate: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupCreateRequest;
  return proto.openstorage.api.SdkCloudBackupCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 5:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFullBackupFrequency(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteLocal(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNearSyncMigrate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFull();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getFullBackupFrequency();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getDeleteLocal();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getNearSyncMigrate();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool full = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setFull = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string task_id = 4;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, string> labels = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional uint32 full_backup_frequency = 6;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getFullBackupFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setFullBackupFrequency = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool delete_local = 7;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getDeleteLocal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setDeleteLocal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool near_sync_migrate = 8;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.getNearSyncMigrate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateRequest.prototype.setNearSyncMigrate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupCreateResponse;
  return proto.openstorage.api.SdkCloudBackupCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupCreateResponse.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupGroupCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    credentialId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    full: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    deleteLocal: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupGroupCreateRequest;
  return proto.openstorage.api.SdkCloudBackupGroupCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 5:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteLocal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupGroupCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFull();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDeleteLocal();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string volume_ids = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};


/**
 * optional string credential_id = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool full = 4;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.setFull = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, string> labels = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional bool delete_local = 6;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.getDeleteLocal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateRequest.prototype.setDeleteLocal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupGroupCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupCloudBackupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taskIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupGroupCreateResponse;
  return proto.openstorage.api.SdkCloudBackupGroupCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupCloudBackupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTaskIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupGroupCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupCloudBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaskIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string group_cloud_backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.getGroupCloudBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.setGroupCloudBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string task_ids = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.getTaskIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.setTaskIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.addTaskIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupGroupCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupGroupCreateResponse.prototype.clearTaskIdsList = function() {
  return this.setTaskIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupRestoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    restoreVolumeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    spec: (f = msg.getSpec()) && proto.openstorage.api.RestoreVolumeSpec.toObject(includeInstance, f),
    locator: (f = msg.getLocator()) && proto.openstorage.api.VolumeLocator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupRestoreRequest;
  return proto.openstorage.api.SdkCloudBackupRestoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestoreVolumeName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 6:
      var value = new proto.openstorage.api.RestoreVolumeSpec;
      reader.readMessage(value,proto.openstorage.api.RestoreVolumeSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 7:
      var value = new proto.openstorage.api.VolumeLocator;
      reader.readMessage(value,proto.openstorage.api.VolumeLocator.deserializeBinaryFromReader);
      msg.setLocator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupRestoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRestoreVolumeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.openstorage.api.RestoreVolumeSpec.serializeBinaryToWriter
    );
  }
  f = message.getLocator();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.openstorage.api.VolumeLocator.serializeBinaryToWriter
    );
  }
};


/**
 * optional string backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string restore_volume_name = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getRestoreVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setRestoreVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string credential_id = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string node_id = 4;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string task_id = 5;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional RestoreVolumeSpec spec = 6;
 * @return {?proto.openstorage.api.RestoreVolumeSpec}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getSpec = function() {
  return /** @type{?proto.openstorage.api.RestoreVolumeSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.RestoreVolumeSpec, 6));
};


/**
 * @param {?proto.openstorage.api.RestoreVolumeSpec|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
*/
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional VolumeLocator locator = 7;
 * @return {?proto.openstorage.api.VolumeLocator}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.getLocator = function() {
  return /** @type{?proto.openstorage.api.VolumeLocator} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeLocator, 7));
};


/**
 * @param {?proto.openstorage.api.VolumeLocator|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
*/
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.setLocator = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.clearLocator = function() {
  return this.setLocator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupRestoreRequest.prototype.hasLocator = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupRestoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    restoreVolumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreResponse}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupRestoreResponse;
  return proto.openstorage.api.SdkCloudBackupRestoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreResponse}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestoreVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupRestoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupRestoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRestoreVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string restore_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.getRestoreVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.setRestoreVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string task_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupRestoreResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupRestoreResponse.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bucket: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupDeleteRequest;
  return proto.openstorage.api.SdkCloudBackupDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.getBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.setBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool force = 3;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.setForce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bucket = 4;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteRequest.prototype.setBucket = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteResponse}
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupDeleteResponse;
  return proto.openstorage.api.SdkCloudBackupDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteResponse}
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupDeleteAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupDeleteAllRequest;
  return proto.openstorage.api.SdkCloudBackupDeleteAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupDeleteAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string src_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupDeleteAllRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupDeleteAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllResponse}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupDeleteAllResponse;
  return proto.openstorage.api.SdkCloudBackupDeleteAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupDeleteAllResponse}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupDeleteAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupDeleteAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupDeleteAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clusterId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    all: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    statusFilter: jspb.Message.getFieldWithDefault(msg, 5, 0),
    metadataFilterMap: (f = msg.getMetadataFilterMap()) ? f.toObject(includeInstance, undefined) : [],
    maxBackups: jspb.Message.getFieldWithDefault(msg, 7, 0),
    continuationToken: jspb.Message.getFieldWithDefault(msg, 8, ""),
    cloudBackupId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    missingSrcVolumes: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest;
  return proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAll(value);
      break;
    case 5:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (reader.readEnum());
      msg.setStatusFilter(value);
      break;
    case 6:
      var value = msg.getMetadataFilterMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxBackups(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setContinuationToken(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudBackupId(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMissingSrcVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAll();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getStatusFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getMetadataFilterMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMaxBackups();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getContinuationToken();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCloudBackupId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMissingSrcVolumes();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string src_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string credential_id = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool all = 4;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional SdkCloudBackupStatusType status_filter = 5;
 * @return {!proto.openstorage.api.SdkCloudBackupStatusType}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getStatusFilter = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupStatusType} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setStatusFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * map<string, string> metadata_filter = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getMetadataFilterMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.clearMetadataFilterMap = function() {
  this.getMetadataFilterMap().clear();
  return this;};


/**
 * optional uint64 max_backups = 7;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getMaxBackups = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setMaxBackups = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string continuation_token = 8;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getContinuationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setContinuationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string cloud_backup_id = 9;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getCloudBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setCloudBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool missing_src_volumes = 10;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.getMissingSrcVolumes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersRequest.prototype.setMissingSrcVolumes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    srcVolumeName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    clusterType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    namespace: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupInfo}
 */
proto.openstorage.api.SdkCloudBackupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupInfo;
  return proto.openstorage.api.SdkCloudBackupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupInfo}
 */
proto.openstorage.api.SdkCloudBackupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeName(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 5:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupClusterType} */ (reader.readEnum());
      msg.setClusterType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSrcVolumeName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getClusterType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string src_volume_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string src_volume_name = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getSrcVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setSrcVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
*/
proto.openstorage.api.SdkCloudBackupInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, string> metadata = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional SdkCloudBackupStatusType status = 6;
 * @return {!proto.openstorage.api.SdkCloudBackupStatusType}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupStatusType} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional SdkCloudBackupClusterType cluster_type = 7;
 * @return {!proto.openstorage.api.SdkCloudBackupClusterType}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getClusterType = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupClusterType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupClusterType} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setClusterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string namespace = 8;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupInfo.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupsList: jspb.Message.toObjectList(msg.getBackupsList(),
    proto.openstorage.api.SdkCloudBackupInfo.toObject, includeInstance),
    continuationToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse;
  return proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkCloudBackupInfo;
      reader.readMessage(value,proto.openstorage.api.SdkCloudBackupInfo.deserializeBinaryFromReader);
      msg.addBackups(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContinuationToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkCloudBackupInfo.serializeBinaryToWriter
    );
  }
  f = message.getContinuationToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated SdkCloudBackupInfo backups = 1;
 * @return {!Array<!proto.openstorage.api.SdkCloudBackupInfo>}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.getBackupsList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkCloudBackupInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkCloudBackupInfo, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkCloudBackupInfo>} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} returns this
*/
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.setBackupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupInfo}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.addBackups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkCloudBackupInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.clearBackupsList = function() {
  return this.setBackupsList([]);
};


/**
 * optional string continuation_token = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.getContinuationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupEnumerateWithFiltersResponse.prototype.setContinuationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupStatus.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bytesDone: jspb.Message.getFieldWithDefault(msg, 4, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    completedTime: (f = msg.getCompletedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nodeId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    infoList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    credentialId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bytesTotal: jspb.Message.getFieldWithDefault(msg, 11, 0),
    etaSeconds: jspb.Message.getFieldWithDefault(msg, 12, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupStatus}
 */
proto.openstorage.api.SdkCloudBackupStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupStatus;
  return proto.openstorage.api.SdkCloudBackupStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupStatus}
 */
proto.openstorage.api.SdkCloudBackupStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupOpType} */ (reader.readEnum());
      msg.setOptype(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytesDone(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addInfo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytesTotal(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEtaSeconds(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getBytesDone();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCompletedTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBytesTotal();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getEtaSeconds();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SdkCloudBackupOpType optype = 2;
 * @return {!proto.openstorage.api.SdkCloudBackupOpType}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getOptype = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupOpType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupOpType} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setOptype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SdkCloudBackupStatusType status = 3;
 * @return {!proto.openstorage.api.SdkCloudBackupStatusType}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupStatusType} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint64 bytes_done = 4;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getBytesDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setBytesDone = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
*/
proto.openstorage.api.SdkCloudBackupStatus.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp completed_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getCompletedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
*/
proto.openstorage.api.SdkCloudBackupStatus.prototype.setCompletedTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.clearCompletedTime = function() {
  return this.setCompletedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.hasCompletedTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string node_id = 7;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string src_volume_id = 8;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated string info = 9;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getInfoList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setInfoList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.addInfo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};


/**
 * optional string credential_id = 10;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 bytes_total = 11;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getBytesTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setBytesTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 eta_seconds = 12;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getEtaSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setEtaSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string group_id = 13;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatus} returns this
 */
proto.openstorage.api.SdkCloudBackupStatus.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    local: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    taskId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nearSyncMigrate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupStatusRequest;
  return proto.openstorage.api.SdkCloudBackupStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNearSyncMigrate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocal();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNearSyncMigrate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool local = 2;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.getLocal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.setLocal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string task_id = 3;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool near_sync_migrate = 4;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.getNearSyncMigrate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupStatusRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStatusRequest.prototype.setNearSyncMigrate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.openstorage.api.SdkCloudBackupStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupStatusResponse}
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupStatusResponse;
  return proto.openstorage.api.SdkCloudBackupStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupStatusResponse}
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.SdkCloudBackupStatus.deserializeBinaryFromReader, "", new proto.openstorage.api.SdkCloudBackupStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.SdkCloudBackupStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, SdkCloudBackupStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.SdkCloudBackupStatus>}
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.SdkCloudBackupStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.openstorage.api.SdkCloudBackupStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupStatusResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupStatusResponse.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupCatalogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogRequest}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupCatalogRequest;
  return proto.openstorage.api.SdkCloudBackupCatalogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogRequest}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupCatalogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.getBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.setBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupCatalogRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupCatalogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogResponse}
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupCatalogResponse;
  return proto.openstorage.api.SdkCloudBackupCatalogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogResponse}
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addContents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupCatalogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupCatalogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string contents = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.getContentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.setContentsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.addContents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupCatalogResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupCatalogResponse.prototype.clearContentsList = function() {
  return this.setContentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupHistoryItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupHistoryItem;
  return proto.openstorage.api.SdkCloudBackupHistoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupHistoryItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string src_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem} returns this
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem} returns this
*/
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem} returns this
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SdkCloudBackupStatusType status = 3;
 * @return {!proto.openstorage.api.SdkCloudBackupStatusType}
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupStatusType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupStatusType} value
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem} returns this
 */
proto.openstorage.api.SdkCloudBackupHistoryItem.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryRequest}
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupHistoryRequest;
  return proto.openstorage.api.SdkCloudBackupHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryRequest}
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string src_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupHistoryRequest.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    historyListList: jspb.Message.toObjectList(msg.getHistoryListList(),
    proto.openstorage.api.SdkCloudBackupHistoryItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryResponse}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupHistoryResponse;
  return proto.openstorage.api.SdkCloudBackupHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryResponse}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkCloudBackupHistoryItem;
      reader.readMessage(value,proto.openstorage.api.SdkCloudBackupHistoryItem.deserializeBinaryFromReader);
      msg.addHistoryList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistoryListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkCloudBackupHistoryItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkCloudBackupHistoryItem history_list = 1;
 * @return {!Array<!proto.openstorage.api.SdkCloudBackupHistoryItem>}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.getHistoryListList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkCloudBackupHistoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkCloudBackupHistoryItem, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkCloudBackupHistoryItem>} value
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryResponse} returns this
*/
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.setHistoryListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupHistoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryItem}
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.addHistoryList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkCloudBackupHistoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupHistoryResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupHistoryResponse.prototype.clearHistoryListList = function() {
  return this.setHistoryListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupStateChangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestedState: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeRequest}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupStateChangeRequest;
  return proto.openstorage.api.SdkCloudBackupStateChangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeRequest}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.SdkCloudBackupRequestedState} */ (reader.readEnum());
      msg.setRequestedState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupStateChangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestedState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SdkCloudBackupRequestedState requested_state = 2;
 * @return {!proto.openstorage.api.SdkCloudBackupRequestedState}
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.getRequestedState = function() {
  return /** @type {!proto.openstorage.api.SdkCloudBackupRequestedState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.SdkCloudBackupRequestedState} value
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupStateChangeRequest.prototype.setRequestedState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupStateChangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeResponse}
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupStateChangeResponse;
  return proto.openstorage.api.SdkCloudBackupStateChangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupStateChangeResponse}
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupStateChangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupStateChangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupStateChangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupScheduleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupScheduleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVolumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schedulesList: jspb.Message.toObjectList(msg.getSchedulesList(),
    proto.openstorage.api.SdkSchedulePolicyInterval.toObject, includeInstance),
    maxBackups: jspb.Message.getFieldWithDefault(msg, 4, 0),
    full: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    retentionDays: jspb.Message.getFieldWithDefault(msg, 6, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupScheduleInfo;
  return proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupScheduleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    case 3:
      var value = new proto.openstorage.api.SdkSchedulePolicyInterval;
      reader.readMessage(value,proto.openstorage.api.SdkSchedulePolicyInterval.deserializeBinaryFromReader);
      msg.addSchedules(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxBackups(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetentionDays(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 8:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupScheduleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupScheduleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchedulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.SdkSchedulePolicyInterval.serializeBinaryToWriter
    );
  }
  f = message.getMaxBackups();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getFull();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRetentionDays();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string src_volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getSrcVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setSrcVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SdkSchedulePolicyInterval schedules = 3;
 * @return {!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getSchedulesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkSchedulePolicyInterval, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkSchedulePolicyInterval>} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
*/
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setSchedulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.SdkSchedulePolicyInterval=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkSchedulePolicyInterval}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.addSchedules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.SdkSchedulePolicyInterval, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.clearSchedulesList = function() {
  return this.setSchedulesList([]);
};


/**
 * optional uint64 max_backups = 4;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getMaxBackups = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setMaxBackups = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool full = 5;
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setFull = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint32 retention_days = 6;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getRetentionDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setRetentionDays = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string group_id = 7;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> labels = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupScheduleInfo} returns this
 */
proto.openstorage.api.SdkCloudBackupScheduleInfo.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cloudSchedInfo: (f = msg.getCloudSchedInfo()) && proto.openstorage.api.SdkCloudBackupScheduleInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedCreateRequest;
  return proto.openstorage.api.SdkCloudBackupSchedCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkCloudBackupScheduleInfo;
      reader.readMessage(value,proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinaryFromReader);
      msg.setCloudSchedInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCloudSchedInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkCloudBackupScheduleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkCloudBackupScheduleInfo cloud_sched_info = 1;
 * @return {?proto.openstorage.api.SdkCloudBackupScheduleInfo}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.getCloudSchedInfo = function() {
  return /** @type{?proto.openstorage.api.SdkCloudBackupScheduleInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCloudBackupScheduleInfo, 1));
};


/**
 * @param {?proto.openstorage.api.SdkCloudBackupScheduleInfo|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest} returns this
*/
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.setCloudSchedInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.clearCloudSchedInfo = function() {
  return this.setCloudSchedInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateRequest.prototype.hasCloudSchedInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupScheduleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedCreateResponse;
  return proto.openstorage.api.SdkCloudBackupSchedCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupScheduleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupScheduleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string backup_schedule_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.prototype.getBackupScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupSchedCreateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedCreateResponse.prototype.setBackupScheduleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cloudSchedInfo: (f = msg.getCloudSchedInfo()) && proto.openstorage.api.SdkCloudBackupScheduleInfo.toObject(includeInstance, f),
    schedUuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedUpdateRequest;
  return proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkCloudBackupScheduleInfo;
      reader.readMessage(value,proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinaryFromReader);
      msg.setCloudSchedInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCloudSchedInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkCloudBackupScheduleInfo.serializeBinaryToWriter
    );
  }
  f = message.getSchedUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional SdkCloudBackupScheduleInfo cloud_sched_info = 1;
 * @return {?proto.openstorage.api.SdkCloudBackupScheduleInfo}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.getCloudSchedInfo = function() {
  return /** @type{?proto.openstorage.api.SdkCloudBackupScheduleInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCloudBackupScheduleInfo, 1));
};


/**
 * @param {?proto.openstorage.api.SdkCloudBackupScheduleInfo|undefined} value
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} returns this
*/
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.setCloudSchedInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.clearCloudSchedInfo = function() {
  return this.setCloudSchedInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.hasCloudSchedInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sched_uuid = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.getSchedUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateRequest.prototype.setSchedUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedUpdateResponse;
  return proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedUpdateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupScheduleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedDeleteRequest;
  return proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupScheduleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupScheduleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string backup_schedule_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.prototype.getBackupScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupSchedDeleteRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteRequest.prototype.setBackupScheduleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedDeleteResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedDeleteResponse;
  return proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedDeleteResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest;
  return proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cloudSchedListMap: (f = msg.getCloudSchedListMap()) ? f.toObject(includeInstance, proto.openstorage.api.SdkCloudBackupScheduleInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse;
  return proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCloudSchedListMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.SdkCloudBackupScheduleInfo.deserializeBinaryFromReader, "", new proto.openstorage.api.SdkCloudBackupScheduleInfo());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCloudSchedListMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.SdkCloudBackupScheduleInfo.serializeBinaryToWriter);
  }
};


/**
 * map<string, SdkCloudBackupScheduleInfo> cloud_sched_list = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.SdkCloudBackupScheduleInfo>}
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.prototype.getCloudSchedListMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.SdkCloudBackupScheduleInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.openstorage.api.SdkCloudBackupScheduleInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSchedEnumerateResponse.prototype.clearCloudSchedListMap = function() {
  this.getCloudSchedListMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credentialId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSizeRequest}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSizeRequest;
  return proto.openstorage.api.SdkCloudBackupSizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSizeRequest}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string backup_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.getBackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.setBackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string credential_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeRequest} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudBackupSizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudBackupSizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalDownloadBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    compressedObjectBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    capacityRequiredForRestore: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudBackupSizeResponse;
  return proto.openstorage.api.SdkCloudBackupSizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudBackupSizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalDownloadBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompressedObjectBytes(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCapacityRequiredForRestore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudBackupSizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudBackupSizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTotalDownloadBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCompressedObjectBytes();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getCapacityRequiredForRestore();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 size = 1;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_download_bytes = 2;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.getTotalDownloadBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.setTotalDownloadBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 compressed_object_bytes = 3;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.getCompressedObjectBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.setCompressedObjectBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 capacity_required_for_restore = 4;
 * @return {number}
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.getCapacityRequiredForRestore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkCloudBackupSizeResponse} returns this
 */
proto.openstorage.api.SdkCloudBackupSizeResponse.prototype.setCapacityRequiredForRestore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkRule.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRule.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    apisList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRule}
 */
proto.openstorage.api.SdkRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRule;
  return proto.openstorage.api.SdkRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRule}
 */
proto.openstorage.api.SdkRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addServices(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addApis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getApisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string services = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkRule.prototype.getServicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.setServicesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.addServices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};


/**
 * repeated string apis = 2;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkRule.prototype.getApisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.setApisList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.addApis = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkRule} returns this
 */
proto.openstorage.api.SdkRule.prototype.clearApisList = function() {
  return this.setApisList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkRole.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRole.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRole.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRole} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRole.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.openstorage.api.SdkRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRole.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRole;
  return proto.openstorage.api.SdkRole.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRole} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRole.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.openstorage.api.SdkRule;
      reader.readMessage(value,proto.openstorage.api.SdkRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRole.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRole.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRole} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRole.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.SdkRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkRole.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkRole} returns this
 */
proto.openstorage.api.SdkRole.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SdkRule rules = 2;
 * @return {!Array<!proto.openstorage.api.SdkRule>}
 */
proto.openstorage.api.SdkRole.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkRule, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkRule>} value
 * @return {!proto.openstorage.api.SdkRole} returns this
*/
proto.openstorage.api.SdkRole.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.SdkRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkRule}
 */
proto.openstorage.api.SdkRole.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.SdkRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkRole} returns this
 */
proto.openstorage.api.SdkRole.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.openstorage.api.SdkRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleCreateRequest}
 */
proto.openstorage.api.SdkRoleCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleCreateRequest;
  return proto.openstorage.api.SdkRoleCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleCreateRequest}
 */
proto.openstorage.api.SdkRoleCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkRole;
      reader.readMessage(value,proto.openstorage.api.SdkRole.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkRole role = 1;
 * @return {?proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRoleCreateRequest.prototype.getRole = function() {
  return /** @type{?proto.openstorage.api.SdkRole} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkRole, 1));
};


/**
 * @param {?proto.openstorage.api.SdkRole|undefined} value
 * @return {!proto.openstorage.api.SdkRoleCreateRequest} returns this
*/
proto.openstorage.api.SdkRoleCreateRequest.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkRoleCreateRequest} returns this
 */
proto.openstorage.api.SdkRoleCreateRequest.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkRoleCreateRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.openstorage.api.SdkRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleCreateResponse}
 */
proto.openstorage.api.SdkRoleCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleCreateResponse;
  return proto.openstorage.api.SdkRoleCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleCreateResponse}
 */
proto.openstorage.api.SdkRoleCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkRole;
      reader.readMessage(value,proto.openstorage.api.SdkRole.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkRole role = 1;
 * @return {?proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRoleCreateResponse.prototype.getRole = function() {
  return /** @type{?proto.openstorage.api.SdkRole} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkRole, 1));
};


/**
 * @param {?proto.openstorage.api.SdkRole|undefined} value
 * @return {!proto.openstorage.api.SdkRoleCreateResponse} returns this
*/
proto.openstorage.api.SdkRoleCreateResponse.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkRoleCreateResponse} returns this
 */
proto.openstorage.api.SdkRoleCreateResponse.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkRoleCreateResponse.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleEnumerateRequest}
 */
proto.openstorage.api.SdkRoleEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleEnumerateRequest;
  return proto.openstorage.api.SdkRoleEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleEnumerateRequest}
 */
proto.openstorage.api.SdkRoleEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkRoleEnumerateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleEnumerateResponse}
 */
proto.openstorage.api.SdkRoleEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleEnumerateResponse;
  return proto.openstorage.api.SdkRoleEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleEnumerateResponse}
 */
proto.openstorage.api.SdkRoleEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.SdkRoleEnumerateResponse} returns this
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkRoleEnumerateResponse} returns this
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkRoleEnumerateResponse} returns this
 */
proto.openstorage.api.SdkRoleEnumerateResponse.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleInspectRequest}
 */
proto.openstorage.api.SdkRoleInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleInspectRequest;
  return proto.openstorage.api.SdkRoleInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleInspectRequest}
 */
proto.openstorage.api.SdkRoleInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkRoleInspectRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkRoleInspectRequest} returns this
 */
proto.openstorage.api.SdkRoleInspectRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.openstorage.api.SdkRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleInspectResponse}
 */
proto.openstorage.api.SdkRoleInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleInspectResponse;
  return proto.openstorage.api.SdkRoleInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleInspectResponse}
 */
proto.openstorage.api.SdkRoleInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkRole;
      reader.readMessage(value,proto.openstorage.api.SdkRole.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkRole role = 1;
 * @return {?proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRoleInspectResponse.prototype.getRole = function() {
  return /** @type{?proto.openstorage.api.SdkRole} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkRole, 1));
};


/**
 * @param {?proto.openstorage.api.SdkRole|undefined} value
 * @return {!proto.openstorage.api.SdkRoleInspectResponse} returns this
*/
proto.openstorage.api.SdkRoleInspectResponse.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkRoleInspectResponse} returns this
 */
proto.openstorage.api.SdkRoleInspectResponse.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkRoleInspectResponse.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleDeleteRequest}
 */
proto.openstorage.api.SdkRoleDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleDeleteRequest;
  return proto.openstorage.api.SdkRoleDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleDeleteRequest}
 */
proto.openstorage.api.SdkRoleDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.SdkRoleDeleteRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkRoleDeleteRequest} returns this
 */
proto.openstorage.api.SdkRoleDeleteRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleDeleteResponse}
 */
proto.openstorage.api.SdkRoleDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleDeleteResponse;
  return proto.openstorage.api.SdkRoleDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleDeleteResponse}
 */
proto.openstorage.api.SdkRoleDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.openstorage.api.SdkRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleUpdateRequest}
 */
proto.openstorage.api.SdkRoleUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleUpdateRequest;
  return proto.openstorage.api.SdkRoleUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleUpdateRequest}
 */
proto.openstorage.api.SdkRoleUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkRole;
      reader.readMessage(value,proto.openstorage.api.SdkRole.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkRole role = 1;
 * @return {?proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRoleUpdateRequest.prototype.getRole = function() {
  return /** @type{?proto.openstorage.api.SdkRole} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkRole, 1));
};


/**
 * @param {?proto.openstorage.api.SdkRole|undefined} value
 * @return {!proto.openstorage.api.SdkRoleUpdateRequest} returns this
*/
proto.openstorage.api.SdkRoleUpdateRequest.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkRoleUpdateRequest} returns this
 */
proto.openstorage.api.SdkRoleUpdateRequest.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkRoleUpdateRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkRoleUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkRoleUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkRoleUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: (f = msg.getRole()) && proto.openstorage.api.SdkRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkRoleUpdateResponse}
 */
proto.openstorage.api.SdkRoleUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkRoleUpdateResponse;
  return proto.openstorage.api.SdkRoleUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkRoleUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkRoleUpdateResponse}
 */
proto.openstorage.api.SdkRoleUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkRole;
      reader.readMessage(value,proto.openstorage.api.SdkRole.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkRoleUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkRoleUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkRoleUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkRoleUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkRole role = 1;
 * @return {?proto.openstorage.api.SdkRole}
 */
proto.openstorage.api.SdkRoleUpdateResponse.prototype.getRole = function() {
  return /** @type{?proto.openstorage.api.SdkRole} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkRole, 1));
};


/**
 * @param {?proto.openstorage.api.SdkRole|undefined} value
 * @return {!proto.openstorage.api.SdkRoleUpdateResponse} returns this
*/
proto.openstorage.api.SdkRoleUpdateResponse.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkRoleUpdateResponse} returns this
 */
proto.openstorage.api.SdkRoleUpdateResponse.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkRoleUpdateResponse.prototype.hasRole = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.FilesystemTrim.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.FilesystemTrim.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.FilesystemTrim} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FilesystemTrim.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.FilesystemTrim}
 */
proto.openstorage.api.FilesystemTrim.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.FilesystemTrim;
  return proto.openstorage.api.FilesystemTrim.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.FilesystemTrim} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.FilesystemTrim}
 */
proto.openstorage.api.FilesystemTrim.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.FilesystemTrim.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.FilesystemTrim.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.FilesystemTrim} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FilesystemTrim.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus = {
  FS_TRIM_UNKNOWN: 0,
  FS_TRIM_NOT_RUNNING: 1,
  FS_TRIM_STARTED: 2,
  FS_TRIM_INPROGRESS: 3,
  FS_TRIM_STOPPED: 4,
  FS_TRIM_COMPLETED: 5,
  FS_TRIM_FAILED: 6
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mountPath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStartRequest;
  return proto.openstorage.api.SdkFilesystemTrimStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mount_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStartRequest.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStartResponse;
  return proto.openstorage.api.SdkFilesystemTrimStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FilesystemTrim.FilesystemTrimStatus status = 1;
 * @return {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartResponse} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStartResponse} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStartResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mountPath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStatusRequest;
  return proto.openstorage.api.SdkFilesystemTrimStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mount_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStatusRequest.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStatusResponse;
  return proto.openstorage.api.SdkFilesystemTrimStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FilesystemTrim.FilesystemTrimStatus status = 1;
 * @return {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStatusResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusRequest}
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimStatusRequest;
  return proto.openstorage.api.SdkAutoFSTrimStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusRequest}
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    trimStatusMap: (f = msg.getTrimStatusMap()) ? f.toObject(includeInstance, undefined) : [],
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusResponse}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimStatusResponse;
  return proto.openstorage.api.SdkAutoFSTrimStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusResponse}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTrimStatusMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrimStatusMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * map<string, FilesystemTrim.FilesystemTrimStatus> trim_status = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus>}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.getTrimStatusMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.FilesystemTrim.FilesystemTrimStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.clearTrimStatusMap = function() {
  this.getTrimStatusMap().clear();
  return this;};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimStatusResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimStatusResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimUsageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageRequest}
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimUsageRequest;
  return proto.openstorage.api.SdkAutoFSTrimUsageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageRequest}
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimUsageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimUsageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimUsageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usageMap: (f = msg.getUsageMap()) ? f.toObject(includeInstance, proto.openstorage.api.FstrimVolumeUsageInfo.toObject) : [],
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageResponse}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimUsageResponse;
  return proto.openstorage.api.SdkAutoFSTrimUsageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageResponse}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getUsageMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.FstrimVolumeUsageInfo.deserializeBinaryFromReader, "", new proto.openstorage.api.FstrimVolumeUsageInfo());
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimUsageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimUsageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsageMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.FstrimVolumeUsageInfo.serializeBinaryToWriter);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * map<string, FstrimVolumeUsageInfo> usage = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.FstrimVolumeUsageInfo>}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.getUsageMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.FstrimVolumeUsageInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.openstorage.api.FstrimVolumeUsageInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.clearUsageMap = function() {
  this.getUsageMap().clear();
  return this;};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimUsageResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimUsageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mountPath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStopRequest;
  return proto.openstorage.api.SdkFilesystemTrimStopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopRequest}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMountPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMountPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mount_path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.getMountPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopRequest} returns this
 */
proto.openstorage.api.SdkFilesystemTrimStopRequest.prototype.setMountPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeBytesUsedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    volUtilInfo: (f = msg.getVolUtilInfo()) && proto.openstorage.api.VolumeBytesUsedByNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedResponse}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeBytesUsedResponse;
  return proto.openstorage.api.SdkVolumeBytesUsedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedResponse}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.VolumeBytesUsedByNode;
      reader.readMessage(value,proto.openstorage.api.VolumeBytesUsedByNode.deserializeBinaryFromReader);
      msg.setVolUtilInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeBytesUsedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolUtilInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.VolumeBytesUsedByNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional VolumeBytesUsedByNode vol_util_info = 1;
 * @return {?proto.openstorage.api.VolumeBytesUsedByNode}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.getVolUtilInfo = function() {
  return /** @type{?proto.openstorage.api.VolumeBytesUsedByNode} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumeBytesUsedByNode, 1));
};


/**
 * @param {?proto.openstorage.api.VolumeBytesUsedByNode|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedResponse} returns this
*/
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.setVolUtilInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedResponse} returns this
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.clearVolUtilInfo = function() {
  return this.setVolUtilInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeBytesUsedResponse.prototype.hasVolUtilInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeBytesUsedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    idsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeBytesUsedRequest;
  return proto.openstorage.api.SdkVolumeBytesUsedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeBytesUsedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeBytesUsedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      2,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest} returns this
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated uint64 ids = 2;
 * @return {!Array<number>}
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.getIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest} returns this
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest} returns this
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkVolumeBytesUsedRequest} returns this
 */
proto.openstorage.api.SdkVolumeBytesUsedRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemTrimStopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemTrimStopResponse;
  return proto.openstorage.api.SdkFilesystemTrimStopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemTrimStopResponse}
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemTrimStopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemTrimStopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemTrimStopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimPushRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushRequest}
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimPushRequest;
  return proto.openstorage.api.SdkAutoFSTrimPushRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushRequest}
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimPushRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushRequest} returns this
 */
proto.openstorage.api.SdkAutoFSTrimPushRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimPushResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushResponse}
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimPushResponse;
  return proto.openstorage.api.SdkAutoFSTrimPushResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushResponse}
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimPushResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPushResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimPushResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimPushResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimPopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopRequest}
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimPopRequest;
  return proto.openstorage.api.SdkAutoFSTrimPopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopRequest}
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimPopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopRequest} returns this
 */
proto.openstorage.api.SdkAutoFSTrimPopRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkAutoFSTrimPopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopResponse}
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkAutoFSTrimPopResponse;
  return proto.openstorage.api.SdkAutoFSTrimPopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopResponse}
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkAutoFSTrimPopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkAutoFSTrimPopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkAutoFSTrimPopResponse} returns this
 */
proto.openstorage.api.SdkAutoFSTrimPopResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.FilesystemCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.FilesystemCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.FilesystemCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FilesystemCheck.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.FilesystemCheck}
 */
proto.openstorage.api.FilesystemCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.FilesystemCheck;
  return proto.openstorage.api.FilesystemCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.FilesystemCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.FilesystemCheck}
 */
proto.openstorage.api.FilesystemCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.FilesystemCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.FilesystemCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.FilesystemCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.FilesystemCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus = {
  FS_CHECK_UNKNOWN: 0,
  FS_CHECK_NOT_RUNNING: 1,
  FS_CHECK_STARTED: 2,
  FS_CHECK_INPROGRESS: 3,
  FS_CHECK_STOPPED: 4,
  FS_CHECK_COMPLETED: 5,
  FS_CHECK_FAILED: 6
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStartRequest;
  return proto.openstorage.api.SdkFilesystemCheckStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartRequest} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mode = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartRequest} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStartRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStartResponse;
  return proto.openstorage.api.SdkFilesystemCheckStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FilesystemCheck.FilesystemCheckStatus status = 1;
 * @return {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStartResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStartResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStatusRequest;
  return proto.openstorage.api.SdkFilesystemCheckStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusRequest} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStatusRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    healthStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStatusResponse;
  return proto.openstorage.api.SdkFilesystemCheckStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.FilesystemHealthStatus} */ (reader.readEnum());
      msg.setHealthStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHealthStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional FilesystemCheck.FilesystemCheckStatus status = 1;
 * @return {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemCheck.FilesystemCheckStatus} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional FilesystemHealthStatus health_status = 2;
 * @return {!proto.openstorage.api.FilesystemHealthStatus}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.getHealthStatus = function() {
  return /** @type {!proto.openstorage.api.FilesystemHealthStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.FilesystemHealthStatus} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.setHealthStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string mode = 3;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStatusResponse} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStatusResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStopRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStopRequest;
  return proto.openstorage.api.SdkFilesystemCheckStopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStopRequest}
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkFilesystemCheckStopRequest} returns this
 */
proto.openstorage.api.SdkFilesystemCheckStopRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkFilesystemCheckStopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStopResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkFilesystemCheckStopResponse;
  return proto.openstorage.api.SdkFilesystemCheckStopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkFilesystemCheckStopResponse}
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkFilesystemCheckStopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkFilesystemCheckStopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkFilesystemCheckStopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkIdentityCapabilitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesRequest}
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkIdentityCapabilitiesRequest;
  return proto.openstorage.api.SdkIdentityCapabilitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesRequest}
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkIdentityCapabilitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityCapabilitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkIdentityCapabilitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    capabilitiesList: jspb.Message.toObjectList(msg.getCapabilitiesList(),
    proto.openstorage.api.SdkServiceCapability.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesResponse}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkIdentityCapabilitiesResponse;
  return proto.openstorage.api.SdkIdentityCapabilitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesResponse}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkServiceCapability;
      reader.readMessage(value,proto.openstorage.api.SdkServiceCapability.deserializeBinaryFromReader);
      msg.addCapabilities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkIdentityCapabilitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkIdentityCapabilitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapabilitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.SdkServiceCapability.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SdkServiceCapability capabilities = 1;
 * @return {!Array<!proto.openstorage.api.SdkServiceCapability>}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.getCapabilitiesList = function() {
  return /** @type{!Array<!proto.openstorage.api.SdkServiceCapability>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.SdkServiceCapability, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.SdkServiceCapability>} value
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesResponse} returns this
*/
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.setCapabilitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.SdkServiceCapability=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.SdkServiceCapability}
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.addCapabilities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.SdkServiceCapability, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.SdkIdentityCapabilitiesResponse} returns this
 */
proto.openstorage.api.SdkIdentityCapabilitiesResponse.prototype.clearCapabilitiesList = function() {
  return this.setCapabilitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkIdentityVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkIdentityVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkIdentityVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkIdentityVersionRequest}
 */
proto.openstorage.api.SdkIdentityVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkIdentityVersionRequest;
  return proto.openstorage.api.SdkIdentityVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkIdentityVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkIdentityVersionRequest}
 */
proto.openstorage.api.SdkIdentityVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkIdentityVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkIdentityVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkIdentityVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkIdentityVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkIdentityVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sdkVersion: (f = msg.getSdkVersion()) && proto.openstorage.api.SdkVersion.toObject(includeInstance, f),
    version: (f = msg.getVersion()) && proto.openstorage.api.StorageVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse}
 */
proto.openstorage.api.SdkIdentityVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkIdentityVersionResponse;
  return proto.openstorage.api.SdkIdentityVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkIdentityVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse}
 */
proto.openstorage.api.SdkIdentityVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkVersion;
      reader.readMessage(value,proto.openstorage.api.SdkVersion.deserializeBinaryFromReader);
      msg.setSdkVersion(value);
      break;
    case 2:
      var value = new proto.openstorage.api.StorageVersion;
      reader.readMessage(value,proto.openstorage.api.StorageVersion.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkIdentityVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkIdentityVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkIdentityVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSdkVersion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkVersion.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.StorageVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional SdkVersion sdk_version = 1;
 * @return {?proto.openstorage.api.SdkVersion}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.getSdkVersion = function() {
  return /** @type{?proto.openstorage.api.SdkVersion} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkVersion, 1));
};


/**
 * @param {?proto.openstorage.api.SdkVersion|undefined} value
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse} returns this
*/
proto.openstorage.api.SdkIdentityVersionResponse.prototype.setSdkVersion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse} returns this
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.clearSdkVersion = function() {
  return this.setSdkVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.hasSdkVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StorageVersion version = 2;
 * @return {?proto.openstorage.api.StorageVersion}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.getVersion = function() {
  return /** @type{?proto.openstorage.api.StorageVersion} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.StorageVersion, 2));
};


/**
 * @param {?proto.openstorage.api.StorageVersion|undefined} value
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse} returns this
*/
proto.openstorage.api.SdkIdentityVersionResponse.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkIdentityVersionResponse} returns this
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkIdentityVersionResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkServiceCapability.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkServiceCapability.TypeCase = {
  TYPE_NOT_SET: 0,
  SERVICE: 1
};

/**
 * @return {proto.openstorage.api.SdkServiceCapability.TypeCase}
 */
proto.openstorage.api.SdkServiceCapability.prototype.getTypeCase = function() {
  return /** @type {proto.openstorage.api.SdkServiceCapability.TypeCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkServiceCapability.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkServiceCapability.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkServiceCapability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkServiceCapability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkServiceCapability.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.openstorage.api.SdkServiceCapability.OpenStorageService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkServiceCapability}
 */
proto.openstorage.api.SdkServiceCapability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkServiceCapability;
  return proto.openstorage.api.SdkServiceCapability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkServiceCapability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkServiceCapability}
 */
proto.openstorage.api.SdkServiceCapability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.SdkServiceCapability.OpenStorageService;
      reader.readMessage(value,proto.openstorage.api.SdkServiceCapability.OpenStorageService.deserializeBinaryFromReader);
      msg.setService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkServiceCapability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkServiceCapability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkServiceCapability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkServiceCapability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.SdkServiceCapability.OpenStorageService.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkServiceCapability.OpenStorageService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkServiceCapability.OpenStorageService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkServiceCapability.OpenStorageService}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkServiceCapability.OpenStorageService;
  return proto.openstorage.api.SdkServiceCapability.OpenStorageService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkServiceCapability.OpenStorageService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkServiceCapability.OpenStorageService}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkServiceCapability.OpenStorageService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkServiceCapability.OpenStorageService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type = {
  UNKNOWN: 0,
  CLUSTER: 1,
  CLOUD_BACKUP: 2,
  CREDENTIALS: 3,
  NODE: 4,
  OBJECT_STORAGE: 5,
  SCHEDULE_POLICY: 6,
  VOLUME: 7,
  ALERTS: 8,
  MOUNT_ATTACH: 9,
  ROLE: 10,
  CLUSTER_PAIR: 11,
  MIGRATE: 12,
  STORAGE_POLICY: 13
};

/**
 * optional Type type = 1;
 * @return {!proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type}
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.prototype.getType = function() {
  return /** @type {!proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.SdkServiceCapability.OpenStorageService.Type} value
 * @return {!proto.openstorage.api.SdkServiceCapability.OpenStorageService} returns this
 */
proto.openstorage.api.SdkServiceCapability.OpenStorageService.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional OpenStorageService service = 1;
 * @return {?proto.openstorage.api.SdkServiceCapability.OpenStorageService}
 */
proto.openstorage.api.SdkServiceCapability.prototype.getService = function() {
  return /** @type{?proto.openstorage.api.SdkServiceCapability.OpenStorageService} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkServiceCapability.OpenStorageService, 1));
};


/**
 * @param {?proto.openstorage.api.SdkServiceCapability.OpenStorageService|undefined} value
 * @return {!proto.openstorage.api.SdkServiceCapability} returns this
*/
proto.openstorage.api.SdkServiceCapability.prototype.setService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openstorage.api.SdkServiceCapability.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkServiceCapability} returns this
 */
proto.openstorage.api.SdkServiceCapability.prototype.clearService = function() {
  return this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkServiceCapability.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    major: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVersion}
 */
proto.openstorage.api.SdkVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVersion;
  return proto.openstorage.api.SdkVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVersion}
 */
proto.openstorage.api.SdkVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPatch(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMajor();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPatch();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.SdkVersion.Version = {
  MUST_HAVE_ZERO_VALUE: 0,
  MAJOR: 0,
  MINOR: 163,
  PATCH: 0
};

/**
 * optional int32 major = 1;
 * @return {number}
 */
proto.openstorage.api.SdkVersion.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkVersion} returns this
 */
proto.openstorage.api.SdkVersion.prototype.setMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 minor = 2;
 * @return {number}
 */
proto.openstorage.api.SdkVersion.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkVersion} returns this
 */
proto.openstorage.api.SdkVersion.prototype.setMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 patch = 3;
 * @return {number}
 */
proto.openstorage.api.SdkVersion.prototype.getPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.SdkVersion} returns this
 */
proto.openstorage.api.SdkVersion.prototype.setPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.openstorage.api.SdkVersion.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVersion} returns this
 */
proto.openstorage.api.SdkVersion.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.StorageVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.StorageVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.StorageVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    driver: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    detailsMap: (f = msg.getDetailsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.StorageVersion}
 */
proto.openstorage.api.StorageVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.StorageVersion;
  return proto.openstorage.api.StorageVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.StorageVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.StorageVersion}
 */
proto.openstorage.api.StorageVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriver(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = msg.getDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.StorageVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.StorageVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.StorageVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.StorageVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDriver();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string driver = 1;
 * @return {string}
 */
proto.openstorage.api.StorageVersion.prototype.getDriver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageVersion} returns this
 */
proto.openstorage.api.StorageVersion.prototype.setDriver = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.openstorage.api.StorageVersion.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.StorageVersion} returns this
 */
proto.openstorage.api.StorageVersion.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> details = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.StorageVersion.prototype.getDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.StorageVersion} returns this
 */
proto.openstorage.api.StorageVersion.prototype.clearDetailsMap = function() {
  this.getDetailsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrate.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrate.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrate}
 */
proto.openstorage.api.CloudMigrate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrate;
  return proto.openstorage.api.CloudMigrate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrate}
 */
proto.openstorage.api.CloudMigrate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.CloudMigrate.OperationType = {
  INVALIDTYPE: 0,
  MIGRATECLUSTER: 1,
  MIGRATEVOLUME: 2,
  MIGRATEVOLUMEGROUP: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.CloudMigrate.Stage = {
  INVALIDSTAGE: 0,
  BACKUP: 1,
  RESTORE: 2,
  VOLUMEUPDATE: 3,
  DONE: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.CloudMigrate.Status = {
  INVALIDSTATUS: 0,
  QUEUED: 1,
  INITIALIZED: 2,
  INPROGRESS: 3,
  FAILED: 4,
  COMPLETE: 5,
  CANCELED: 6
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    operation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clusterId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    targetId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateStartRequest}
 */
proto.openstorage.api.CloudMigrateStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateStartRequest;
  return proto.openstorage.api.CloudMigrateStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateStartRequest}
 */
proto.openstorage.api.CloudMigrateStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.openstorage.api.CloudMigrate.OperationType} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTargetId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CloudMigrate.OperationType operation = 1;
 * @return {!proto.openstorage.api.CloudMigrate.OperationType}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.getOperation = function() {
  return /** @type {!proto.openstorage.api.CloudMigrate.OperationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.openstorage.api.CloudMigrate.OperationType} value
 * @return {!proto.openstorage.api.CloudMigrateStartRequest} returns this
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string cluster_id = 2;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStartRequest} returns this
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string target_id = 3;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.getTargetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStartRequest} returns this
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.setTargetId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string task_id = 4;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStartRequest} returns this
 */
proto.openstorage.api.CloudMigrateStartRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_ = [[200,201,202]];

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.OptCase = {
  OPT_NOT_SET: 0,
  VOLUME: 200,
  VOLUME_GROUP: 201,
  ALL_VOLUMES: 202
};

/**
 * @return {proto.openstorage.api.SdkCloudMigrateStartRequest.OptCase}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getOptCase = function() {
  return /** @type {proto.openstorage.api.SdkCloudMigrateStartRequest.OptCase} */(jspb.Message.computeOneofCase(this, proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taskId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    volume: (f = msg.getVolume()) && proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.toObject(includeInstance, f),
    volumeGroup: (f = msg.getVolumeGroup()) && proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.toObject(includeInstance, f),
    allVolumes: (f = msg.getAllVolumes()) && proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStartRequest;
  return proto.openstorage.api.SdkCloudMigrateStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 200:
      var value = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume;
      reader.readMessage(value,proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 201:
      var value = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup;
      reader.readMessage(value,proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.deserializeBinaryFromReader);
      msg.setVolumeGroup(value);
      break;
    case 202:
      var value = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes;
      reader.readMessage(value,proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.deserializeBinaryFromReader);
      msg.setAllVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.serializeBinaryToWriter
    );
  }
  f = message.getVolumeGroup();
  if (f != null) {
    writer.writeMessage(
      201,
      f,
      proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.serializeBinaryToWriter
    );
  }
  f = message.getAllVolumes();
  if (f != null) {
    writer.writeMessage(
      202,
      f,
      proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume;
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup;
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes;
  return proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string cluster_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string task_id = 2;
 * @return {string}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MigrateVolume volume = 200;
 * @return {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getVolume = function() {
  return /** @type{?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume, 200));
};


/**
 * @param {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolume|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
*/
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.setVolume = function(value) {
  return jspb.Message.setOneofWrapperField(this, 200, proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional MigrateVolumeGroup volume_group = 201;
 * @return {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getVolumeGroup = function() {
  return /** @type{?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup, 201));
};


/**
 * @param {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateVolumeGroup|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
*/
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.setVolumeGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 201, proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.clearVolumeGroup = function() {
  return this.setVolumeGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.hasVolumeGroup = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional MigrateAllVolumes all_volumes = 202;
 * @return {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.getAllVolumes = function() {
  return /** @type{?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes, 202));
};


/**
 * @param {?proto.openstorage.api.SdkCloudMigrateStartRequest.MigrateAllVolumes|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
*/
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.setAllVolumes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 202, proto.openstorage.api.SdkCloudMigrateStartRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.clearAllVolumes = function() {
  return this.setAllVolumes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStartRequest.prototype.hasAllVolumes = function() {
  return jspb.Message.getField(this, 202) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateStartResponse}
 */
proto.openstorage.api.CloudMigrateStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateStartResponse;
  return proto.openstorage.api.CloudMigrateStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateStartResponse}
 */
proto.openstorage.api.CloudMigrateStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStartResponse.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStartResponse} returns this
 */
proto.openstorage.api.CloudMigrateStartResponse.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.CloudMigrateStartResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartResponse}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStartResponse;
  return proto.openstorage.api.SdkCloudMigrateStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartResponse}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CloudMigrateStartResponse;
      reader.readMessage(value,proto.openstorage.api.CloudMigrateStartResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CloudMigrateStartResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CloudMigrateStartResponse result = 1;
 * @return {?proto.openstorage.api.CloudMigrateStartResponse}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.CloudMigrateStartResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CloudMigrateStartResponse, 1));
};


/**
 * @param {?proto.openstorage.api.CloudMigrateStartResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStartResponse} returns this
*/
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStartResponse} returns this
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStartResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateCancelRequest}
 */
proto.openstorage.api.CloudMigrateCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateCancelRequest;
  return proto.openstorage.api.CloudMigrateCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateCancelRequest}
 */
proto.openstorage.api.CloudMigrateCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateCancelRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateCancelRequest} returns this
 */
proto.openstorage.api.CloudMigrateCancelRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.openstorage.api.CloudMigrateCancelRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelRequest}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateCancelRequest;
  return proto.openstorage.api.SdkCloudMigrateCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelRequest}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CloudMigrateCancelRequest;
      reader.readMessage(value,proto.openstorage.api.CloudMigrateCancelRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CloudMigrateCancelRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional CloudMigrateCancelRequest request = 1;
 * @return {?proto.openstorage.api.CloudMigrateCancelRequest}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.getRequest = function() {
  return /** @type{?proto.openstorage.api.CloudMigrateCancelRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CloudMigrateCancelRequest, 1));
};


/**
 * @param {?proto.openstorage.api.CloudMigrateCancelRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelRequest} returns this
*/
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateCancelRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateCancelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelResponse}
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateCancelResponse;
  return proto.openstorage.api.SdkCloudMigrateCancelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateCancelResponse}
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateCancelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateCancelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateCancelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clusterId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    localVolumeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localVolumeName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    remoteVolumeId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cloudbackupId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currentStage: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lastUpdate: (f = msg.getLastUpdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    errorReason: jspb.Message.getFieldWithDefault(msg, 10, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    completedTime: (f = msg.getCompletedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    bytesTotal: jspb.Message.getFieldWithDefault(msg, 13, 0),
    bytesDone: jspb.Message.getFieldWithDefault(msg, 14, 0),
    etaSeconds: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateInfo}
 */
proto.openstorage.api.CloudMigrateInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateInfo;
  return proto.openstorage.api.CloudMigrateInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateInfo}
 */
proto.openstorage.api.CloudMigrateInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalVolumeId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalVolumeName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteVolumeId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudbackupId(value);
      break;
    case 7:
      var value = /** @type {!proto.openstorage.api.CloudMigrate.Stage} */ (reader.readEnum());
      msg.setCurrentStage(value);
      break;
    case 8:
      var value = /** @type {!proto.openstorage.api.CloudMigrate.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorReason(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytesTotal(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBytesDone(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEtaSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocalVolumeId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalVolumeName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRemoteVolumeId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCloudbackupId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrentStage();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getLastUpdate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getErrorReason();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCompletedTime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBytesTotal();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getBytesDone();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getEtaSeconds();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster_id = 2;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string local_volume_id = 3;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getLocalVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setLocalVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string local_volume_name = 4;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getLocalVolumeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setLocalVolumeName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string remote_volume_id = 5;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getRemoteVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setRemoteVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cloudbackup_id = 6;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getCloudbackupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setCloudbackupId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional CloudMigrate.Stage current_stage = 7;
 * @return {!proto.openstorage.api.CloudMigrate.Stage}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getCurrentStage = function() {
  return /** @type {!proto.openstorage.api.CloudMigrate.Stage} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.openstorage.api.CloudMigrate.Stage} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setCurrentStage = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional CloudMigrate.Status status = 8;
 * @return {!proto.openstorage.api.CloudMigrate.Status}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getStatus = function() {
  return /** @type {!proto.openstorage.api.CloudMigrate.Status} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.openstorage.api.CloudMigrate.Status} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp last_update = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getLastUpdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
*/
proto.openstorage.api.CloudMigrateInfo.prototype.setLastUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.clearLastUpdate = function() {
  return this.setLastUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.hasLastUpdate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string error_reason = 10;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getErrorReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setErrorReason = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
*/
proto.openstorage.api.CloudMigrateInfo.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp completed_time = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getCompletedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
*/
proto.openstorage.api.CloudMigrateInfo.prototype.setCompletedTime = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.clearCompletedTime = function() {
  return this.setCompletedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.hasCompletedTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 bytes_total = 13;
 * @return {number}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getBytesTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setBytesTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 bytes_done = 14;
 * @return {number}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getBytesDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setBytesDone = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 eta_seconds = 15;
 * @return {number}
 */
proto.openstorage.api.CloudMigrateInfo.prototype.getEtaSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.CloudMigrateInfo} returns this
 */
proto.openstorage.api.CloudMigrateInfo.prototype.setEtaSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.CloudMigrateInfoList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateInfoList.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateInfoList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateInfoList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateInfoList.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.openstorage.api.CloudMigrateInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateInfoList}
 */
proto.openstorage.api.CloudMigrateInfoList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateInfoList;
  return proto.openstorage.api.CloudMigrateInfoList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateInfoList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateInfoList}
 */
proto.openstorage.api.CloudMigrateInfoList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CloudMigrateInfo;
      reader.readMessage(value,proto.openstorage.api.CloudMigrateInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateInfoList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateInfoList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateInfoList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateInfoList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.CloudMigrateInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CloudMigrateInfo list = 1;
 * @return {!Array<!proto.openstorage.api.CloudMigrateInfo>}
 */
proto.openstorage.api.CloudMigrateInfoList.prototype.getListList = function() {
  return /** @type{!Array<!proto.openstorage.api.CloudMigrateInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.CloudMigrateInfo, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.CloudMigrateInfo>} value
 * @return {!proto.openstorage.api.CloudMigrateInfoList} returns this
*/
proto.openstorage.api.CloudMigrateInfoList.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.CloudMigrateInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.CloudMigrateInfo}
 */
proto.openstorage.api.CloudMigrateInfoList.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.CloudMigrateInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.CloudMigrateInfoList} returns this
 */
proto.openstorage.api.CloudMigrateInfoList.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.openstorage.api.CloudMigrateStatusRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusRequest}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStatusRequest;
  return proto.openstorage.api.SdkCloudMigrateStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusRequest}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CloudMigrateStatusRequest;
      reader.readMessage(value,proto.openstorage.api.CloudMigrateStatusRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CloudMigrateStatusRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional CloudMigrateStatusRequest request = 1;
 * @return {?proto.openstorage.api.CloudMigrateStatusRequest}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.getRequest = function() {
  return /** @type{?proto.openstorage.api.CloudMigrateStatusRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CloudMigrateStatusRequest, 1));
};


/**
 * @param {?proto.openstorage.api.CloudMigrateStatusRequest|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusRequest} returns this
*/
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusRequest} returns this
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStatusRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clusterId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateStatusRequest}
 */
proto.openstorage.api.CloudMigrateStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateStatusRequest;
  return proto.openstorage.api.CloudMigrateStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateStatusRequest}
 */
proto.openstorage.api.CloudMigrateStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStatusRequest} returns this
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.setTaskId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster_id = 2;
 * @return {string}
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.CloudMigrateStatusRequest} returns this
 */
proto.openstorage.api.CloudMigrateStatusRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CloudMigrateStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CloudMigrateStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CloudMigrateStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoMap: (f = msg.getInfoMap()) ? f.toObject(includeInstance, proto.openstorage.api.CloudMigrateInfoList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CloudMigrateStatusResponse}
 */
proto.openstorage.api.CloudMigrateStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CloudMigrateStatusResponse;
  return proto.openstorage.api.CloudMigrateStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CloudMigrateStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CloudMigrateStatusResponse}
 */
proto.openstorage.api.CloudMigrateStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getInfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.CloudMigrateInfoList.deserializeBinaryFromReader, "", new proto.openstorage.api.CloudMigrateInfoList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CloudMigrateStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CloudMigrateStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CloudMigrateStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CloudMigrateStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.CloudMigrateInfoList.serializeBinaryToWriter);
  }
};


/**
 * map<string, CloudMigrateInfoList> info = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.CloudMigrateInfoList>}
 */
proto.openstorage.api.CloudMigrateStatusResponse.prototype.getInfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.CloudMigrateInfoList>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.openstorage.api.CloudMigrateInfoList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.CloudMigrateStatusResponse} returns this
 */
proto.openstorage.api.CloudMigrateStatusResponse.prototype.clearInfoMap = function() {
  this.getInfoMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkCloudMigrateStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.CloudMigrateStatusResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusResponse}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkCloudMigrateStatusResponse;
  return proto.openstorage.api.SdkCloudMigrateStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusResponse}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CloudMigrateStatusResponse;
      reader.readMessage(value,proto.openstorage.api.CloudMigrateStatusResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkCloudMigrateStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkCloudMigrateStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CloudMigrateStatusResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CloudMigrateStatusResponse result = 1;
 * @return {?proto.openstorage.api.CloudMigrateStatusResponse}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.CloudMigrateStatusResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CloudMigrateStatusResponse, 1));
};


/**
 * @param {?proto.openstorage.api.CloudMigrateStatusResponse|undefined} value
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusResponse} returns this
*/
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkCloudMigrateStatusResponse} returns this
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkCloudMigrateStatusResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairMode.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairMode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairMode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairMode.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairMode}
 */
proto.openstorage.api.ClusterPairMode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairMode;
  return proto.openstorage.api.ClusterPairMode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairMode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairMode}
 */
proto.openstorage.api.ClusterPairMode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairMode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairMode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairMode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairMode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.openstorage.api.ClusterPairMode.Mode = {
  DEFAULT: 0,
  DISASTERRECOVERY: 1,
  ONETIMEMIGRATION: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteClusterIp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteClusterPort: jspb.Message.getFieldWithDefault(msg, 2, 0),
    remoteClusterToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    setDefault: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    mode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    credentialId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairCreateRequest}
 */
proto.openstorage.api.ClusterPairCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairCreateRequest;
  return proto.openstorage.api.ClusterPairCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairCreateRequest}
 */
proto.openstorage.api.ClusterPairCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterIp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRemoteClusterPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterToken(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSetDefault(value);
      break;
    case 5:
      var value = /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteClusterIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteClusterPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRemoteClusterToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSetDefault();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string remote_cluster_ip = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getRemoteClusterIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setRemoteClusterIp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 remote_cluster_port = 2;
 * @return {number}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getRemoteClusterPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setRemoteClusterPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string remote_cluster_token = 3;
 * @return {string}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getRemoteClusterToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setRemoteClusterToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool set_default = 4;
 * @return {boolean}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getSetDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setSetDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional ClusterPairMode.Mode mode = 5;
 * @return {!proto.openstorage.api.ClusterPairMode.Mode}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getMode = function() {
  return /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.openstorage.api.ClusterPairMode.Mode} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string credential_id = 6;
 * @return {string}
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairCreateRequest} returns this
 */
proto.openstorage.api.ClusterPairCreateRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteClusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteClusterName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairCreateResponse}
 */
proto.openstorage.api.ClusterPairCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairCreateResponse;
  return proto.openstorage.api.ClusterPairCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairCreateResponse}
 */
proto.openstorage.api.ClusterPairCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteClusterName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string remote_cluster_id = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.getRemoteClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairCreateResponse} returns this
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.setRemoteClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remote_cluster_name = 2;
 * @return {string}
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.getRemoteClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairCreateResponse} returns this
 */
proto.openstorage.api.ClusterPairCreateResponse.prototype.setRemoteClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.openstorage.api.ClusterPairCreateRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairCreateRequest}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairCreateRequest;
  return proto.openstorage.api.SdkClusterPairCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairCreateRequest}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairCreateRequest;
      reader.readMessage(value,proto.openstorage.api.ClusterPairCreateRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairCreateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairCreateRequest request = 1;
 * @return {?proto.openstorage.api.ClusterPairCreateRequest}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.getRequest = function() {
  return /** @type{?proto.openstorage.api.ClusterPairCreateRequest} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairCreateRequest, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairCreateRequest|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairCreateRequest} returns this
*/
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairCreateRequest} returns this
 */
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairCreateRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.ClusterPairCreateResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairCreateResponse}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairCreateResponse;
  return proto.openstorage.api.SdkClusterPairCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairCreateResponse}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairCreateResponse;
      reader.readMessage(value,proto.openstorage.api.ClusterPairCreateResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairCreateResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairCreateResponse result = 1;
 * @return {?proto.openstorage.api.ClusterPairCreateResponse}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.ClusterPairCreateResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairCreateResponse, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairCreateResponse|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairCreateResponse} returns this
*/
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairCreateResponse} returns this
 */
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairCreateResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairProcessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairProcessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairProcessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceClusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteClusterToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    credentialId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairProcessRequest}
 */
proto.openstorage.api.ClusterPairProcessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairProcessRequest;
  return proto.openstorage.api.ClusterPairProcessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairProcessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairProcessRequest}
 */
proto.openstorage.api.ClusterPairProcessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceClusterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterToken(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairProcessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairProcessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairProcessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteClusterToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCredentialId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string source_cluster_id = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.getSourceClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairProcessRequest} returns this
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.setSourceClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remote_cluster_token = 2;
 * @return {string}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.getRemoteClusterToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairProcessRequest} returns this
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.setRemoteClusterToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ClusterPairMode.Mode mode = 3;
 * @return {!proto.openstorage.api.ClusterPairMode.Mode}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.getMode = function() {
  return /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.ClusterPairMode.Mode} value
 * @return {!proto.openstorage.api.ClusterPairProcessRequest} returns this
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string credential_id = 4;
 * @return {string}
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.getCredentialId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairProcessRequest} returns this
 */
proto.openstorage.api.ClusterPairProcessRequest.prototype.setCredentialId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ClusterPairProcessResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairProcessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairProcessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairProcessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteClusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteClusterName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    remoteClusterEndpointsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairProcessResponse}
 */
proto.openstorage.api.ClusterPairProcessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairProcessResponse;
  return proto.openstorage.api.ClusterPairProcessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairProcessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairProcessResponse}
 */
proto.openstorage.api.ClusterPairProcessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteClusterName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemoteClusterEndpoints(value);
      break;
    case 4:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairProcessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairProcessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairProcessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteClusterName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRemoteClusterEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string remote_cluster_id = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.getRemoteClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.setRemoteClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remote_cluster_name = 2;
 * @return {string}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.getRemoteClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.setRemoteClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string remote_cluster_endpoints = 3;
 * @return {!Array<string>}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.getRemoteClusterEndpointsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.setRemoteClusterEndpointsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.addRemoteClusterEndpoints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.clearRemoteClusterEndpointsList = function() {
  return this.setRemoteClusterEndpointsList([]);
};


/**
 * map<string, string> options = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.ClusterPairProcessResponse} returns this
 */
proto.openstorage.api.ClusterPairProcessResponse.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairDeleteRequest}
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairDeleteRequest;
  return proto.openstorage.api.SdkClusterPairDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairDeleteRequest}
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cluster_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterPairDeleteRequest} returns this
 */
proto.openstorage.api.SdkClusterPairDeleteRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairDeleteResponse}
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairDeleteResponse;
  return proto.openstorage.api.SdkClusterPairDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairDeleteResponse}
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairTokenGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairTokenGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairTokenGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairTokenGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairTokenGetResponse}
 */
proto.openstorage.api.ClusterPairTokenGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairTokenGetResponse;
  return proto.openstorage.api.ClusterPairTokenGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairTokenGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairTokenGetResponse}
 */
proto.openstorage.api.ClusterPairTokenGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairTokenGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairTokenGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairTokenGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairTokenGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairTokenGetResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairTokenGetResponse} returns this
 */
proto.openstorage.api.ClusterPairTokenGetResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairGetTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenRequest}
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairGetTokenRequest;
  return proto.openstorage.api.SdkClusterPairGetTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenRequest}
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairGetTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairGetTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairGetTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.ClusterPairTokenGetResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenResponse}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairGetTokenResponse;
  return proto.openstorage.api.SdkClusterPairGetTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenResponse}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairTokenGetResponse;
      reader.readMessage(value,proto.openstorage.api.ClusterPairTokenGetResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairGetTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairGetTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairTokenGetResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairTokenGetResponse result = 1;
 * @return {?proto.openstorage.api.ClusterPairTokenGetResponse}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.ClusterPairTokenGetResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairTokenGetResponse, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairTokenGetResponse|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenResponse} returns this
*/
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairGetTokenResponse} returns this
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairGetTokenResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairResetTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenRequest}
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairResetTokenRequest;
  return proto.openstorage.api.SdkClusterPairResetTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenRequest}
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairResetTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairResetTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairResetTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.ClusterPairTokenGetResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenResponse}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairResetTokenResponse;
  return proto.openstorage.api.SdkClusterPairResetTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenResponse}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairTokenGetResponse;
      reader.readMessage(value,proto.openstorage.api.ClusterPairTokenGetResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairResetTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairResetTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairTokenGetResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairTokenGetResponse result = 1;
 * @return {?proto.openstorage.api.ClusterPairTokenGetResponse}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.ClusterPairTokenGetResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairTokenGetResponse, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairTokenGetResponse|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenResponse} returns this
*/
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairResetTokenResponse} returns this
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairResetTokenResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ClusterPairInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currentEndpointsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    secure: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    token: jspb.Message.getFieldWithDefault(msg, 6, ""),
    optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : [],
    mode: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairInfo}
 */
proto.openstorage.api.ClusterPairInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairInfo;
  return proto.openstorage.api.ClusterPairInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairInfo}
 */
proto.openstorage.api.ClusterPairInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCurrentEndpoints(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSecure(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 7:
      var value = msg.getOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getSecure();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endpoint = 3;
 * @return {string}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string current_endpoints = 4;
 * @return {!Array<string>}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getCurrentEndpointsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setCurrentEndpointsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.addCurrentEndpoints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.clearCurrentEndpointsList = function() {
  return this.setCurrentEndpointsList([]);
};


/**
 * optional bool secure = 5;
 * @return {boolean}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getSecure = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setSecure = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string token = 6;
 * @return {string}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, string> options = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.clearOptionsMap = function() {
  this.getOptionsMap().clear();
  return this;};


/**
 * optional ClusterPairMode.Mode mode = 8;
 * @return {!proto.openstorage.api.ClusterPairMode.Mode}
 */
proto.openstorage.api.ClusterPairInfo.prototype.getMode = function() {
  return /** @type {!proto.openstorage.api.ClusterPairMode.Mode} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.openstorage.api.ClusterPairMode.Mode} value
 * @return {!proto.openstorage.api.ClusterPairInfo} returns this
 */
proto.openstorage.api.ClusterPairInfo.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairInspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairInspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairInspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairInspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairInspectRequest}
 */
proto.openstorage.api.SdkClusterPairInspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairInspectRequest;
  return proto.openstorage.api.SdkClusterPairInspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairInspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairInspectRequest}
 */
proto.openstorage.api.SdkClusterPairInspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairInspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairInspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairInspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairInspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkClusterPairInspectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkClusterPairInspectRequest} returns this
 */
proto.openstorage.api.SdkClusterPairInspectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pairInfo: (f = msg.getPairInfo()) && proto.openstorage.api.ClusterPairInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairGetResponse}
 */
proto.openstorage.api.ClusterPairGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairGetResponse;
  return proto.openstorage.api.ClusterPairGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairGetResponse}
 */
proto.openstorage.api.ClusterPairGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairInfo;
      reader.readMessage(value,proto.openstorage.api.ClusterPairInfo.deserializeBinaryFromReader);
      msg.setPairInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPairInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairInfo pair_info = 1;
 * @return {?proto.openstorage.api.ClusterPairInfo}
 */
proto.openstorage.api.ClusterPairGetResponse.prototype.getPairInfo = function() {
  return /** @type{?proto.openstorage.api.ClusterPairInfo} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairInfo, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairInfo|undefined} value
 * @return {!proto.openstorage.api.ClusterPairGetResponse} returns this
*/
proto.openstorage.api.ClusterPairGetResponse.prototype.setPairInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.ClusterPairGetResponse} returns this
 */
proto.openstorage.api.ClusterPairGetResponse.prototype.clearPairInfo = function() {
  return this.setPairInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.ClusterPairGetResponse.prototype.hasPairInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairInspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairInspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairInspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.ClusterPairGetResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairInspectResponse}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairInspectResponse;
  return proto.openstorage.api.SdkClusterPairInspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairInspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairInspectResponse}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairGetResponse;
      reader.readMessage(value,proto.openstorage.api.ClusterPairGetResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairInspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairInspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairInspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairGetResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairGetResponse result = 1;
 * @return {?proto.openstorage.api.ClusterPairGetResponse}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.ClusterPairGetResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairGetResponse, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairGetResponse|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairInspectResponse} returns this
*/
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairInspectResponse} returns this
 */
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairInspectResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairEnumerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateRequest}
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairEnumerateRequest;
  return proto.openstorage.api.SdkClusterPairEnumerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateRequest}
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairEnumerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairEnumerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ClusterPairsEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ClusterPairsEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pairsMap: (f = msg.getPairsMap()) ? f.toObject(includeInstance, proto.openstorage.api.ClusterPairInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ClusterPairsEnumerateResponse}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ClusterPairsEnumerateResponse;
  return proto.openstorage.api.ClusterPairsEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ClusterPairsEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ClusterPairsEnumerateResponse}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultId(value);
      break;
    case 2:
      var value = msg.getPairsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.openstorage.api.ClusterPairInfo.deserializeBinaryFromReader, "", new proto.openstorage.api.ClusterPairInfo());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ClusterPairsEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ClusterPairsEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPairsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.openstorage.api.ClusterPairInfo.serializeBinaryToWriter);
  }
};


/**
 * optional string default_id = 1;
 * @return {string}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.getDefaultId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ClusterPairsEnumerateResponse} returns this
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.setDefaultId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, ClusterPairInfo> pairs = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.openstorage.api.ClusterPairInfo>}
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.getPairsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.openstorage.api.ClusterPairInfo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.openstorage.api.ClusterPairInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.ClusterPairsEnumerateResponse} returns this
 */
proto.openstorage.api.ClusterPairsEnumerateResponse.prototype.clearPairsMap = function() {
  this.getPairsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkClusterPairEnumerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.openstorage.api.ClusterPairsEnumerateResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateResponse}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkClusterPairEnumerateResponse;
  return proto.openstorage.api.SdkClusterPairEnumerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateResponse}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ClusterPairsEnumerateResponse;
      reader.readMessage(value,proto.openstorage.api.ClusterPairsEnumerateResponse.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkClusterPairEnumerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkClusterPairEnumerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.ClusterPairsEnumerateResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClusterPairsEnumerateResponse result = 1;
 * @return {?proto.openstorage.api.ClusterPairsEnumerateResponse}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.getResult = function() {
  return /** @type{?proto.openstorage.api.ClusterPairsEnumerateResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ClusterPairsEnumerateResponse, 1));
};


/**
 * @param {?proto.openstorage.api.ClusterPairsEnumerateResponse|undefined} value
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateResponse} returns this
*/
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkClusterPairEnumerateResponse} returns this
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkClusterPairEnumerateResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.Catalog.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Catalog.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Catalog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Catalog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Catalog.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lastmodified: (f = msg.getLastmodified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.openstorage.api.Catalog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Catalog}
 */
proto.openstorage.api.Catalog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Catalog;
  return proto.openstorage.api.Catalog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Catalog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Catalog}
 */
proto.openstorage.api.Catalog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastmodified(value);
      break;
    case 6:
      var value = new proto.openstorage.api.Catalog;
      reader.readMessage(value,proto.openstorage.api.Catalog.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Catalog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Catalog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Catalog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Catalog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getLastmodified();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.openstorage.api.Catalog.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.openstorage.api.Catalog.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.openstorage.api.Catalog.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.openstorage.api.Catalog.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 size = 4;
 * @return {number}
 */
proto.openstorage.api.Catalog.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp LastModified = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.openstorage.api.Catalog.prototype.getLastmodified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.openstorage.api.Catalog} returns this
*/
proto.openstorage.api.Catalog.prototype.setLastmodified = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.clearLastmodified = function() {
  return this.setLastmodified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.Catalog.prototype.hasLastmodified = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Catalog children = 6;
 * @return {!Array<!proto.openstorage.api.Catalog>}
 */
proto.openstorage.api.Catalog.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.openstorage.api.Catalog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.Catalog, 6));
};


/**
 * @param {!Array<!proto.openstorage.api.Catalog>} value
 * @return {!proto.openstorage.api.Catalog} returns this
*/
proto.openstorage.api.Catalog.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.openstorage.api.Catalog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.Catalog}
 */
proto.openstorage.api.Catalog.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.openstorage.api.Catalog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.Catalog} returns this
 */
proto.openstorage.api.Catalog.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.Report.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.Report.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.Report} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Report.toObject = function(includeInstance, msg) {
  var f, obj = {
    directories: jspb.Message.getFieldWithDefault(msg, 2, 0),
    files: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.Report}
 */
proto.openstorage.api.Report.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.Report;
  return proto.openstorage.api.Report.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.Report} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.Report}
 */
proto.openstorage.api.Report.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDirectories(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.Report.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.Report.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.Report} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.Report.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectories();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFiles();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 directories = 2;
 * @return {number}
 */
proto.openstorage.api.Report.prototype.getDirectories = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Report} returns this
 */
proto.openstorage.api.Report.prototype.setDirectories = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 files = 3;
 * @return {number}
 */
proto.openstorage.api.Report.prototype.getFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.Report} returns this
 */
proto.openstorage.api.Report.prototype.setFiles = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.CatalogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.CatalogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.CatalogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CatalogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    root: (f = msg.getRoot()) && proto.openstorage.api.Catalog.toObject(includeInstance, f),
    report: (f = msg.getReport()) && proto.openstorage.api.Report.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.CatalogResponse}
 */
proto.openstorage.api.CatalogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.CatalogResponse;
  return proto.openstorage.api.CatalogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.CatalogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.CatalogResponse}
 */
proto.openstorage.api.CatalogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.Catalog;
      reader.readMessage(value,proto.openstorage.api.Catalog.deserializeBinaryFromReader);
      msg.setRoot(value);
      break;
    case 2:
      var value = new proto.openstorage.api.Report;
      reader.readMessage(value,proto.openstorage.api.Report.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.CatalogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.CatalogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.CatalogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.CatalogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.Catalog.serializeBinaryToWriter
    );
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.openstorage.api.Report.serializeBinaryToWriter
    );
  }
};


/**
 * optional Catalog root = 1;
 * @return {?proto.openstorage.api.Catalog}
 */
proto.openstorage.api.CatalogResponse.prototype.getRoot = function() {
  return /** @type{?proto.openstorage.api.Catalog} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Catalog, 1));
};


/**
 * @param {?proto.openstorage.api.Catalog|undefined} value
 * @return {!proto.openstorage.api.CatalogResponse} returns this
*/
proto.openstorage.api.CatalogResponse.prototype.setRoot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CatalogResponse} returns this
 */
proto.openstorage.api.CatalogResponse.prototype.clearRoot = function() {
  return this.setRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CatalogResponse.prototype.hasRoot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Report report = 2;
 * @return {?proto.openstorage.api.Report}
 */
proto.openstorage.api.CatalogResponse.prototype.getReport = function() {
  return /** @type{?proto.openstorage.api.Report} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Report, 2));
};


/**
 * @param {?proto.openstorage.api.Report|undefined} value
 * @return {!proto.openstorage.api.CatalogResponse} returns this
*/
proto.openstorage.api.CatalogResponse.prototype.setReport = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.CatalogResponse} returns this
 */
proto.openstorage.api.CatalogResponse.prototype.clearReport = function() {
  return this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.CatalogResponse.prototype.hasReport = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.LocateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.LocateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.LocateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.LocateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mountsMap: (f = msg.getMountsMap()) ? f.toObject(includeInstance, undefined) : [],
    dockeridsMap: (f = msg.getDockeridsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.LocateResponse}
 */
proto.openstorage.api.LocateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.LocateResponse;
  return proto.openstorage.api.LocateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.LocateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.LocateResponse}
 */
proto.openstorage.api.LocateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMountsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = msg.getDockeridsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.LocateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.LocateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.LocateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.LocateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMountsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDockeridsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> mounts = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.LocateResponse.prototype.getMountsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.LocateResponse} returns this
 */
proto.openstorage.api.LocateResponse.prototype.clearMountsMap = function() {
  this.getMountsMap().clear();
  return this;};


/**
 * map<string, string> dockerids = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.openstorage.api.LocateResponse.prototype.getDockeridsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.openstorage.api.LocateResponse} returns this
 */
proto.openstorage.api.LocateResponse.prototype.clearDockeridsMap = function() {
  this.getDockeridsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumePlacementStrategy.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumePlacementStrategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumePlacementStrategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumePlacementStrategy.toObject = function(includeInstance, msg) {
  var f, obj = {
    replicaAffinityList: jspb.Message.toObjectList(msg.getReplicaAffinityList(),
    proto.openstorage.api.ReplicaPlacementSpec.toObject, includeInstance),
    replicaAntiAffinityList: jspb.Message.toObjectList(msg.getReplicaAntiAffinityList(),
    proto.openstorage.api.ReplicaPlacementSpec.toObject, includeInstance),
    volumeAffinityList: jspb.Message.toObjectList(msg.getVolumeAffinityList(),
    proto.openstorage.api.VolumePlacementSpec.toObject, includeInstance),
    volumeAntiAffinityList: jspb.Message.toObjectList(msg.getVolumeAntiAffinityList(),
    proto.openstorage.api.VolumePlacementSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumePlacementStrategy}
 */
proto.openstorage.api.VolumePlacementStrategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumePlacementStrategy;
  return proto.openstorage.api.VolumePlacementStrategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumePlacementStrategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumePlacementStrategy}
 */
proto.openstorage.api.VolumePlacementStrategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.ReplicaPlacementSpec;
      reader.readMessage(value,proto.openstorage.api.ReplicaPlacementSpec.deserializeBinaryFromReader);
      msg.addReplicaAffinity(value);
      break;
    case 2:
      var value = new proto.openstorage.api.ReplicaPlacementSpec;
      reader.readMessage(value,proto.openstorage.api.ReplicaPlacementSpec.deserializeBinaryFromReader);
      msg.addReplicaAntiAffinity(value);
      break;
    case 3:
      var value = new proto.openstorage.api.VolumePlacementSpec;
      reader.readMessage(value,proto.openstorage.api.VolumePlacementSpec.deserializeBinaryFromReader);
      msg.addVolumeAffinity(value);
      break;
    case 4:
      var value = new proto.openstorage.api.VolumePlacementSpec;
      reader.readMessage(value,proto.openstorage.api.VolumePlacementSpec.deserializeBinaryFromReader);
      msg.addVolumeAntiAffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumePlacementStrategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumePlacementStrategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumePlacementStrategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplicaAffinityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openstorage.api.ReplicaPlacementSpec.serializeBinaryToWriter
    );
  }
  f = message.getReplicaAntiAffinityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openstorage.api.ReplicaPlacementSpec.serializeBinaryToWriter
    );
  }
  f = message.getVolumeAffinityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openstorage.api.VolumePlacementSpec.serializeBinaryToWriter
    );
  }
  f = message.getVolumeAntiAffinityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.openstorage.api.VolumePlacementSpec.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReplicaPlacementSpec replica_affinity = 1;
 * @return {!Array<!proto.openstorage.api.ReplicaPlacementSpec>}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.getReplicaAffinityList = function() {
  return /** @type{!Array<!proto.openstorage.api.ReplicaPlacementSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.ReplicaPlacementSpec, 1));
};


/**
 * @param {!Array<!proto.openstorage.api.ReplicaPlacementSpec>} value
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
*/
proto.openstorage.api.VolumePlacementStrategy.prototype.setReplicaAffinityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openstorage.api.ReplicaPlacementSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ReplicaPlacementSpec}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.addReplicaAffinity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openstorage.api.ReplicaPlacementSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.clearReplicaAffinityList = function() {
  return this.setReplicaAffinityList([]);
};


/**
 * repeated ReplicaPlacementSpec replica_anti_affinity = 2;
 * @return {!Array<!proto.openstorage.api.ReplicaPlacementSpec>}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.getReplicaAntiAffinityList = function() {
  return /** @type{!Array<!proto.openstorage.api.ReplicaPlacementSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.ReplicaPlacementSpec, 2));
};


/**
 * @param {!Array<!proto.openstorage.api.ReplicaPlacementSpec>} value
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
*/
proto.openstorage.api.VolumePlacementStrategy.prototype.setReplicaAntiAffinityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openstorage.api.ReplicaPlacementSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.ReplicaPlacementSpec}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.addReplicaAntiAffinity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openstorage.api.ReplicaPlacementSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.clearReplicaAntiAffinityList = function() {
  return this.setReplicaAntiAffinityList([]);
};


/**
 * repeated VolumePlacementSpec volume_affinity = 3;
 * @return {!Array<!proto.openstorage.api.VolumePlacementSpec>}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.getVolumeAffinityList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumePlacementSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumePlacementSpec, 3));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumePlacementSpec>} value
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
*/
proto.openstorage.api.VolumePlacementStrategy.prototype.setVolumeAffinityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openstorage.api.VolumePlacementSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumePlacementSpec}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.addVolumeAffinity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openstorage.api.VolumePlacementSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.clearVolumeAffinityList = function() {
  return this.setVolumeAffinityList([]);
};


/**
 * repeated VolumePlacementSpec volume_anti_affinity = 4;
 * @return {!Array<!proto.openstorage.api.VolumePlacementSpec>}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.getVolumeAntiAffinityList = function() {
  return /** @type{!Array<!proto.openstorage.api.VolumePlacementSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.VolumePlacementSpec, 4));
};


/**
 * @param {!Array<!proto.openstorage.api.VolumePlacementSpec>} value
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
*/
proto.openstorage.api.VolumePlacementStrategy.prototype.setVolumeAntiAffinityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.openstorage.api.VolumePlacementSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.VolumePlacementSpec}
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.addVolumeAntiAffinity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.openstorage.api.VolumePlacementSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumePlacementStrategy} returns this
 */
proto.openstorage.api.VolumePlacementStrategy.prototype.clearVolumeAntiAffinityList = function() {
  return this.setVolumeAntiAffinityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.ReplicaPlacementSpec.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.ReplicaPlacementSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.ReplicaPlacementSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ReplicaPlacementSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    weight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    enforcement: jspb.Message.getFieldWithDefault(msg, 2, 0),
    affectedReplicas: jspb.Message.getFieldWithDefault(msg, 3, 0),
    topologyKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    matchExpressionsList: jspb.Message.toObjectList(msg.getMatchExpressionsList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.ReplicaPlacementSpec}
 */
proto.openstorage.api.ReplicaPlacementSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.ReplicaPlacementSpec;
  return proto.openstorage.api.ReplicaPlacementSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.ReplicaPlacementSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.ReplicaPlacementSpec}
 */
proto.openstorage.api.ReplicaPlacementSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWeight(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.EnforcementType} */ (reader.readEnum());
      msg.setEnforcement(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAffectedReplicas(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopologyKey(value);
      break;
    case 5:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchExpressions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.ReplicaPlacementSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.ReplicaPlacementSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.ReplicaPlacementSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnforcement();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAffectedReplicas();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTopologyKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMatchExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 weight = 1;
 * @return {number}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EnforcementType enforcement = 2;
 * @return {!proto.openstorage.api.EnforcementType}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.getEnforcement = function() {
  return /** @type {!proto.openstorage.api.EnforcementType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.EnforcementType} value
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.setEnforcement = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 affected_replicas = 3;
 * @return {number}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.getAffectedReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.setAffectedReplicas = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string topology_key = 4;
 * @return {string}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.getTopologyKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.setTopologyKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated LabelSelectorRequirement match_expressions = 5;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.getMatchExpressionsList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 5));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
*/
proto.openstorage.api.ReplicaPlacementSpec.prototype.setMatchExpressionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.addMatchExpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.ReplicaPlacementSpec} returns this
 */
proto.openstorage.api.ReplicaPlacementSpec.prototype.clearMatchExpressionsList = function() {
  return this.setMatchExpressionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.VolumePlacementSpec.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.VolumePlacementSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.VolumePlacementSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumePlacementSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    weight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    enforcement: jspb.Message.getFieldWithDefault(msg, 2, 0),
    topologyKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    matchExpressionsList: jspb.Message.toObjectList(msg.getMatchExpressionsList(),
    proto.openstorage.api.LabelSelectorRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.VolumePlacementSpec}
 */
proto.openstorage.api.VolumePlacementSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.VolumePlacementSpec;
  return proto.openstorage.api.VolumePlacementSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.VolumePlacementSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.VolumePlacementSpec}
 */
proto.openstorage.api.VolumePlacementSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWeight(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.EnforcementType} */ (reader.readEnum());
      msg.setEnforcement(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopologyKey(value);
      break;
    case 4:
      var value = new proto.openstorage.api.LabelSelectorRequirement;
      reader.readMessage(value,proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchExpressions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.VolumePlacementSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.VolumePlacementSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.VolumePlacementSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnforcement();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTopologyKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMatchExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 weight = 1;
 * @return {number}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.VolumePlacementSpec} returns this
 */
proto.openstorage.api.VolumePlacementSpec.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EnforcementType enforcement = 2;
 * @return {!proto.openstorage.api.EnforcementType}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.getEnforcement = function() {
  return /** @type {!proto.openstorage.api.EnforcementType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.EnforcementType} value
 * @return {!proto.openstorage.api.VolumePlacementSpec} returns this
 */
proto.openstorage.api.VolumePlacementSpec.prototype.setEnforcement = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string topology_key = 3;
 * @return {string}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.getTopologyKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.VolumePlacementSpec} returns this
 */
proto.openstorage.api.VolumePlacementSpec.prototype.setTopologyKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated LabelSelectorRequirement match_expressions = 4;
 * @return {!Array<!proto.openstorage.api.LabelSelectorRequirement>}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.getMatchExpressionsList = function() {
  return /** @type{!Array<!proto.openstorage.api.LabelSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openstorage.api.LabelSelectorRequirement, 4));
};


/**
 * @param {!Array<!proto.openstorage.api.LabelSelectorRequirement>} value
 * @return {!proto.openstorage.api.VolumePlacementSpec} returns this
*/
proto.openstorage.api.VolumePlacementSpec.prototype.setMatchExpressionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.VolumePlacementSpec.prototype.addMatchExpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.openstorage.api.LabelSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.VolumePlacementSpec} returns this
 */
proto.openstorage.api.VolumePlacementSpec.prototype.clearMatchExpressionsList = function() {
  return this.setMatchExpressionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openstorage.api.LabelSelectorRequirement.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.LabelSelectorRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.LabelSelectorRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.LabelSelectorRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, 0),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.LabelSelectorRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.LabelSelectorRequirement;
  return proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.LabelSelectorRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.LabelSelectorRequirement}
 */
proto.openstorage.api.LabelSelectorRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.LabelSelectorRequirement.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.LabelSelectorRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.LabelSelectorRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.openstorage.api.LabelSelectorRequirement.Operator = {
  IN: 0,
  NOTIN: 1,
  EXISTS: 2,
  DOESNOTEXIST: 3,
  GT: 4,
  LT: 5
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.LabelSelectorRequirement} returns this
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Operator operator = 2;
 * @return {!proto.openstorage.api.LabelSelectorRequirement.Operator}
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.getOperator = function() {
  return /** @type {!proto.openstorage.api.LabelSelectorRequirement.Operator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.LabelSelectorRequirement.Operator} value
 * @return {!proto.openstorage.api.LabelSelectorRequirement} returns this
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openstorage.api.LabelSelectorRequirement} returns this
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openstorage.api.LabelSelectorRequirement} returns this
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openstorage.api.LabelSelectorRequirement} returns this
 */
proto.openstorage.api.LabelSelectorRequirement.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.RestoreVolSnashotSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.RestoreVolSnashotSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.RestoreVolSnashotSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolSnashotSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedule: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.RestoreVolSnashotSchedule}
 */
proto.openstorage.api.RestoreVolSnashotSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.RestoreVolSnashotSchedule;
  return proto.openstorage.api.RestoreVolSnashotSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.RestoreVolSnashotSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.RestoreVolSnashotSchedule}
 */
proto.openstorage.api.RestoreVolSnashotSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.RestoreVolSnashotSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.RestoreVolSnashotSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.RestoreVolSnashotSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolSnashotSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedule();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schedule = 1;
 * @return {string}
 */
proto.openstorage.api.RestoreVolSnashotSchedule.prototype.getSchedule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.RestoreVolSnashotSchedule} returns this
 */
proto.openstorage.api.RestoreVolSnashotSchedule.prototype.setSchedule = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.RestoreVolStoragePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.RestoreVolStoragePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.RestoreVolStoragePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolStoragePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    policy: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.RestoreVolStoragePolicy}
 */
proto.openstorage.api.RestoreVolStoragePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.RestoreVolStoragePolicy;
  return proto.openstorage.api.RestoreVolStoragePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.RestoreVolStoragePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.RestoreVolStoragePolicy}
 */
proto.openstorage.api.RestoreVolStoragePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.RestoreVolStoragePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.RestoreVolStoragePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.RestoreVolStoragePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolStoragePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicy();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string policy = 1;
 * @return {string}
 */
proto.openstorage.api.RestoreVolStoragePolicy.prototype.getPolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.RestoreVolStoragePolicy} returns this
 */
proto.openstorage.api.RestoreVolStoragePolicy.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.RestoreVolumeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.RestoreVolumeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolumeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    haLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cos: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ioProfile: jspb.Message.getFieldWithDefault(msg, 3, 0),
    snapshotInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    shared: jspb.Message.getFieldWithDefault(msg, 5, 0),
    replicaSet: (f = msg.getReplicaSet()) && proto.openstorage.api.ReplicaSet.toObject(includeInstance, f),
    aggregationLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    snapshotSchedule: (f = msg.getSnapshotSchedule()) && proto.openstorage.api.RestoreVolSnashotSchedule.toObject(includeInstance, f),
    sticky: jspb.Message.getFieldWithDefault(msg, 9, 0),
    group: (f = msg.getGroup()) && proto.openstorage.api.Group.toObject(includeInstance, f),
    groupEnforced: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    journal: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sharedv4: jspb.Message.getFieldWithDefault(msg, 13, 0),
    queueDepth: jspb.Message.getFieldWithDefault(msg, 14, 0),
    nodiscard: jspb.Message.getFieldWithDefault(msg, 15, 0),
    ioStrategy: (f = msg.getIoStrategy()) && proto.openstorage.api.IoStrategy.toObject(includeInstance, f),
    placementStrategy: (f = msg.getPlacementStrategy()) && proto.openstorage.api.VolumePlacementStrategy.toObject(includeInstance, f),
    storagePolicy: (f = msg.getStoragePolicy()) && proto.openstorage.api.RestoreVolStoragePolicy.toObject(includeInstance, f),
    ownership: (f = msg.getOwnership()) && proto.openstorage.api.Ownership.toObject(includeInstance, f),
    exportSpec: (f = msg.getExportSpec()) && proto.openstorage.api.ExportSpec.toObject(includeInstance, f),
    fpPreference: jspb.Message.getFieldWithDefault(msg, 21, 0),
    mountOptions: (f = msg.getMountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    sharedv4MountOptions: (f = msg.getSharedv4MountOptions()) && proto.openstorage.api.MountOptions.toObject(includeInstance, f),
    proxyWrite: jspb.Message.getFieldWithDefault(msg, 24, 0),
    ioProfileBkupSrc: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    proxySpec: (f = msg.getProxySpec()) && proto.openstorage.api.ProxySpec.toObject(includeInstance, f),
    sharedv4ServiceSpec: (f = msg.getSharedv4ServiceSpec()) && proto.openstorage.api.Sharedv4ServiceSpec.toObject(includeInstance, f),
    sharedv4Spec: (f = msg.getSharedv4Spec()) && proto.openstorage.api.Sharedv4Spec.toObject(includeInstance, f),
    autoFstrim: jspb.Message.getFieldWithDefault(msg, 29, 0),
    ioThrottle: (f = msg.getIoThrottle()) && proto.openstorage.api.IoThrottle.toObject(includeInstance, f),
    readahead: jspb.Message.getFieldWithDefault(msg, 31, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.RestoreVolumeSpec}
 */
proto.openstorage.api.RestoreVolumeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.RestoreVolumeSpec;
  return proto.openstorage.api.RestoreVolumeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.RestoreVolumeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.RestoreVolumeSpec}
 */
proto.openstorage.api.RestoreVolumeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHaLevel(value);
      break;
    case 2:
      var value = /** @type {!proto.openstorage.api.CosType} */ (reader.readEnum());
      msg.setCos(value);
      break;
    case 3:
      var value = /** @type {!proto.openstorage.api.IoProfile} */ (reader.readEnum());
      msg.setIoProfile(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSnapshotInterval(value);
      break;
    case 5:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setShared(value);
      break;
    case 6:
      var value = new proto.openstorage.api.ReplicaSet;
      reader.readMessage(value,proto.openstorage.api.ReplicaSet.deserializeBinaryFromReader);
      msg.setReplicaSet(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAggregationLevel(value);
      break;
    case 8:
      var value = new proto.openstorage.api.RestoreVolSnashotSchedule;
      reader.readMessage(value,proto.openstorage.api.RestoreVolSnashotSchedule.deserializeBinaryFromReader);
      msg.setSnapshotSchedule(value);
      break;
    case 9:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setSticky(value);
      break;
    case 10:
      var value = new proto.openstorage.api.Group;
      reader.readMessage(value,proto.openstorage.api.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGroupEnforced(value);
      break;
    case 12:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setJournal(value);
      break;
    case 13:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setSharedv4(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQueueDepth(value);
      break;
    case 15:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setNodiscard(value);
      break;
    case 16:
      var value = new proto.openstorage.api.IoStrategy;
      reader.readMessage(value,proto.openstorage.api.IoStrategy.deserializeBinaryFromReader);
      msg.setIoStrategy(value);
      break;
    case 17:
      var value = new proto.openstorage.api.VolumePlacementStrategy;
      reader.readMessage(value,proto.openstorage.api.VolumePlacementStrategy.deserializeBinaryFromReader);
      msg.setPlacementStrategy(value);
      break;
    case 18:
      var value = new proto.openstorage.api.RestoreVolStoragePolicy;
      reader.readMessage(value,proto.openstorage.api.RestoreVolStoragePolicy.deserializeBinaryFromReader);
      msg.setStoragePolicy(value);
      break;
    case 19:
      var value = new proto.openstorage.api.Ownership;
      reader.readMessage(value,proto.openstorage.api.Ownership.deserializeBinaryFromReader);
      msg.setOwnership(value);
      break;
    case 20:
      var value = new proto.openstorage.api.ExportSpec;
      reader.readMessage(value,proto.openstorage.api.ExportSpec.deserializeBinaryFromReader);
      msg.setExportSpec(value);
      break;
    case 21:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setFpPreference(value);
      break;
    case 22:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setMountOptions(value);
      break;
    case 23:
      var value = new proto.openstorage.api.MountOptions;
      reader.readMessage(value,proto.openstorage.api.MountOptions.deserializeBinaryFromReader);
      msg.setSharedv4MountOptions(value);
      break;
    case 24:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setProxyWrite(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIoProfileBkupSrc(value);
      break;
    case 26:
      var value = new proto.openstorage.api.ProxySpec;
      reader.readMessage(value,proto.openstorage.api.ProxySpec.deserializeBinaryFromReader);
      msg.setProxySpec(value);
      break;
    case 27:
      var value = new proto.openstorage.api.Sharedv4ServiceSpec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4ServiceSpec.deserializeBinaryFromReader);
      msg.setSharedv4ServiceSpec(value);
      break;
    case 28:
      var value = new proto.openstorage.api.Sharedv4Spec;
      reader.readMessage(value,proto.openstorage.api.Sharedv4Spec.deserializeBinaryFromReader);
      msg.setSharedv4Spec(value);
      break;
    case 29:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setAutoFstrim(value);
      break;
    case 30:
      var value = new proto.openstorage.api.IoThrottle;
      reader.readMessage(value,proto.openstorage.api.IoThrottle.deserializeBinaryFromReader);
      msg.setIoThrottle(value);
      break;
    case 31:
      var value = /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (reader.readEnum());
      msg.setReadahead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.RestoreVolumeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.RestoreVolumeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.RestoreVolumeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHaLevel();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCos();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIoProfile();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSnapshotInterval();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getShared();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getReplicaSet();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.openstorage.api.ReplicaSet.serializeBinaryToWriter
    );
  }
  f = message.getAggregationLevel();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSnapshotSchedule();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.openstorage.api.RestoreVolSnashotSchedule.serializeBinaryToWriter
    );
  }
  f = message.getSticky();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.openstorage.api.Group.serializeBinaryToWriter
    );
  }
  f = message.getGroupEnforced();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getJournal();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getSharedv4();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getQueueDepth();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getNodiscard();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getIoStrategy();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.openstorage.api.IoStrategy.serializeBinaryToWriter
    );
  }
  f = message.getPlacementStrategy();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.openstorage.api.VolumePlacementStrategy.serializeBinaryToWriter
    );
  }
  f = message.getStoragePolicy();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.openstorage.api.RestoreVolStoragePolicy.serializeBinaryToWriter
    );
  }
  f = message.getOwnership();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.openstorage.api.Ownership.serializeBinaryToWriter
    );
  }
  f = message.getExportSpec();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.openstorage.api.ExportSpec.serializeBinaryToWriter
    );
  }
  f = message.getFpPreference();
  if (f !== 0.0) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = message.getMountOptions();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4MountOptions();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.openstorage.api.MountOptions.serializeBinaryToWriter
    );
  }
  f = message.getProxyWrite();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getIoProfileBkupSrc();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getProxySpec();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.openstorage.api.ProxySpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4ServiceSpec();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.openstorage.api.Sharedv4ServiceSpec.serializeBinaryToWriter
    );
  }
  f = message.getSharedv4Spec();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.openstorage.api.Sharedv4Spec.serializeBinaryToWriter
    );
  }
  f = message.getAutoFstrim();
  if (f !== 0.0) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = message.getIoThrottle();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.openstorage.api.IoThrottle.serializeBinaryToWriter
    );
  }
  f = message.getReadahead();
  if (f !== 0.0) {
    writer.writeEnum(
      31,
      f
    );
  }
};


/**
 * optional int64 ha_level = 1;
 * @return {number}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getHaLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setHaLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CosType cos = 2;
 * @return {!proto.openstorage.api.CosType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getCos = function() {
  return /** @type {!proto.openstorage.api.CosType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.openstorage.api.CosType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setCos = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional IoProfile io_profile = 3;
 * @return {!proto.openstorage.api.IoProfile}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getIoProfile = function() {
  return /** @type {!proto.openstorage.api.IoProfile} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.openstorage.api.IoProfile} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setIoProfile = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint32 snapshot_interval = 4;
 * @return {number}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSnapshotInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setSnapshotInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional RestoreParamBoolType shared = 5;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getShared = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setShared = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ReplicaSet replica_set = 6;
 * @return {?proto.openstorage.api.ReplicaSet}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getReplicaSet = function() {
  return /** @type{?proto.openstorage.api.ReplicaSet} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ReplicaSet, 6));
};


/**
 * @param {?proto.openstorage.api.ReplicaSet|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setReplicaSet = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearReplicaSet = function() {
  return this.setReplicaSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasReplicaSet = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 aggregation_level = 7;
 * @return {number}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getAggregationLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setAggregationLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional RestoreVolSnashotSchedule snapshot_schedule = 8;
 * @return {?proto.openstorage.api.RestoreVolSnashotSchedule}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSnapshotSchedule = function() {
  return /** @type{?proto.openstorage.api.RestoreVolSnashotSchedule} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.RestoreVolSnashotSchedule, 8));
};


/**
 * @param {?proto.openstorage.api.RestoreVolSnashotSchedule|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setSnapshotSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearSnapshotSchedule = function() {
  return this.setSnapshotSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasSnapshotSchedule = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RestoreParamBoolType sticky = 9;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSticky = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setSticky = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Group group = 10;
 * @return {?proto.openstorage.api.Group}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getGroup = function() {
  return /** @type{?proto.openstorage.api.Group} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Group, 10));
};


/**
 * @param {?proto.openstorage.api.Group|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool group_enforced = 11;
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getGroupEnforced = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setGroupEnforced = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional RestoreParamBoolType journal = 12;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getJournal = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setJournal = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional RestoreParamBoolType sharedv4 = 13;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSharedv4 = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setSharedv4 = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional uint32 queue_depth = 14;
 * @return {number}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getQueueDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setQueueDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional RestoreParamBoolType nodiscard = 15;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getNodiscard = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setNodiscard = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional IoStrategy io_strategy = 16;
 * @return {?proto.openstorage.api.IoStrategy}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getIoStrategy = function() {
  return /** @type{?proto.openstorage.api.IoStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoStrategy, 16));
};


/**
 * @param {?proto.openstorage.api.IoStrategy|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setIoStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearIoStrategy = function() {
  return this.setIoStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasIoStrategy = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional VolumePlacementStrategy placement_strategy = 17;
 * @return {?proto.openstorage.api.VolumePlacementStrategy}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getPlacementStrategy = function() {
  return /** @type{?proto.openstorage.api.VolumePlacementStrategy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.VolumePlacementStrategy, 17));
};


/**
 * @param {?proto.openstorage.api.VolumePlacementStrategy|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setPlacementStrategy = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearPlacementStrategy = function() {
  return this.setPlacementStrategy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasPlacementStrategy = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional RestoreVolStoragePolicy storage_policy = 18;
 * @return {?proto.openstorage.api.RestoreVolStoragePolicy}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getStoragePolicy = function() {
  return /** @type{?proto.openstorage.api.RestoreVolStoragePolicy} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.RestoreVolStoragePolicy, 18));
};


/**
 * @param {?proto.openstorage.api.RestoreVolStoragePolicy|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setStoragePolicy = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearStoragePolicy = function() {
  return this.setStoragePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasStoragePolicy = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Ownership ownership = 19;
 * @return {?proto.openstorage.api.Ownership}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getOwnership = function() {
  return /** @type{?proto.openstorage.api.Ownership} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Ownership, 19));
};


/**
 * @param {?proto.openstorage.api.Ownership|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setOwnership = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearOwnership = function() {
  return this.setOwnership(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasOwnership = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ExportSpec export_spec = 20;
 * @return {?proto.openstorage.api.ExportSpec}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getExportSpec = function() {
  return /** @type{?proto.openstorage.api.ExportSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ExportSpec, 20));
};


/**
 * @param {?proto.openstorage.api.ExportSpec|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setExportSpec = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearExportSpec = function() {
  return this.setExportSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasExportSpec = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional RestoreParamBoolType fp_preference = 21;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getFpPreference = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setFpPreference = function(value) {
  return jspb.Message.setProto3EnumField(this, 21, value);
};


/**
 * optional MountOptions mount_options = 22;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getMountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 22));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setMountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearMountOptions = function() {
  return this.setMountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasMountOptions = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional MountOptions sharedv4_mount_options = 23;
 * @return {?proto.openstorage.api.MountOptions}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSharedv4MountOptions = function() {
  return /** @type{?proto.openstorage.api.MountOptions} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.MountOptions, 23));
};


/**
 * @param {?proto.openstorage.api.MountOptions|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setSharedv4MountOptions = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearSharedv4MountOptions = function() {
  return this.setSharedv4MountOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasSharedv4MountOptions = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional RestoreParamBoolType proxy_write = 24;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getProxyWrite = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setProxyWrite = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional bool io_profile_bkup_src = 25;
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getIoProfileBkupSrc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setIoProfileBkupSrc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional ProxySpec proxy_spec = 26;
 * @return {?proto.openstorage.api.ProxySpec}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getProxySpec = function() {
  return /** @type{?proto.openstorage.api.ProxySpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.ProxySpec, 26));
};


/**
 * @param {?proto.openstorage.api.ProxySpec|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setProxySpec = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearProxySpec = function() {
  return this.setProxySpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasProxySpec = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Sharedv4ServiceSpec sharedv4_service_spec = 27;
 * @return {?proto.openstorage.api.Sharedv4ServiceSpec}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSharedv4ServiceSpec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4ServiceSpec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4ServiceSpec, 27));
};


/**
 * @param {?proto.openstorage.api.Sharedv4ServiceSpec|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setSharedv4ServiceSpec = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearSharedv4ServiceSpec = function() {
  return this.setSharedv4ServiceSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasSharedv4ServiceSpec = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Sharedv4Spec sharedv4_spec = 28;
 * @return {?proto.openstorage.api.Sharedv4Spec}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getSharedv4Spec = function() {
  return /** @type{?proto.openstorage.api.Sharedv4Spec} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.Sharedv4Spec, 28));
};


/**
 * @param {?proto.openstorage.api.Sharedv4Spec|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setSharedv4Spec = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearSharedv4Spec = function() {
  return this.setSharedv4Spec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasSharedv4Spec = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional RestoreParamBoolType auto_fstrim = 29;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getAutoFstrim = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setAutoFstrim = function(value) {
  return jspb.Message.setProto3EnumField(this, 29, value);
};


/**
 * optional IoThrottle io_throttle = 30;
 * @return {?proto.openstorage.api.IoThrottle}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getIoThrottle = function() {
  return /** @type{?proto.openstorage.api.IoThrottle} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.IoThrottle, 30));
};


/**
 * @param {?proto.openstorage.api.IoThrottle|undefined} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
*/
proto.openstorage.api.RestoreVolumeSpec.prototype.setIoThrottle = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.clearIoThrottle = function() {
  return this.setIoThrottle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.hasIoThrottle = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional RestoreParamBoolType readahead = 31;
 * @return {!proto.openstorage.api.RestoreParamBoolType}
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.getReadahead = function() {
  return /** @type {!proto.openstorage.api.RestoreParamBoolType} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {!proto.openstorage.api.RestoreParamBoolType} value
 * @return {!proto.openstorage.api.RestoreVolumeSpec} returns this
 */
proto.openstorage.api.RestoreVolumeSpec.prototype.setReadahead = function(value) {
  return jspb.Message.setProto3EnumField(this, 31, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCatalogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCatalogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCatalogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    depth: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCatalogRequest}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCatalogRequest;
  return proto.openstorage.api.SdkVolumeCatalogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCatalogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCatalogRequest}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCatalogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCatalogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCatalogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDepth();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string volume_id = 1;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.getVolumeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCatalogRequest} returns this
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCatalogRequest} returns this
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string depth = 3;
 * @return {string}
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.getDepth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openstorage.api.SdkVolumeCatalogRequest} returns this
 */
proto.openstorage.api.SdkVolumeCatalogRequest.prototype.setDepth = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openstorage.api.SdkVolumeCatalogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openstorage.api.SdkVolumeCatalogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCatalogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    catalog: (f = msg.getCatalog()) && proto.openstorage.api.CatalogResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openstorage.api.SdkVolumeCatalogResponse}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openstorage.api.SdkVolumeCatalogResponse;
  return proto.openstorage.api.SdkVolumeCatalogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openstorage.api.SdkVolumeCatalogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openstorage.api.SdkVolumeCatalogResponse}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openstorage.api.CatalogResponse;
      reader.readMessage(value,proto.openstorage.api.CatalogResponse.deserializeBinaryFromReader);
      msg.setCatalog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openstorage.api.SdkVolumeCatalogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openstorage.api.SdkVolumeCatalogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openstorage.api.SdkVolumeCatalogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCatalog();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openstorage.api.CatalogResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CatalogResponse catalog = 1;
 * @return {?proto.openstorage.api.CatalogResponse}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.getCatalog = function() {
  return /** @type{?proto.openstorage.api.CatalogResponse} */ (
    jspb.Message.getWrapperField(this, proto.openstorage.api.CatalogResponse, 1));
};


/**
 * @param {?proto.openstorage.api.CatalogResponse|undefined} value
 * @return {!proto.openstorage.api.SdkVolumeCatalogResponse} returns this
*/
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.setCatalog = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openstorage.api.SdkVolumeCatalogResponse} returns this
 */
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.clearCatalog = function() {
  return this.setCatalog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openstorage.api.SdkVolumeCatalogResponse.prototype.hasCatalog = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.openstorage.api.Status = {
  STATUS_NONE: 0,
  STATUS_INIT: 1,
  STATUS_OK: 2,
  STATUS_OFFLINE: 3,
  STATUS_ERROR: 4,
  STATUS_NOT_IN_QUORUM: 5,
  STATUS_DECOMMISSION: 6,
  STATUS_MAINTENANCE: 7,
  STATUS_STORAGE_DOWN: 8,
  STATUS_STORAGE_DEGRADED: 9,
  STATUS_NEEDS_REBOOT: 10,
  STATUS_STORAGE_REBALANCE: 11,
  STATUS_STORAGE_DRIVE_REPLACE: 12,
  STATUS_NOT_IN_QUORUM_NO_STORAGE: 13,
  STATUS_POOLMAINTENANCE: 14,
  STATUS_MAX: 15
};

/**
 * @enum {number}
 */
proto.openstorage.api.DriverType = {
  DRIVER_TYPE_NONE: 0,
  DRIVER_TYPE_FILE: 1,
  DRIVER_TYPE_BLOCK: 2,
  DRIVER_TYPE_OBJECT: 3,
  DRIVER_TYPE_CLUSTERED: 4,
  DRIVER_TYPE_GRAPH: 5
};

/**
 * @enum {number}
 */
proto.openstorage.api.FSType = {
  FS_TYPE_NONE: 0,
  FS_TYPE_BTRFS: 1,
  FS_TYPE_EXT4: 2,
  FS_TYPE_FUSE: 3,
  FS_TYPE_NFS: 4,
  FS_TYPE_VFS: 5,
  FS_TYPE_XFS: 6,
  FS_TYPE_ZFS: 7,
  FS_TYPE_XFSV2: 8
};

/**
 * @enum {number}
 */
proto.openstorage.api.GraphDriverChangeType = {
  GRAPH_DRIVER_CHANGE_TYPE_NONE: 0,
  GRAPH_DRIVER_CHANGE_TYPE_MODIFIED: 1,
  GRAPH_DRIVER_CHANGE_TYPE_ADDED: 2,
  GRAPH_DRIVER_CHANGE_TYPE_DELETED: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.SeverityType = {
  SEVERITY_TYPE_NONE: 0,
  SEVERITY_TYPE_ALARM: 1,
  SEVERITY_TYPE_WARNING: 2,
  SEVERITY_TYPE_NOTIFY: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.ResourceType = {
  RESOURCE_TYPE_NONE: 0,
  RESOURCE_TYPE_VOLUME: 1,
  RESOURCE_TYPE_NODE: 2,
  RESOURCE_TYPE_CLUSTER: 3,
  RESOURCE_TYPE_DRIVE: 4,
  RESOURCE_TYPE_POOL: 5
};

/**
 * @enum {number}
 */
proto.openstorage.api.AlertActionType = {
  ALERT_ACTION_TYPE_NONE: 0,
  ALERT_ACTION_TYPE_DELETE: 1,
  ALERT_ACTION_TYPE_CREATE: 2,
  ALERT_ACTION_TYPE_UPDATE: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeActionParam = {
  VOLUME_ACTION_PARAM_NONE: 0,
  VOLUME_ACTION_PARAM_OFF: 1,
  VOLUME_ACTION_PARAM_ON: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.CosType = {
  NONE: 0,
  LOW: 1,
  MEDIUM: 2,
  HIGH: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.IoProfile = {
  IO_PROFILE_SEQUENTIAL: 0,
  IO_PROFILE_RANDOM: 1,
  IO_PROFILE_DB: 2,
  IO_PROFILE_DB_REMOTE: 3,
  IO_PROFILE_CMS: 4,
  IO_PROFILE_SYNC_SHARED: 5,
  IO_PROFILE_AUTO: 6,
  IO_PROFILE_NONE: 7,
  IO_PROFILE_JOURNAL: 8,
  IO_PROFILE_AUTO_JOURNAL: 9
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeState = {
  VOLUME_STATE_NONE: 0,
  VOLUME_STATE_PENDING: 1,
  VOLUME_STATE_AVAILABLE: 2,
  VOLUME_STATE_ATTACHED: 3,
  VOLUME_STATE_DETACHED: 4,
  VOLUME_STATE_DETATCHING: 5,
  VOLUME_STATE_ERROR: 6,
  VOLUME_STATE_DELETED: 7,
  VOLUME_STATE_TRY_DETACHING: 8,
  VOLUME_STATE_RESTORE: 9
};

/**
 * @enum {number}
 */
proto.openstorage.api.VolumeStatus = {
  VOLUME_STATUS_NONE: 0,
  VOLUME_STATUS_NOT_PRESENT: 1,
  VOLUME_STATUS_UP: 2,
  VOLUME_STATUS_DOWN: 3,
  VOLUME_STATUS_DEGRADED: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.FilesystemHealthStatus = {
  FS_HEALTH_STATUS_UNKNOWN: 0,
  FS_HEALTH_STATUS_HEALTHY: 1,
  FS_HEALTH_STATUS_SAFE_TO_FIX: 2,
  FS_HEALTH_STATUS_NEEDS_INSPECTION: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.StorageMedium = {
  STORAGE_MEDIUM_MAGNETIC: 0,
  STORAGE_MEDIUM_SSD: 1,
  STORAGE_MEDIUM_NVME: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.AttachState = {
  ATTACH_STATE_EXTERNAL: 0,
  ATTACH_STATE_INTERNAL: 1,
  ATTACH_STATE_INTERNAL_SWITCH: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.OperationFlags = {
  OP_FLAGS_UNKNOWN: 0,
  OP_FLAGS_NONE: 1,
  OP_FLAGS_DETACH_FORCE: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.HardwareType = {
  UNKNOWNMACHINE: 0,
  VIRTUALMACHINE: 1,
  BAREMETALMACHINE: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.ExportProtocol = {
  INVALID: 0,
  PXD: 1,
  ISCSI: 2,
  NFS: 3,
  CUSTOM: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.ProxyProtocol = {
  PROXY_PROTOCOL_INVALID: 0,
  PROXY_PROTOCOL_NFS: 1,
  PROXY_PROTOCOL_S3: 2,
  PROXY_PROTOCOL_PXD: 3,
  PROXY_PROTOCOL_PURE_BLOCK: 4,
  PROXY_PROTOCOL_PURE_FILE: 5
};

/**
 * @enum {number}
 */
proto.openstorage.api.FastpathStatus = {
  FASTPATH_UNKNOWN: 0,
  FASTPATH_ACTIVE: 1,
  FASTPATH_INACTIVE: 2,
  FASTPATH_UNSUPPORTED: 3,
  FASTPATH_PENDING: 4,
  FASTPATH_ERRORED: 5
};

/**
 * @enum {number}
 */
proto.openstorage.api.FastpathProtocol = {
  FASTPATH_PROTO_UNKNOWN: 0,
  FASTPATH_PROTO_NVMEOF_TCP: 1,
  FASTPATH_PROTO_ISCSI: 2,
  FASTPATH_PROTO_LOCAL: 3
};

/**
 * @enum {number}
 */
proto.openstorage.api.NearSyncReplicationStrategy = {
  NEAR_SYNC_STRATEGY_NONE: 0,
  NEAR_SYNC_STRATEGY_AGGRESSIVE: 1,
  NEAR_SYNC_STRATEGY_OPTIMIZED: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.AnonymousBucketAccessMode = {
  UNKNOWNBUCKETACCESSMODE: 0,
  PRIVATE: 1,
  READONLY: 2,
  WRITEONLY: 3,
  READWRITE: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkTimeWeekday = {
  SDKTIMEWEEKDAYSUNDAY: 0,
  SDKTIMEWEEKDAYMONDAY: 1,
  SDKTIMEWEEKDAYTUESDAY: 2,
  SDKTIMEWEEKDAYWEDNESDAY: 3,
  SDKTIMEWEEKDAYTHURSDAY: 4,
  SDKTIMEWEEKDAYFRIDAY: 5,
  SDKTIMEWEEKDAYSATURDAY: 6
};

/**
 * @enum {number}
 */
proto.openstorage.api.StorageRebalanceJobState = {
  PENDING: 0,
  RUNNING: 1,
  DONE: 2,
  PAUSED: 3,
  CANCELLED: 4
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCloudBackupClusterType = {
  SDKCLOUDBACKUPCLUSTERUNKNOWN: 0,
  SDKCLOUDBACKUPCLUSTERCURRENT: 1,
  SDKCLOUDBACKUPCLUSTEROTHER: 2
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCloudBackupOpType = {
  SDKCLOUDBACKUPOPTYPEUNKNOWN: 0,
  SDKCLOUDBACKUPOPTYPEBACKUPOP: 1,
  SDKCLOUDBACKUPOPTYPERESTOREOP: 2,
  SDKNEARSYNCOPTYPECLONEOP: 3,
  SDKNEARSYNCOPTYPEREPLADDOP: 4,
  SDKNEARSYNCOPTYPERESTOREOP: 5
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCloudBackupStatusType = {
  SDKCLOUDBACKUPSTATUSTYPEUNKNOWN: 0,
  SDKCLOUDBACKUPSTATUSTYPENOTSTARTED: 1,
  SDKCLOUDBACKUPSTATUSTYPEDONE: 2,
  SDKCLOUDBACKUPSTATUSTYPEABORTED: 3,
  SDKCLOUDBACKUPSTATUSTYPEPAUSED: 4,
  SDKCLOUDBACKUPSTATUSTYPESTOPPED: 5,
  SDKCLOUDBACKUPSTATUSTYPEACTIVE: 6,
  SDKCLOUDBACKUPSTATUSTYPEFAILED: 7,
  SDKCLOUDBACKUPSTATUSTYPEQUEUED: 8,
  SDKCLOUDBACKUPSTATUSTYPEINVALID: 9,
  SDKNEARSYNCSTATUSTYPENOTSTARTED: 10,
  SDKNEARSYNCSTATUSTYPEDONE: 11,
  SDKNEARSYNCSTATUSTYPEPAUSED: 12,
  SDKNEARSYNCSTATUSTYPESTOPPED: 13,
  SDKNEARSYNCSTATUSTYPEACTIVE: 14,
  SDKNEARSYNCSTATUSTYPEFAILED: 15,
  SDKNEARSYNCSTATUSTYPEINVALID: 16
};

/**
 * @enum {number}
 */
proto.openstorage.api.SdkCloudBackupRequestedState = {
  SDKCLOUDBACKUPREQUESTEDSTATEUNKNOWN: 0,
  SDKCLOUDBACKUPREQUESTEDSTATEPAUSE: 1,
  SDKCLOUDBACKUPREQUESTEDSTATERESUME: 2,
  SDKCLOUDBACKUPREQUESTEDSTATESTOP: 3,
  SDKNEARSYNCREQUESTEDSTATEPAUSE: 4,
  SDKNEARSYNCREQUESTEDSTATERESUME: 5,
  SDKNEARSYNCREQUESTEDSTATESTOP: 6
};

/**
 * @enum {number}
 */
proto.openstorage.api.EnforcementType = {
  REQUIRED: 0,
  PREFERRED: 1
};

/**
 * @enum {number}
 */
proto.openstorage.api.RestoreParamBoolType = {
  PARAM_BKUPSRC: 0,
  PARAM_FALSE: 1,
  PARAM_TRUE: 2
};

goog.object.extend(exports, proto.openstorage.api);
